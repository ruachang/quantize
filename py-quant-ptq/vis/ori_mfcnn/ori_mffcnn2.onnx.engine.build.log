&&&& RUNNING TensorRT.trtexec [TensorRT v8503] # trtexec --verbose --nvtxMode=verbose --buildOnly --workspace=8192 --onnx=/home/developers/liuchang/quantize/py-quant-ptq/ori_mffcnn2.onnx --saveEngine=/home/developers/liuchang/quantize/py-quant-ptq/vis/ori_mfcnn/ori_mffcnn2.onnx.engine --timingCacheFile=./timing.cache --profilingVerbosity=detailed
[03/01/2023-14:28:57] [W] --workspace flag has been deprecated by --memPoolSize flag.
[03/01/2023-14:28:57] [W] --nvtxMode flag has been deprecated by --profilingVerbosity flag.
[03/01/2023-14:28:57] [I] === Model Options ===
[03/01/2023-14:28:57] [I] Format: ONNX
[03/01/2023-14:28:57] [I] Model: /home/developers/liuchang/quantize/py-quant-ptq/ori_mffcnn2.onnx
[03/01/2023-14:28:57] [I] Output:
[03/01/2023-14:28:57] [I] === Build Options ===
[03/01/2023-14:28:57] [I] Max batch: explicit batch
[03/01/2023-14:28:57] [I] Memory Pools: workspace: 8192 MiB, dlaSRAM: default, dlaLocalDRAM: default, dlaGlobalDRAM: default
[03/01/2023-14:28:57] [I] minTiming: 1
[03/01/2023-14:28:57] [I] avgTiming: 8
[03/01/2023-14:28:57] [I] Precision: FP32
[03/01/2023-14:28:57] [I] LayerPrecisions: 
[03/01/2023-14:28:57] [I] Calibration: 
[03/01/2023-14:28:57] [I] Refit: Disabled
[03/01/2023-14:28:57] [I] Sparsity: Disabled
[03/01/2023-14:28:57] [I] Safe mode: Disabled
[03/01/2023-14:28:57] [I] DirectIO mode: Disabled
[03/01/2023-14:28:57] [I] Restricted mode: Disabled
[03/01/2023-14:28:57] [I] Build only: Enabled
[03/01/2023-14:28:57] [I] Save engine: /home/developers/liuchang/quantize/py-quant-ptq/vis/ori_mfcnn/ori_mffcnn2.onnx.engine
[03/01/2023-14:28:57] [I] Load engine: 
[03/01/2023-14:28:57] [I] Profiling verbosity: 2
[03/01/2023-14:28:57] [I] Tactic sources: Using default tactic sources
[03/01/2023-14:28:57] [I] timingCacheMode: global
[03/01/2023-14:28:57] [I] timingCacheFile: ./timing.cache
[03/01/2023-14:28:57] [I] Heuristic: Disabled
[03/01/2023-14:28:57] [I] Preview Features: Use default preview flags.
[03/01/2023-14:28:57] [I] Input(s)s format: fp32:CHW
[03/01/2023-14:28:57] [I] Output(s)s format: fp32:CHW
[03/01/2023-14:28:57] [I] Input build shapes: model
[03/01/2023-14:28:57] [I] Input calibration shapes: model
[03/01/2023-14:28:57] [I] === System Options ===
[03/01/2023-14:28:57] [I] Device: 0
[03/01/2023-14:28:57] [I] DLACore: 
[03/01/2023-14:28:57] [I] Plugins:
[03/01/2023-14:28:57] [I] === Inference Options ===
[03/01/2023-14:28:57] [I] Batch: Explicit
[03/01/2023-14:28:57] [I] Input inference shapes: model
[03/01/2023-14:28:57] [I] Iterations: 10
[03/01/2023-14:28:57] [I] Duration: 3s (+ 200ms warm up)
[03/01/2023-14:28:57] [I] Sleep time: 0ms
[03/01/2023-14:28:57] [I] Idle time: 0ms
[03/01/2023-14:28:57] [I] Streams: 1
[03/01/2023-14:28:57] [I] ExposeDMA: Disabled
[03/01/2023-14:28:57] [I] Data transfers: Enabled
[03/01/2023-14:28:57] [I] Spin-wait: Disabled
[03/01/2023-14:28:57] [I] Multithreading: Disabled
[03/01/2023-14:28:57] [I] CUDA Graph: Disabled
[03/01/2023-14:28:57] [I] Separate profiling: Disabled
[03/01/2023-14:28:57] [I] Time Deserialize: Disabled
[03/01/2023-14:28:57] [I] Time Refit: Disabled
[03/01/2023-14:28:57] [I] NVTX verbosity: 2
[03/01/2023-14:28:57] [I] Persistent Cache Ratio: 0
[03/01/2023-14:28:57] [I] Inputs:
[03/01/2023-14:28:57] [I] === Reporting Options ===
[03/01/2023-14:28:57] [I] Verbose: Enabled
[03/01/2023-14:28:57] [I] Averages: 10 inferences
[03/01/2023-14:28:57] [I] Percentiles: 90,95,99
[03/01/2023-14:28:57] [I] Dump refittable layers:Disabled
[03/01/2023-14:28:57] [I] Dump output: Disabled
[03/01/2023-14:28:57] [I] Profile: Disabled
[03/01/2023-14:28:57] [I] Export timing to JSON file: 
[03/01/2023-14:28:57] [I] Export output to JSON file: 
[03/01/2023-14:28:57] [I] Export profile to JSON file: 
[03/01/2023-14:28:57] [I] 
[03/01/2023-14:28:57] [I] === Device Information ===
[03/01/2023-14:28:57] [I] Selected Device: NVIDIA GeForce RTX 3080 Ti
[03/01/2023-14:28:57] [I] Compute Capability: 8.6
[03/01/2023-14:28:57] [I] SMs: 80
[03/01/2023-14:28:57] [I] Compute Clock Rate: 1.665 GHz
[03/01/2023-14:28:57] [I] Device Global Memory: 12053 MiB
[03/01/2023-14:28:57] [I] Shared Memory per SM: 100 KiB
[03/01/2023-14:28:57] [I] Memory Bus Width: 384 bits (ECC disabled)
[03/01/2023-14:28:57] [I] Memory Clock Rate: 9.501 GHz
[03/01/2023-14:28:57] [I] 
[03/01/2023-14:28:57] [I] TensorRT version: 8.5.3
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::BatchedNMSDynamic_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::BatchedNMS_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::BatchTilePlugin_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::Clip_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::CoordConvAC version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::CropAndResizeDynamic version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::CropAndResize version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::DecodeBbox3DPlugin version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::DetectionLayer_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::EfficientNMS_Explicit_TF_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::EfficientNMS_Implicit_TF_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::EfficientNMS_ONNX_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::EfficientNMS_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::FlattenConcat_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::fMHA_V2 version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::fMHCA version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::GenerateDetection_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::GridAnchor_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::GridAnchorRect_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::GroupNorm version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::InstanceNormalization_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::InstanceNormalization_TRT version 2
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::LayerNorm version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::LReLU_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::MultilevelCropAndResize_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::MultilevelProposeROI_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::MultiscaleDeformableAttnPlugin_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::NMSDynamic_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::NMS_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::Normalize_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::PillarScatterPlugin version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::PriorBox_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::ProposalDynamic version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::ProposalLayer_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::Proposal version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::PyramidROIAlign_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::Region_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::Reorg_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::ResizeNearest_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::ROIAlign_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::RPROI_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::ScatterND version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::SeqLen2Spatial version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::SpecialSlice_TRT version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::SplitGeLU version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::Split version 1
[03/01/2023-14:28:57] [V] [TRT] Registered plugin creator - ::VoxelGeneratorPlugin version 1
[03/01/2023-14:29:00] [I] [TRT] [MemUsageChange] Init CUDA: CPU +327, GPU +0, now: CPU 338, GPU 8208 (MiB)
[03/01/2023-14:29:01] [V] [TRT] Trying to load shared library libnvinfer_builder_resource.so.8.5.3
[03/01/2023-14:29:01] [V] [TRT] Loaded shared library libnvinfer_builder_resource.so.8.5.3
[03/01/2023-14:29:04] [I] [TRT] [MemUsageChange] Init builder kernel library: CPU +441, GPU +118, now: CPU 832, GPU 8326 (MiB)
[03/01/2023-14:29:04] [W] [TRT] CUDA lazy loading is not enabled. Enabling it can significantly reduce device memory usage. See `CUDA_MODULE_LOADING` in https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#env-vars
[03/01/2023-14:29:04] [I] Start parsing network model
[03/01/2023-14:29:04] [I] [TRT] ----------------------------------------------------------------
[03/01/2023-14:29:04] [I] [TRT] Input filename:   /home/developers/liuchang/quantize/py-quant-ptq/ori_mffcnn2.onnx
[03/01/2023-14:29:04] [I] [TRT] ONNX IR version:  0.0.6
[03/01/2023-14:29:04] [I] [TRT] Opset version:    13
[03/01/2023-14:29:04] [I] [TRT] Producer name:    pytorch
[03/01/2023-14:29:04] [I] [TRT] Producer version: 1.8
[03/01/2023-14:29:04] [I] [TRT] Domain:           
[03/01/2023-14:29:04] [I] [TRT] Model version:    0
[03/01/2023-14:29:04] [I] [TRT] Doc string:       
[03/01/2023-14:29:04] [I] [TRT] ----------------------------------------------------------------
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::BatchedNMSDynamic_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::BatchedNMS_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::BatchTilePlugin_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::Clip_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::CoordConvAC version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::CropAndResizeDynamic version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::CropAndResize version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::DecodeBbox3DPlugin version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::DetectionLayer_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::EfficientNMS_Explicit_TF_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::EfficientNMS_Implicit_TF_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::EfficientNMS_ONNX_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::EfficientNMS_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::FlattenConcat_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::fMHA_V2 version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::fMHCA version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::GenerateDetection_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::GridAnchor_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::GridAnchorRect_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::GroupNorm version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::InstanceNormalization_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::InstanceNormalization_TRT version 2
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::LayerNorm version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::LReLU_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::MultilevelCropAndResize_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::MultilevelProposeROI_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::MultiscaleDeformableAttnPlugin_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::NMSDynamic_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::NMS_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::Normalize_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::PillarScatterPlugin version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::PriorBox_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::ProposalDynamic version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::ProposalLayer_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::Proposal version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::PyramidROIAlign_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::Region_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::Reorg_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::ResizeNearest_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::ROIAlign_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::RPROI_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::ScatterND version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::SeqLen2Spatial version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::SpecialSlice_TRT version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::SplitGeLU version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::Split version 1
[03/01/2023-14:29:04] [V] [TRT] Plugin creator already registered - ::VoxelGeneratorPlugin version 1
[03/01/2023-14:29:04] [V] [TRT] Adding network input: input with dtype: float32, dimensions: (1, 1, 60, 60)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: input for ONNX tensor: input
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: attention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: attention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: attention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: classfier1.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: classfier1.bias
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: classfier2.weight
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: classfier2.bias
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 801
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 802
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 804
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 805
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 807
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 808
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 810
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 811
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 813
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 814
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 816
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 817
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 819
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 820
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 822
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 823
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 825
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 826
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 828
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 829
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 831
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 832
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 834
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 835
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 837
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 838
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 840
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 841
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 843
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 844
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 846
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 847
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 849
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 850
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 852
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 853
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 855
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 856
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 858
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 859
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 861
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 862
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 864
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 865
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 867
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 868
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 870
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 871
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 873
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 874
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 876
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 877
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 879
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 880
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 882
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 883
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 885
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 886
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 888
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 889
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 891
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 892
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 894
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 895
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 897
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 898
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 900
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 901
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 903
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 904
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 906
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 907
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 909
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 910
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 912
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 913
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 915
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 916
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 918
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 919
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 921
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 922
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 924
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 925
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 927
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 928
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 930
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 931
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 933
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 934
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 936
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 937
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 939
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 940
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 942
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 943
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 945
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 946
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 948
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 949
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 951
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 952
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 954
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 955
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 957
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 958
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 960
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 961
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 963
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 964
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 966
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 967
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 969
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 970
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 972
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 973
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 975
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 976
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 978
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 979
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 981
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 982
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 984
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 985
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 987
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 988
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 990
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 991
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 993
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 994
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 996
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 997
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 999
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1000
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1002
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1003
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1005
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1006
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1008
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1009
[03/01/2023-14:29:04] [V] [TRT] Importing initializer: 1010
[03/01/2023-14:29:04] [W] [TRT] onnx2trt_utils.cpp:377: Your ONNX model has been generated with INT64 weights, while TensorRT does not natively support INT64. Attempting to cast down to INT32.
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_0 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 801
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 802
[03/01/2023-14:29:04] [V] [TRT] Conv_0 [Conv] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [801 -> (64, 1, 3, 3)[FLOAT]], [802 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 60, 60)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_0 for ONNX node: Conv_0
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 58, 58)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 800 for ONNX tensor: 800
[03/01/2023-14:29:04] [V] [TRT] Conv_0 [Conv] outputs: [800 -> (1, 64, 58, 58)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_1 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 800
[03/01/2023-14:29:04] [V] [TRT] Relu_1 [Relu] inputs: [800 -> (1, 64, 58, 58)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_1 for ONNX node: Relu_1
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 73 for ONNX tensor: 73
[03/01/2023-14:29:04] [V] [TRT] Relu_1 [Relu] outputs: [73 -> (1, 64, 58, 58)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_2 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 73
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 804
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 805
[03/01/2023-14:29:04] [V] [TRT] Conv_2 [Conv] inputs: [73 -> (1, 64, 58, 58)[FLOAT]], [804 -> (64, 64, 3, 3)[FLOAT]], [805 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 58, 58)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_2 for ONNX node: Conv_2
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 56, 56)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 803 for ONNX tensor: 803
[03/01/2023-14:29:04] [V] [TRT] Conv_2 [Conv] outputs: [803 -> (1, 64, 56, 56)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_3 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 803
[03/01/2023-14:29:04] [V] [TRT] Relu_3 [Relu] inputs: [803 -> (1, 64, 56, 56)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_3 for ONNX node: Relu_3
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 76 for ONNX tensor: 76
[03/01/2023-14:29:04] [V] [TRT] Relu_3 [Relu] outputs: [76 -> (1, 64, 56, 56)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_4 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 76
[03/01/2023-14:29:04] [V] [TRT] MaxPool_4 [MaxPool] inputs: [76 -> (1, 64, 56, 56)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_4 for ONNX node: MaxPool_4
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 77 for ONNX tensor: 77
[03/01/2023-14:29:04] [V] [TRT] MaxPool_4 [MaxPool] outputs: [77 -> (1, 64, 28, 28)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_5 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 77
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 807
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 808
[03/01/2023-14:29:04] [V] [TRT] Conv_5 [Conv] inputs: [77 -> (1, 64, 28, 28)[FLOAT]], [807 -> (128, 64, 3, 3)[FLOAT]], [808 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 28, 28)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_5 for ONNX node: Conv_5
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 26, 26)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 806 for ONNX tensor: 806
[03/01/2023-14:29:04] [V] [TRT] Conv_5 [Conv] outputs: [806 -> (1, 128, 26, 26)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_6 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 806
[03/01/2023-14:29:04] [V] [TRT] Relu_6 [Relu] inputs: [806 -> (1, 128, 26, 26)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_6 for ONNX node: Relu_6
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 80 for ONNX tensor: 80
[03/01/2023-14:29:04] [V] [TRT] Relu_6 [Relu] outputs: [80 -> (1, 128, 26, 26)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_7 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 80
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 810
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 811
[03/01/2023-14:29:04] [V] [TRT] Conv_7 [Conv] inputs: [80 -> (1, 128, 26, 26)[FLOAT]], [810 -> (128, 128, 3, 3)[FLOAT]], [811 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 26, 26)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_7 for ONNX node: Conv_7
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 809 for ONNX tensor: 809
[03/01/2023-14:29:04] [V] [TRT] Conv_7 [Conv] outputs: [809 -> (1, 128, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_8 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 809
[03/01/2023-14:29:04] [V] [TRT] Relu_8 [Relu] inputs: [809 -> (1, 128, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_8 for ONNX node: Relu_8
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 83 for ONNX tensor: 83
[03/01/2023-14:29:04] [V] [TRT] Relu_8 [Relu] outputs: [83 -> (1, 128, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_9 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 83
[03/01/2023-14:29:04] [V] [TRT] MaxPool_9 [MaxPool] inputs: [83 -> (1, 128, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_9 for ONNX node: MaxPool_9
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 84 for ONNX tensor: 84
[03/01/2023-14:29:04] [V] [TRT] MaxPool_9 [MaxPool] outputs: [84 -> (1, 128, 12, 12)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Shape_10 [Shape]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 84
[03/01/2023-14:29:04] [V] [TRT] Shape_10 [Shape] inputs: [84 -> (1, 128, 12, 12)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Shape_10 for ONNX node: Shape_10
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 86 for ONNX tensor: 86
[03/01/2023-14:29:04] [V] [TRT] Shape_10 [Shape] outputs: [86 -> (4)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_11 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_11 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_11 [Constant] outputs: [87 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_12 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_12 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_12 [Constant] outputs: [88 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_13 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_13 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_13 [Constant] outputs: [89 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_14 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 86
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 88
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 89
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 87
[03/01/2023-14:29:04] [V] [TRT] Slice_14 [Slice] inputs: [86 -> (4)[INT32]], [88 -> (1)[INT32]], [89 -> (1)[INT32]], [87 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_14 for ONNX node: Slice_14
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 90 for ONNX tensor: 90
[03/01/2023-14:29:04] [V] [TRT] Slice_14 [Slice] outputs: [90 -> (2)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_15 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 90
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1010
[03/01/2023-14:29:04] [V] [TRT] Concat_15 [Concat] inputs: [90 -> (2)[INT32]], [1010 -> (2)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: 1010 for ONNX node: 1010
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_15 for ONNX node: Concat_15
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 92 for ONNX tensor: 92
[03/01/2023-14:29:04] [V] [TRT] Concat_15 [Concat] outputs: [92 -> (4)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Resize_16 [Resize]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 84
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 92
[03/01/2023-14:29:04] [V] [TRT] Resize_16 [Resize] inputs: [84 -> (1, 128, 12, 12)[FLOAT]], [optional input, not set], [optional input, not set], [92 -> (4)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Resize_16 for ONNX node: Resize_16
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 95 for ONNX tensor: 95
[03/01/2023-14:29:04] [V] [TRT] Resize_16 [Resize] outputs: [95 -> (1, 128, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_17 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 84
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 813
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 814
[03/01/2023-14:29:04] [V] [TRT] Conv_17 [Conv] inputs: [84 -> (1, 128, 12, 12)[FLOAT]], [813 -> (256, 128, 3, 3)[FLOAT]], [814 -> (256)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 12, 12)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_17 for ONNX node: Conv_17
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 256
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 256, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 812 for ONNX tensor: 812
[03/01/2023-14:29:04] [V] [TRT] Conv_17 [Conv] outputs: [812 -> (1, 256, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_18 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 812
[03/01/2023-14:29:04] [V] [TRT] Relu_18 [Relu] inputs: [812 -> (1, 256, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_18 for ONNX node: Relu_18
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 98 for ONNX tensor: 98
[03/01/2023-14:29:04] [V] [TRT] Relu_18 [Relu] outputs: [98 -> (1, 256, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_19 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 98
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 816
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 817
[03/01/2023-14:29:04] [V] [TRT] Conv_19 [Conv] inputs: [98 -> (1, 256, 10, 10)[FLOAT]], [816 -> (256, 256, 3, 3)[FLOAT]], [817 -> (256)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 256, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_19 for ONNX node: Conv_19
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 256
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 256, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 815 for ONNX tensor: 815
[03/01/2023-14:29:04] [V] [TRT] Conv_19 [Conv] outputs: [815 -> (1, 256, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_20 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 815
[03/01/2023-14:29:04] [V] [TRT] Relu_20 [Relu] inputs: [815 -> (1, 256, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_20 for ONNX node: Relu_20
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 101 for ONNX tensor: 101
[03/01/2023-14:29:04] [V] [TRT] Relu_20 [Relu] outputs: [101 -> (1, 256, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_21 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 101
[03/01/2023-14:29:04] [V] [TRT] MaxPool_21 [MaxPool] inputs: [101 -> (1, 256, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_21 for ONNX node: MaxPool_21
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 102 for ONNX tensor: 102
[03/01/2023-14:29:04] [V] [TRT] MaxPool_21 [MaxPool] outputs: [102 -> (1, 256, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_22 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 102
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 95
[03/01/2023-14:29:04] [V] [TRT] Concat_22 [Concat] inputs: [102 -> (1, 256, 4, 4)[FLOAT]], [95 -> (1, 128, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_22 for ONNX node: Concat_22
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 103 for ONNX tensor: 103
[03/01/2023-14:29:04] [V] [TRT] Concat_22 [Concat] outputs: [103 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_23 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 103
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_23 [ReduceMean] inputs: [103 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_23 for ONNX node: ReduceMean_23
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 104 for ONNX tensor: 104
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_23 [ReduceMean] outputs: [104 -> (1, 1, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_24 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 103
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_24 [ReduceMax] inputs: [103 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_24 for ONNX node: ReduceMax_24
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 105 for ONNX tensor: 105
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_24 [ReduceMax] outputs: [105 -> (1, 1, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_25 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 104
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 105
[03/01/2023-14:29:04] [V] [TRT] Concat_25 [Concat] inputs: [104 -> (1, 1, 4, 4)[FLOAT]], [105 -> (1, 1, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_25 for ONNX node: Concat_25
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 106 for ONNX tensor: 106
[03/01/2023-14:29:04] [V] [TRT] Concat_25 [Concat] outputs: [106 -> (1, 2, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_26 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 106
[03/01/2023-14:29:04] [V] [TRT] Searching for input: attention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_26 [Conv] inputs: [106 -> (1, 2, 4, 4)[FLOAT]], [attention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 4, 4)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_26 for ONNX node: Conv_26
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 4, 4)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 107 for ONNX tensor: 107
[03/01/2023-14:29:04] [V] [TRT] Conv_26 [Conv] outputs: [107 -> (1, 1, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_27 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 107
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_27 [Sigmoid] inputs: [107 -> (1, 1, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_27 for ONNX node: Sigmoid_27
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 108 for ONNX tensor: 108
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_27 [Sigmoid] outputs: [108 -> (1, 1, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_28 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 103
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 108
[03/01/2023-14:29:04] [V] [TRT] Mul_28 [Mul] inputs: [103 -> (1, 384, 4, 4)[FLOAT]], [108 -> (1, 1, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_28 for ONNX node: Mul_28
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 109 for ONNX tensor: 109
[03/01/2023-14:29:04] [V] [TRT] Mul_28 [Mul] outputs: [109 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_29 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 109
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_29 [GlobalAveragePool] inputs: [109 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_29 for ONNX node: GlobalAveragePool_29
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 110 for ONNX tensor: 110
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_29 [GlobalAveragePool] outputs: [110 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_30 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 110
[03/01/2023-14:29:04] [V] [TRT] Searching for input: attention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_30 [Conv] inputs: [110 -> (1, 384, 1, 1)[FLOAT]], [attention_channel.fc.0.weight -> (24, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 384, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_30 for ONNX node: Conv_30
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 24
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 24, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 111 for ONNX tensor: 111
[03/01/2023-14:29:04] [V] [TRT] Conv_30 [Conv] outputs: [111 -> (1, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_31 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 111
[03/01/2023-14:29:04] [V] [TRT] Relu_31 [Relu] inputs: [111 -> (1, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_31 for ONNX node: Relu_31
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 112 for ONNX tensor: 112
[03/01/2023-14:29:04] [V] [TRT] Relu_31 [Relu] outputs: [112 -> (1, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_32 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 112
[03/01/2023-14:29:04] [V] [TRT] Searching for input: attention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_32 [Conv] inputs: [112 -> (1, 24, 1, 1)[FLOAT]], [attention_channel.fc.2.weight -> (384, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 24, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_32 for ONNX node: Conv_32
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 384
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 384, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 113 for ONNX tensor: 113
[03/01/2023-14:29:04] [V] [TRT] Conv_32 [Conv] outputs: [113 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_33 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 109
[03/01/2023-14:29:04] [V] [TRT] MaxPool_33 [MaxPool] inputs: [109 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_33 for ONNX node: MaxPool_33
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 114 for ONNX tensor: 114
[03/01/2023-14:29:04] [V] [TRT] MaxPool_33 [MaxPool] outputs: [114 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_34 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 114
[03/01/2023-14:29:04] [V] [TRT] Searching for input: attention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_34 [Conv] inputs: [114 -> (1, 384, 1, 1)[FLOAT]], [attention_channel.fc.0.weight -> (24, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 384, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_34 for ONNX node: Conv_34
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 24
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 24, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 115 for ONNX tensor: 115
[03/01/2023-14:29:04] [V] [TRT] Conv_34 [Conv] outputs: [115 -> (1, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_35 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 115
[03/01/2023-14:29:04] [V] [TRT] Relu_35 [Relu] inputs: [115 -> (1, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_35 for ONNX node: Relu_35
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 116 for ONNX tensor: 116
[03/01/2023-14:29:04] [V] [TRT] Relu_35 [Relu] outputs: [116 -> (1, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_36 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 116
[03/01/2023-14:29:04] [V] [TRT] Searching for input: attention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_36 [Conv] inputs: [116 -> (1, 24, 1, 1)[FLOAT]], [attention_channel.fc.2.weight -> (384, 24, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 24, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_36 for ONNX node: Conv_36
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 384
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 384, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 117 for ONNX tensor: 117
[03/01/2023-14:29:04] [V] [TRT] Conv_36 [Conv] outputs: [117 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_37 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 113
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 117
[03/01/2023-14:29:04] [V] [TRT] Add_37 [Add] inputs: [113 -> (1, 384, 1, 1)[FLOAT]], [117 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_37 for ONNX node: Add_37
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 118 for ONNX tensor: 118
[03/01/2023-14:29:04] [V] [TRT] Add_37 [Add] outputs: [118 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_38 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 118
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_38 [Sigmoid] inputs: [118 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_38 for ONNX node: Sigmoid_38
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 119 for ONNX tensor: 119
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_38 [Sigmoid] outputs: [119 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_39 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 109
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 119
[03/01/2023-14:29:04] [V] [TRT] Mul_39 [Mul] inputs: [109 -> (1, 384, 4, 4)[FLOAT]], [119 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_39 for ONNX node: Mul_39
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 120 for ONNX tensor: 120
[03/01/2023-14:29:04] [V] [TRT] Mul_39 [Mul] outputs: [120 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_40 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 120
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_40 [GlobalAveragePool] inputs: [120 -> (1, 384, 4, 4)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_40 for ONNX node: GlobalAveragePool_40
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 121 for ONNX tensor: 121
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_40 [GlobalAveragePool] outputs: [121 -> (1, 384, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_41 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_41 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_41 [Constant] outputs: [122 -> (2)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Reshape_42 [Reshape]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 121
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 122
[03/01/2023-14:29:04] [V] [TRT] Reshape_42 [Reshape] inputs: [121 -> (1, 384, 1, 1)[FLOAT]], [122 -> (2)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Reshape_42 for ONNX node: Reshape_42
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 123 for ONNX tensor: 123
[03/01/2023-14:29:04] [V] [TRT] Reshape_42 [Reshape] outputs: [123 -> (1, 384)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Gemm_43 [Gemm]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 123
[03/01/2023-14:29:04] [V] [TRT] Searching for input: classfier1.weight
[03/01/2023-14:29:04] [V] [TRT] Searching for input: classfier1.bias
[03/01/2023-14:29:04] [V] [TRT] Gemm_43 [Gemm] inputs: [123 -> (1, 384)[FLOAT]], [classfier1.weight -> (6, 384)[FLOAT]], [classfier1.bias -> (6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: classfier1.weight for ONNX node: classfier1.weight
[03/01/2023-14:29:04] [V] [TRT] Using opA: 0 opB: 1
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Gemm_43 for ONNX node: Gemm_43
[03/01/2023-14:29:04] [V] [TRT] Registering layer: classfier1.bias for ONNX node: classfier1.bias
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: output_4 for ONNX tensor: output
[03/01/2023-14:29:04] [V] [TRT] Gemm_43 [Gemm] outputs: [output -> (1, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_44 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_44 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_44 [Constant] outputs: [125 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_45 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_45 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_45 [Constant] outputs: [126 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_46 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_46 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_46 [Constant] outputs: [127 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_47 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_47 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_47 [Constant] outputs: [128 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_48 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 126
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 127
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 125
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 128
[03/01/2023-14:29:04] [V] [TRT] Slice_48 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [126 -> (1)[INT32]], [127 -> (1)[INT32]], [125 -> (1)[INT32]], [128 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_48 for ONNX node: Slice_48
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 129 for ONNX tensor: 129
[03/01/2023-14:29:04] [V] [TRT] Slice_48 [Slice] outputs: [129 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_49 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_49 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_49 [Constant] outputs: [130 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_50 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_50 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_50 [Constant] outputs: [131 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_51 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_51 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_51 [Constant] outputs: [132 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_52 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_52 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_52 [Constant] outputs: [133 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_53 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 129
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 131
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 132
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 130
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 133
[03/01/2023-14:29:04] [V] [TRT] Slice_53 [Slice] inputs: [129 -> (1, 1, 24, 60)[FLOAT]], [131 -> (1)[INT32]], [132 -> (1)[INT32]], [130 -> (1)[INT32]], [133 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_53 for ONNX node: Slice_53
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 134 for ONNX tensor: 134
[03/01/2023-14:29:04] [V] [TRT] Slice_53 [Slice] outputs: [134 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_54 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 134
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 819
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 820
[03/01/2023-14:29:04] [V] [TRT] Conv_54 [Conv] inputs: [134 -> (1, 1, 24, 24)[FLOAT]], [819 -> (64, 1, 3, 3)[FLOAT]], [820 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_54 for ONNX node: Conv_54
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 818 for ONNX tensor: 818
[03/01/2023-14:29:04] [V] [TRT] Conv_54 [Conv] outputs: [818 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_55 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 818
[03/01/2023-14:29:04] [V] [TRT] Relu_55 [Relu] inputs: [818 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_55 for ONNX node: Relu_55
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 137 for ONNX tensor: 137
[03/01/2023-14:29:04] [V] [TRT] Relu_55 [Relu] outputs: [137 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_56 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 137
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 822
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 823
[03/01/2023-14:29:04] [V] [TRT] Conv_56 [Conv] inputs: [137 -> (1, 64, 22, 22)[FLOAT]], [822 -> (64, 64, 3, 3)[FLOAT]], [823 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_56 for ONNX node: Conv_56
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 821 for ONNX tensor: 821
[03/01/2023-14:29:04] [V] [TRT] Conv_56 [Conv] outputs: [821 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_57 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 821
[03/01/2023-14:29:04] [V] [TRT] Relu_57 [Relu] inputs: [821 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_57 for ONNX node: Relu_57
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 140 for ONNX tensor: 140
[03/01/2023-14:29:04] [V] [TRT] Relu_57 [Relu] outputs: [140 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_58 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 140
[03/01/2023-14:29:04] [V] [TRT] MaxPool_58 [MaxPool] inputs: [140 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_58 for ONNX node: MaxPool_58
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 141 for ONNX tensor: 141
[03/01/2023-14:29:04] [V] [TRT] MaxPool_58 [MaxPool] outputs: [141 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_59 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 141
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 825
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 826
[03/01/2023-14:29:04] [V] [TRT] Conv_59 [Conv] inputs: [141 -> (1, 64, 10, 10)[FLOAT]], [825 -> (128, 64, 3, 3)[FLOAT]], [826 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_59 for ONNX node: Conv_59
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 824 for ONNX tensor: 824
[03/01/2023-14:29:04] [V] [TRT] Conv_59 [Conv] outputs: [824 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_60 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 824
[03/01/2023-14:29:04] [V] [TRT] Relu_60 [Relu] inputs: [824 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_60 for ONNX node: Relu_60
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 144 for ONNX tensor: 144
[03/01/2023-14:29:04] [V] [TRT] Relu_60 [Relu] outputs: [144 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_61 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 144
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 828
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 829
[03/01/2023-14:29:04] [V] [TRT] Conv_61 [Conv] inputs: [144 -> (1, 128, 8, 8)[FLOAT]], [828 -> (128, 128, 3, 3)[FLOAT]], [829 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_61 for ONNX node: Conv_61
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 827 for ONNX tensor: 827
[03/01/2023-14:29:04] [V] [TRT] Conv_61 [Conv] outputs: [827 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_62 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 827
[03/01/2023-14:29:04] [V] [TRT] Relu_62 [Relu] inputs: [827 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_62 for ONNX node: Relu_62
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 147 for ONNX tensor: 147
[03/01/2023-14:29:04] [V] [TRT] Relu_62 [Relu] outputs: [147 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_63 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 147
[03/01/2023-14:29:04] [V] [TRT] MaxPool_63 [MaxPool] inputs: [147 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_63 for ONNX node: MaxPool_63
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 148 for ONNX tensor: 148
[03/01/2023-14:29:04] [V] [TRT] MaxPool_63 [MaxPool] outputs: [148 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_64 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 148
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_64 [ReduceMean] inputs: [148 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_64 for ONNX node: ReduceMean_64
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 149 for ONNX tensor: 149
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_64 [ReduceMean] outputs: [149 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_65 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 148
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_65 [ReduceMax] inputs: [148 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_65 for ONNX node: ReduceMax_65
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 150 for ONNX tensor: 150
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_65 [ReduceMax] outputs: [150 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_66 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 149
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 150
[03/01/2023-14:29:04] [V] [TRT] Concat_66 [Concat] inputs: [149 -> (1, 1, 3, 3)[FLOAT]], [150 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_66 for ONNX node: Concat_66
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 151 for ONNX tensor: 151
[03/01/2023-14:29:04] [V] [TRT] Concat_66 [Concat] outputs: [151 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_67 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 151
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_67 [Conv] inputs: [151 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_67 for ONNX node: Conv_67
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 152 for ONNX tensor: 152
[03/01/2023-14:29:04] [V] [TRT] Conv_67 [Conv] outputs: [152 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_68 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 152
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_68 [Sigmoid] inputs: [152 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_68 for ONNX node: Sigmoid_68
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 153 for ONNX tensor: 153
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_68 [Sigmoid] outputs: [153 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_69 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 148
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 153
[03/01/2023-14:29:04] [V] [TRT] Mul_69 [Mul] inputs: [148 -> (1, 128, 3, 3)[FLOAT]], [153 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_69 for ONNX node: Mul_69
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 154 for ONNX tensor: 154
[03/01/2023-14:29:04] [V] [TRT] Mul_69 [Mul] outputs: [154 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_70 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 154
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_70 [GlobalAveragePool] inputs: [154 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_70 for ONNX node: GlobalAveragePool_70
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 155 for ONNX tensor: 155
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_70 [GlobalAveragePool] outputs: [155 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_71 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 155
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_71 [Conv] inputs: [155 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_71 for ONNX node: Conv_71
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 156 for ONNX tensor: 156
[03/01/2023-14:29:04] [V] [TRT] Conv_71 [Conv] outputs: [156 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_72 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 156
[03/01/2023-14:29:04] [V] [TRT] Relu_72 [Relu] inputs: [156 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_72 for ONNX node: Relu_72
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 157 for ONNX tensor: 157
[03/01/2023-14:29:04] [V] [TRT] Relu_72 [Relu] outputs: [157 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_73 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 157
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_73 [Conv] inputs: [157 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_73 for ONNX node: Conv_73
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 158 for ONNX tensor: 158
[03/01/2023-14:29:04] [V] [TRT] Conv_73 [Conv] outputs: [158 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_74 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 154
[03/01/2023-14:29:04] [V] [TRT] MaxPool_74 [MaxPool] inputs: [154 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_74 for ONNX node: MaxPool_74
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 159 for ONNX tensor: 159
[03/01/2023-14:29:04] [V] [TRT] MaxPool_74 [MaxPool] outputs: [159 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_75 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 159
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_75 [Conv] inputs: [159 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_75 for ONNX node: Conv_75
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 160 for ONNX tensor: 160
[03/01/2023-14:29:04] [V] [TRT] Conv_75 [Conv] outputs: [160 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_76 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 160
[03/01/2023-14:29:04] [V] [TRT] Relu_76 [Relu] inputs: [160 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_76 for ONNX node: Relu_76
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 161 for ONNX tensor: 161
[03/01/2023-14:29:04] [V] [TRT] Relu_76 [Relu] outputs: [161 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_77 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 161
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_77 [Conv] inputs: [161 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_77 for ONNX node: Conv_77
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 162 for ONNX tensor: 162
[03/01/2023-14:29:04] [V] [TRT] Conv_77 [Conv] outputs: [162 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_78 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 158
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 162
[03/01/2023-14:29:04] [V] [TRT] Add_78 [Add] inputs: [158 -> (1, 128, 1, 1)[FLOAT]], [162 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_78 for ONNX node: Add_78
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 163 for ONNX tensor: 163
[03/01/2023-14:29:04] [V] [TRT] Add_78 [Add] outputs: [163 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_79 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 163
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_79 [Sigmoid] inputs: [163 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_79 for ONNX node: Sigmoid_79
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 164 for ONNX tensor: 164
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_79 [Sigmoid] outputs: [164 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_80 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 154
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 164
[03/01/2023-14:29:04] [V] [TRT] Mul_80 [Mul] inputs: [154 -> (1, 128, 3, 3)[FLOAT]], [164 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_80 for ONNX node: Mul_80
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 165 for ONNX tensor: 165
[03/01/2023-14:29:04] [V] [TRT] Mul_80 [Mul] outputs: [165 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_81 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_81 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_81 [Constant] outputs: [166 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_82 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_82 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_82 [Constant] outputs: [167 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_83 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_83 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_83 [Constant] outputs: [168 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_84 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_84 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_84 [Constant] outputs: [169 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_85 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 167
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 168
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 166
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 169
[03/01/2023-14:29:04] [V] [TRT] Slice_85 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [167 -> (1)[INT32]], [168 -> (1)[INT32]], [166 -> (1)[INT32]], [169 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_85 for ONNX node: Slice_85
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 170 for ONNX tensor: 170
[03/01/2023-14:29:04] [V] [TRT] Slice_85 [Slice] outputs: [170 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_86 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_86 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_86 [Constant] outputs: [171 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_87 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_87 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_87 [Constant] outputs: [172 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_88 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_88 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_88 [Constant] outputs: [173 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_89 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_89 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_89 [Constant] outputs: [174 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_90 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 170
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 172
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 173
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 171
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 174
[03/01/2023-14:29:04] [V] [TRT] Slice_90 [Slice] inputs: [170 -> (1, 1, 24, 60)[FLOAT]], [172 -> (1)[INT32]], [173 -> (1)[INT32]], [171 -> (1)[INT32]], [174 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_90 for ONNX node: Slice_90
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 175 for ONNX tensor: 175
[03/01/2023-14:29:04] [V] [TRT] Slice_90 [Slice] outputs: [175 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_91 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 175
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 831
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 832
[03/01/2023-14:29:04] [V] [TRT] Conv_91 [Conv] inputs: [175 -> (1, 1, 24, 24)[FLOAT]], [831 -> (64, 1, 3, 3)[FLOAT]], [832 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_91 for ONNX node: Conv_91
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 830 for ONNX tensor: 830
[03/01/2023-14:29:04] [V] [TRT] Conv_91 [Conv] outputs: [830 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_92 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 830
[03/01/2023-14:29:04] [V] [TRT] Relu_92 [Relu] inputs: [830 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_92 for ONNX node: Relu_92
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 178 for ONNX tensor: 178
[03/01/2023-14:29:04] [V] [TRT] Relu_92 [Relu] outputs: [178 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_93 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 178
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 834
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 835
[03/01/2023-14:29:04] [V] [TRT] Conv_93 [Conv] inputs: [178 -> (1, 64, 22, 22)[FLOAT]], [834 -> (64, 64, 3, 3)[FLOAT]], [835 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_93 for ONNX node: Conv_93
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 833 for ONNX tensor: 833
[03/01/2023-14:29:04] [V] [TRT] Conv_93 [Conv] outputs: [833 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_94 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 833
[03/01/2023-14:29:04] [V] [TRT] Relu_94 [Relu] inputs: [833 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_94 for ONNX node: Relu_94
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 181 for ONNX tensor: 181
[03/01/2023-14:29:04] [V] [TRT] Relu_94 [Relu] outputs: [181 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_95 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 181
[03/01/2023-14:29:04] [V] [TRT] MaxPool_95 [MaxPool] inputs: [181 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_95 for ONNX node: MaxPool_95
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 182 for ONNX tensor: 182
[03/01/2023-14:29:04] [V] [TRT] MaxPool_95 [MaxPool] outputs: [182 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_96 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 182
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 837
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 838
[03/01/2023-14:29:04] [V] [TRT] Conv_96 [Conv] inputs: [182 -> (1, 64, 10, 10)[FLOAT]], [837 -> (128, 64, 3, 3)[FLOAT]], [838 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_96 for ONNX node: Conv_96
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 836 for ONNX tensor: 836
[03/01/2023-14:29:04] [V] [TRT] Conv_96 [Conv] outputs: [836 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_97 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 836
[03/01/2023-14:29:04] [V] [TRT] Relu_97 [Relu] inputs: [836 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_97 for ONNX node: Relu_97
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 185 for ONNX tensor: 185
[03/01/2023-14:29:04] [V] [TRT] Relu_97 [Relu] outputs: [185 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_98 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 185
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 840
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 841
[03/01/2023-14:29:04] [V] [TRT] Conv_98 [Conv] inputs: [185 -> (1, 128, 8, 8)[FLOAT]], [840 -> (128, 128, 3, 3)[FLOAT]], [841 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_98 for ONNX node: Conv_98
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 839 for ONNX tensor: 839
[03/01/2023-14:29:04] [V] [TRT] Conv_98 [Conv] outputs: [839 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_99 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 839
[03/01/2023-14:29:04] [V] [TRT] Relu_99 [Relu] inputs: [839 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_99 for ONNX node: Relu_99
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 188 for ONNX tensor: 188
[03/01/2023-14:29:04] [V] [TRT] Relu_99 [Relu] outputs: [188 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_100 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 188
[03/01/2023-14:29:04] [V] [TRT] MaxPool_100 [MaxPool] inputs: [188 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_100 for ONNX node: MaxPool_100
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 189 for ONNX tensor: 189
[03/01/2023-14:29:04] [V] [TRT] MaxPool_100 [MaxPool] outputs: [189 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_101 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 189
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_101 [ReduceMean] inputs: [189 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_101 for ONNX node: ReduceMean_101
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 190 for ONNX tensor: 190
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_101 [ReduceMean] outputs: [190 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_102 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 189
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_102 [ReduceMax] inputs: [189 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_102 for ONNX node: ReduceMax_102
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 191 for ONNX tensor: 191
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_102 [ReduceMax] outputs: [191 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_103 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 190
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 191
[03/01/2023-14:29:04] [V] [TRT] Concat_103 [Concat] inputs: [190 -> (1, 1, 3, 3)[FLOAT]], [191 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_103 for ONNX node: Concat_103
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 192 for ONNX tensor: 192
[03/01/2023-14:29:04] [V] [TRT] Concat_103 [Concat] outputs: [192 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_104 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 192
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_104 [Conv] inputs: [192 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_104 for ONNX node: Conv_104
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 193 for ONNX tensor: 193
[03/01/2023-14:29:04] [V] [TRT] Conv_104 [Conv] outputs: [193 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_105 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 193
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_105 [Sigmoid] inputs: [193 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_105 for ONNX node: Sigmoid_105
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 194 for ONNX tensor: 194
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_105 [Sigmoid] outputs: [194 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_106 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 189
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 194
[03/01/2023-14:29:04] [V] [TRT] Mul_106 [Mul] inputs: [189 -> (1, 128, 3, 3)[FLOAT]], [194 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_106 for ONNX node: Mul_106
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 195 for ONNX tensor: 195
[03/01/2023-14:29:04] [V] [TRT] Mul_106 [Mul] outputs: [195 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_107 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 195
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_107 [GlobalAveragePool] inputs: [195 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_107 for ONNX node: GlobalAveragePool_107
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 196 for ONNX tensor: 196
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_107 [GlobalAveragePool] outputs: [196 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_108 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 196
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_108 [Conv] inputs: [196 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_108 for ONNX node: Conv_108
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 197 for ONNX tensor: 197
[03/01/2023-14:29:04] [V] [TRT] Conv_108 [Conv] outputs: [197 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_109 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 197
[03/01/2023-14:29:04] [V] [TRT] Relu_109 [Relu] inputs: [197 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_109 for ONNX node: Relu_109
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 198 for ONNX tensor: 198
[03/01/2023-14:29:04] [V] [TRT] Relu_109 [Relu] outputs: [198 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_110 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 198
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_110 [Conv] inputs: [198 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_110 for ONNX node: Conv_110
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 199 for ONNX tensor: 199
[03/01/2023-14:29:04] [V] [TRT] Conv_110 [Conv] outputs: [199 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_111 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 195
[03/01/2023-14:29:04] [V] [TRT] MaxPool_111 [MaxPool] inputs: [195 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_111 for ONNX node: MaxPool_111
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 200 for ONNX tensor: 200
[03/01/2023-14:29:04] [V] [TRT] MaxPool_111 [MaxPool] outputs: [200 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_112 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 200
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_112 [Conv] inputs: [200 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_112 for ONNX node: Conv_112
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 201 for ONNX tensor: 201
[03/01/2023-14:29:04] [V] [TRT] Conv_112 [Conv] outputs: [201 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_113 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 201
[03/01/2023-14:29:04] [V] [TRT] Relu_113 [Relu] inputs: [201 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_113 for ONNX node: Relu_113
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 202 for ONNX tensor: 202
[03/01/2023-14:29:04] [V] [TRT] Relu_113 [Relu] outputs: [202 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_114 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 202
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_114 [Conv] inputs: [202 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_114 for ONNX node: Conv_114
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 203 for ONNX tensor: 203
[03/01/2023-14:29:04] [V] [TRT] Conv_114 [Conv] outputs: [203 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_115 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 199
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 203
[03/01/2023-14:29:04] [V] [TRT] Add_115 [Add] inputs: [199 -> (1, 128, 1, 1)[FLOAT]], [203 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_115 for ONNX node: Add_115
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 204 for ONNX tensor: 204
[03/01/2023-14:29:04] [V] [TRT] Add_115 [Add] outputs: [204 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_116 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 204
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_116 [Sigmoid] inputs: [204 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_116 for ONNX node: Sigmoid_116
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 205 for ONNX tensor: 205
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_116 [Sigmoid] outputs: [205 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_117 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 195
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 205
[03/01/2023-14:29:04] [V] [TRT] Mul_117 [Mul] inputs: [195 -> (1, 128, 3, 3)[FLOAT]], [205 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_117 for ONNX node: Mul_117
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 206 for ONNX tensor: 206
[03/01/2023-14:29:04] [V] [TRT] Mul_117 [Mul] outputs: [206 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_118 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 165
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 206
[03/01/2023-14:29:04] [V] [TRT] Concat_118 [Concat] inputs: [165 -> (1, 128, 3, 3)[FLOAT]], [206 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_118 for ONNX node: Concat_118
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 207 for ONNX tensor: 207
[03/01/2023-14:29:04] [V] [TRT] Concat_118 [Concat] outputs: [207 -> (1, 256, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_119 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_119 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_119 [Constant] outputs: [208 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_120 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_120 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_120 [Constant] outputs: [209 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_121 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_121 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_121 [Constant] outputs: [210 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_122 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_122 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_122 [Constant] outputs: [211 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_123 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 209
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 210
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 208
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 211
[03/01/2023-14:29:04] [V] [TRT] Slice_123 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [209 -> (1)[INT32]], [210 -> (1)[INT32]], [208 -> (1)[INT32]], [211 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_123 for ONNX node: Slice_123
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 212 for ONNX tensor: 212
[03/01/2023-14:29:04] [V] [TRT] Slice_123 [Slice] outputs: [212 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_124 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_124 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_124 [Constant] outputs: [213 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_125 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_125 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_125 [Constant] outputs: [214 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_126 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_126 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_126 [Constant] outputs: [215 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_127 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_127 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_127 [Constant] outputs: [216 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_128 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 212
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 214
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 215
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 213
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 216
[03/01/2023-14:29:04] [V] [TRT] Slice_128 [Slice] inputs: [212 -> (1, 1, 24, 60)[FLOAT]], [214 -> (1)[INT32]], [215 -> (1)[INT32]], [213 -> (1)[INT32]], [216 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_128 for ONNX node: Slice_128
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 217 for ONNX tensor: 217
[03/01/2023-14:29:04] [V] [TRT] Slice_128 [Slice] outputs: [217 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_129 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 217
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 843
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 844
[03/01/2023-14:29:04] [V] [TRT] Conv_129 [Conv] inputs: [217 -> (1, 1, 24, 24)[FLOAT]], [843 -> (64, 1, 3, 3)[FLOAT]], [844 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_129 for ONNX node: Conv_129
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 842 for ONNX tensor: 842
[03/01/2023-14:29:04] [V] [TRT] Conv_129 [Conv] outputs: [842 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_130 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 842
[03/01/2023-14:29:04] [V] [TRT] Relu_130 [Relu] inputs: [842 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_130 for ONNX node: Relu_130
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 220 for ONNX tensor: 220
[03/01/2023-14:29:04] [V] [TRT] Relu_130 [Relu] outputs: [220 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_131 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 220
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 846
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 847
[03/01/2023-14:29:04] [V] [TRT] Conv_131 [Conv] inputs: [220 -> (1, 64, 22, 22)[FLOAT]], [846 -> (64, 64, 3, 3)[FLOAT]], [847 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_131 for ONNX node: Conv_131
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 845 for ONNX tensor: 845
[03/01/2023-14:29:04] [V] [TRT] Conv_131 [Conv] outputs: [845 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_132 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 845
[03/01/2023-14:29:04] [V] [TRT] Relu_132 [Relu] inputs: [845 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_132 for ONNX node: Relu_132
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 223 for ONNX tensor: 223
[03/01/2023-14:29:04] [V] [TRT] Relu_132 [Relu] outputs: [223 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_133 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 223
[03/01/2023-14:29:04] [V] [TRT] MaxPool_133 [MaxPool] inputs: [223 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_133 for ONNX node: MaxPool_133
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 224 for ONNX tensor: 224
[03/01/2023-14:29:04] [V] [TRT] MaxPool_133 [MaxPool] outputs: [224 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_134 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 224
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 849
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 850
[03/01/2023-14:29:04] [V] [TRT] Conv_134 [Conv] inputs: [224 -> (1, 64, 10, 10)[FLOAT]], [849 -> (128, 64, 3, 3)[FLOAT]], [850 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_134 for ONNX node: Conv_134
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 848 for ONNX tensor: 848
[03/01/2023-14:29:04] [V] [TRT] Conv_134 [Conv] outputs: [848 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_135 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 848
[03/01/2023-14:29:04] [V] [TRT] Relu_135 [Relu] inputs: [848 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_135 for ONNX node: Relu_135
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 227 for ONNX tensor: 227
[03/01/2023-14:29:04] [V] [TRT] Relu_135 [Relu] outputs: [227 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_136 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 227
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 852
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 853
[03/01/2023-14:29:04] [V] [TRT] Conv_136 [Conv] inputs: [227 -> (1, 128, 8, 8)[FLOAT]], [852 -> (128, 128, 3, 3)[FLOAT]], [853 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_136 for ONNX node: Conv_136
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 851 for ONNX tensor: 851
[03/01/2023-14:29:04] [V] [TRT] Conv_136 [Conv] outputs: [851 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_137 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 851
[03/01/2023-14:29:04] [V] [TRT] Relu_137 [Relu] inputs: [851 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_137 for ONNX node: Relu_137
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 230 for ONNX tensor: 230
[03/01/2023-14:29:04] [V] [TRT] Relu_137 [Relu] outputs: [230 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_138 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 230
[03/01/2023-14:29:04] [V] [TRT] MaxPool_138 [MaxPool] inputs: [230 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_138 for ONNX node: MaxPool_138
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 231 for ONNX tensor: 231
[03/01/2023-14:29:04] [V] [TRT] MaxPool_138 [MaxPool] outputs: [231 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_139 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 231
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_139 [ReduceMean] inputs: [231 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_139 for ONNX node: ReduceMean_139
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 232 for ONNX tensor: 232
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_139 [ReduceMean] outputs: [232 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_140 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 231
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_140 [ReduceMax] inputs: [231 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_140 for ONNX node: ReduceMax_140
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 233 for ONNX tensor: 233
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_140 [ReduceMax] outputs: [233 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_141 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 232
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 233
[03/01/2023-14:29:04] [V] [TRT] Concat_141 [Concat] inputs: [232 -> (1, 1, 3, 3)[FLOAT]], [233 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_141 for ONNX node: Concat_141
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 234 for ONNX tensor: 234
[03/01/2023-14:29:04] [V] [TRT] Concat_141 [Concat] outputs: [234 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_142 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 234
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_142 [Conv] inputs: [234 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_142 for ONNX node: Conv_142
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 235 for ONNX tensor: 235
[03/01/2023-14:29:04] [V] [TRT] Conv_142 [Conv] outputs: [235 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_143 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 235
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_143 [Sigmoid] inputs: [235 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_143 for ONNX node: Sigmoid_143
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 236 for ONNX tensor: 236
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_143 [Sigmoid] outputs: [236 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_144 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 231
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 236
[03/01/2023-14:29:04] [V] [TRT] Mul_144 [Mul] inputs: [231 -> (1, 128, 3, 3)[FLOAT]], [236 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_144 for ONNX node: Mul_144
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 237 for ONNX tensor: 237
[03/01/2023-14:29:04] [V] [TRT] Mul_144 [Mul] outputs: [237 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_145 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 237
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_145 [GlobalAveragePool] inputs: [237 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_145 for ONNX node: GlobalAveragePool_145
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 238 for ONNX tensor: 238
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_145 [GlobalAveragePool] outputs: [238 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_146 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 238
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_146 [Conv] inputs: [238 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_146 for ONNX node: Conv_146
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 239 for ONNX tensor: 239
[03/01/2023-14:29:04] [V] [TRT] Conv_146 [Conv] outputs: [239 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_147 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 239
[03/01/2023-14:29:04] [V] [TRT] Relu_147 [Relu] inputs: [239 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_147 for ONNX node: Relu_147
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 240 for ONNX tensor: 240
[03/01/2023-14:29:04] [V] [TRT] Relu_147 [Relu] outputs: [240 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_148 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 240
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_148 [Conv] inputs: [240 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_148 for ONNX node: Conv_148
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 241 for ONNX tensor: 241
[03/01/2023-14:29:04] [V] [TRT] Conv_148 [Conv] outputs: [241 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_149 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 237
[03/01/2023-14:29:04] [V] [TRT] MaxPool_149 [MaxPool] inputs: [237 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_149 for ONNX node: MaxPool_149
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 242 for ONNX tensor: 242
[03/01/2023-14:29:04] [V] [TRT] MaxPool_149 [MaxPool] outputs: [242 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_150 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 242
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_150 [Conv] inputs: [242 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_150 for ONNX node: Conv_150
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 243 for ONNX tensor: 243
[03/01/2023-14:29:04] [V] [TRT] Conv_150 [Conv] outputs: [243 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_151 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 243
[03/01/2023-14:29:04] [V] [TRT] Relu_151 [Relu] inputs: [243 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_151 for ONNX node: Relu_151
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 244 for ONNX tensor: 244
[03/01/2023-14:29:04] [V] [TRT] Relu_151 [Relu] outputs: [244 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_152 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 244
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_152 [Conv] inputs: [244 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_152 for ONNX node: Conv_152
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 245 for ONNX tensor: 245
[03/01/2023-14:29:04] [V] [TRT] Conv_152 [Conv] outputs: [245 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_153 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 241
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 245
[03/01/2023-14:29:04] [V] [TRT] Add_153 [Add] inputs: [241 -> (1, 128, 1, 1)[FLOAT]], [245 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_153 for ONNX node: Add_153
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 246 for ONNX tensor: 246
[03/01/2023-14:29:04] [V] [TRT] Add_153 [Add] outputs: [246 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_154 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 246
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_154 [Sigmoid] inputs: [246 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_154 for ONNX node: Sigmoid_154
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 247 for ONNX tensor: 247
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_154 [Sigmoid] outputs: [247 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_155 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 237
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 247
[03/01/2023-14:29:04] [V] [TRT] Mul_155 [Mul] inputs: [237 -> (1, 128, 3, 3)[FLOAT]], [247 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_155 for ONNX node: Mul_155
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 248 for ONNX tensor: 248
[03/01/2023-14:29:04] [V] [TRT] Mul_155 [Mul] outputs: [248 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_156 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 207
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 248
[03/01/2023-14:29:04] [V] [TRT] Concat_156 [Concat] inputs: [207 -> (1, 256, 3, 3)[FLOAT]], [248 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_156 for ONNX node: Concat_156
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 249 for ONNX tensor: 249
[03/01/2023-14:29:04] [V] [TRT] Concat_156 [Concat] outputs: [249 -> (1, 384, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_157 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_157 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_157 [Constant] outputs: [250 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_158 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_158 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_158 [Constant] outputs: [251 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_159 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_159 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_159 [Constant] outputs: [252 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_160 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_160 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_160 [Constant] outputs: [253 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_161 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 251
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 252
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 250
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 253
[03/01/2023-14:29:04] [V] [TRT] Slice_161 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [251 -> (1)[INT32]], [252 -> (1)[INT32]], [250 -> (1)[INT32]], [253 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_161 for ONNX node: Slice_161
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 254 for ONNX tensor: 254
[03/01/2023-14:29:04] [V] [TRT] Slice_161 [Slice] outputs: [254 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_162 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_162 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_162 [Constant] outputs: [255 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_163 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_163 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_163 [Constant] outputs: [256 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_164 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_164 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_164 [Constant] outputs: [257 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_165 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_165 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_165 [Constant] outputs: [258 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_166 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 254
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 256
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 257
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 255
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 258
[03/01/2023-14:29:04] [V] [TRT] Slice_166 [Slice] inputs: [254 -> (1, 1, 24, 60)[FLOAT]], [256 -> (1)[INT32]], [257 -> (1)[INT32]], [255 -> (1)[INT32]], [258 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_166 for ONNX node: Slice_166
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 259 for ONNX tensor: 259
[03/01/2023-14:29:04] [V] [TRT] Slice_166 [Slice] outputs: [259 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_167 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 259
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 855
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 856
[03/01/2023-14:29:04] [V] [TRT] Conv_167 [Conv] inputs: [259 -> (1, 1, 24, 24)[FLOAT]], [855 -> (64, 1, 3, 3)[FLOAT]], [856 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_167 for ONNX node: Conv_167
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 854 for ONNX tensor: 854
[03/01/2023-14:29:04] [V] [TRT] Conv_167 [Conv] outputs: [854 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_168 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 854
[03/01/2023-14:29:04] [V] [TRT] Relu_168 [Relu] inputs: [854 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_168 for ONNX node: Relu_168
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 262 for ONNX tensor: 262
[03/01/2023-14:29:04] [V] [TRT] Relu_168 [Relu] outputs: [262 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_169 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 262
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 858
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 859
[03/01/2023-14:29:04] [V] [TRT] Conv_169 [Conv] inputs: [262 -> (1, 64, 22, 22)[FLOAT]], [858 -> (64, 64, 3, 3)[FLOAT]], [859 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_169 for ONNX node: Conv_169
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 857 for ONNX tensor: 857
[03/01/2023-14:29:04] [V] [TRT] Conv_169 [Conv] outputs: [857 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_170 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 857
[03/01/2023-14:29:04] [V] [TRT] Relu_170 [Relu] inputs: [857 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_170 for ONNX node: Relu_170
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 265 for ONNX tensor: 265
[03/01/2023-14:29:04] [V] [TRT] Relu_170 [Relu] outputs: [265 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_171 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 265
[03/01/2023-14:29:04] [V] [TRT] MaxPool_171 [MaxPool] inputs: [265 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_171 for ONNX node: MaxPool_171
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 266 for ONNX tensor: 266
[03/01/2023-14:29:04] [V] [TRT] MaxPool_171 [MaxPool] outputs: [266 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_172 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 266
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 861
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 862
[03/01/2023-14:29:04] [V] [TRT] Conv_172 [Conv] inputs: [266 -> (1, 64, 10, 10)[FLOAT]], [861 -> (128, 64, 3, 3)[FLOAT]], [862 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_172 for ONNX node: Conv_172
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 860 for ONNX tensor: 860
[03/01/2023-14:29:04] [V] [TRT] Conv_172 [Conv] outputs: [860 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_173 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 860
[03/01/2023-14:29:04] [V] [TRT] Relu_173 [Relu] inputs: [860 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_173 for ONNX node: Relu_173
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 269 for ONNX tensor: 269
[03/01/2023-14:29:04] [V] [TRT] Relu_173 [Relu] outputs: [269 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_174 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 269
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 864
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 865
[03/01/2023-14:29:04] [V] [TRT] Conv_174 [Conv] inputs: [269 -> (1, 128, 8, 8)[FLOAT]], [864 -> (128, 128, 3, 3)[FLOAT]], [865 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_174 for ONNX node: Conv_174
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 863 for ONNX tensor: 863
[03/01/2023-14:29:04] [V] [TRT] Conv_174 [Conv] outputs: [863 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_175 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 863
[03/01/2023-14:29:04] [V] [TRT] Relu_175 [Relu] inputs: [863 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_175 for ONNX node: Relu_175
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 272 for ONNX tensor: 272
[03/01/2023-14:29:04] [V] [TRT] Relu_175 [Relu] outputs: [272 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_176 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 272
[03/01/2023-14:29:04] [V] [TRT] MaxPool_176 [MaxPool] inputs: [272 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_176 for ONNX node: MaxPool_176
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 273 for ONNX tensor: 273
[03/01/2023-14:29:04] [V] [TRT] MaxPool_176 [MaxPool] outputs: [273 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_177 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 273
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_177 [ReduceMean] inputs: [273 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_177 for ONNX node: ReduceMean_177
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 274 for ONNX tensor: 274
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_177 [ReduceMean] outputs: [274 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_178 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 273
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_178 [ReduceMax] inputs: [273 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_178 for ONNX node: ReduceMax_178
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 275 for ONNX tensor: 275
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_178 [ReduceMax] outputs: [275 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_179 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 274
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 275
[03/01/2023-14:29:04] [V] [TRT] Concat_179 [Concat] inputs: [274 -> (1, 1, 3, 3)[FLOAT]], [275 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_179 for ONNX node: Concat_179
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 276 for ONNX tensor: 276
[03/01/2023-14:29:04] [V] [TRT] Concat_179 [Concat] outputs: [276 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_180 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 276
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_180 [Conv] inputs: [276 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_180 for ONNX node: Conv_180
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 277 for ONNX tensor: 277
[03/01/2023-14:29:04] [V] [TRT] Conv_180 [Conv] outputs: [277 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_181 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 277
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_181 [Sigmoid] inputs: [277 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_181 for ONNX node: Sigmoid_181
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 278 for ONNX tensor: 278
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_181 [Sigmoid] outputs: [278 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_182 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 273
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 278
[03/01/2023-14:29:04] [V] [TRT] Mul_182 [Mul] inputs: [273 -> (1, 128, 3, 3)[FLOAT]], [278 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_182 for ONNX node: Mul_182
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 279 for ONNX tensor: 279
[03/01/2023-14:29:04] [V] [TRT] Mul_182 [Mul] outputs: [279 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_183 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 279
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_183 [GlobalAveragePool] inputs: [279 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_183 for ONNX node: GlobalAveragePool_183
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 280 for ONNX tensor: 280
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_183 [GlobalAveragePool] outputs: [280 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_184 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 280
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_184 [Conv] inputs: [280 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_184 for ONNX node: Conv_184
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 281 for ONNX tensor: 281
[03/01/2023-14:29:04] [V] [TRT] Conv_184 [Conv] outputs: [281 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_185 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 281
[03/01/2023-14:29:04] [V] [TRT] Relu_185 [Relu] inputs: [281 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_185 for ONNX node: Relu_185
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 282 for ONNX tensor: 282
[03/01/2023-14:29:04] [V] [TRT] Relu_185 [Relu] outputs: [282 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_186 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 282
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_186 [Conv] inputs: [282 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_186 for ONNX node: Conv_186
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 283 for ONNX tensor: 283
[03/01/2023-14:29:04] [V] [TRT] Conv_186 [Conv] outputs: [283 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_187 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 279
[03/01/2023-14:29:04] [V] [TRT] MaxPool_187 [MaxPool] inputs: [279 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_187 for ONNX node: MaxPool_187
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 284 for ONNX tensor: 284
[03/01/2023-14:29:04] [V] [TRT] MaxPool_187 [MaxPool] outputs: [284 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_188 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 284
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_188 [Conv] inputs: [284 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_188 for ONNX node: Conv_188
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 285 for ONNX tensor: 285
[03/01/2023-14:29:04] [V] [TRT] Conv_188 [Conv] outputs: [285 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_189 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 285
[03/01/2023-14:29:04] [V] [TRT] Relu_189 [Relu] inputs: [285 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_189 for ONNX node: Relu_189
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 286 for ONNX tensor: 286
[03/01/2023-14:29:04] [V] [TRT] Relu_189 [Relu] outputs: [286 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_190 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 286
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_190 [Conv] inputs: [286 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_190 for ONNX node: Conv_190
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 287 for ONNX tensor: 287
[03/01/2023-14:29:04] [V] [TRT] Conv_190 [Conv] outputs: [287 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_191 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 283
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 287
[03/01/2023-14:29:04] [V] [TRT] Add_191 [Add] inputs: [283 -> (1, 128, 1, 1)[FLOAT]], [287 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_191 for ONNX node: Add_191
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 288 for ONNX tensor: 288
[03/01/2023-14:29:04] [V] [TRT] Add_191 [Add] outputs: [288 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_192 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 288
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_192 [Sigmoid] inputs: [288 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_192 for ONNX node: Sigmoid_192
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 289 for ONNX tensor: 289
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_192 [Sigmoid] outputs: [289 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_193 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 279
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 289
[03/01/2023-14:29:04] [V] [TRT] Mul_193 [Mul] inputs: [279 -> (1, 128, 3, 3)[FLOAT]], [289 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_193 for ONNX node: Mul_193
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 290 for ONNX tensor: 290
[03/01/2023-14:29:04] [V] [TRT] Mul_193 [Mul] outputs: [290 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_194 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 249
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 290
[03/01/2023-14:29:04] [V] [TRT] Concat_194 [Concat] inputs: [249 -> (1, 384, 3, 3)[FLOAT]], [290 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_194 for ONNX node: Concat_194
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 291 for ONNX tensor: 291
[03/01/2023-14:29:04] [V] [TRT] Concat_194 [Concat] outputs: [291 -> (1, 512, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_195 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_195 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_195 [Constant] outputs: [292 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_196 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_196 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_196 [Constant] outputs: [293 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_197 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_197 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_197 [Constant] outputs: [294 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_198 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_198 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_198 [Constant] outputs: [295 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_199 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 293
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 294
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 292
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 295
[03/01/2023-14:29:04] [V] [TRT] Slice_199 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [293 -> (1)[INT32]], [294 -> (1)[INT32]], [292 -> (1)[INT32]], [295 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_199 for ONNX node: Slice_199
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 296 for ONNX tensor: 296
[03/01/2023-14:29:04] [V] [TRT] Slice_199 [Slice] outputs: [296 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_200 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_200 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_200 [Constant] outputs: [297 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_201 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_201 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_201 [Constant] outputs: [298 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_202 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_202 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_202 [Constant] outputs: [299 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_203 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_203 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_203 [Constant] outputs: [300 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_204 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 296
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 298
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 299
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 297
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 300
[03/01/2023-14:29:04] [V] [TRT] Slice_204 [Slice] inputs: [296 -> (1, 1, 24, 60)[FLOAT]], [298 -> (1)[INT32]], [299 -> (1)[INT32]], [297 -> (1)[INT32]], [300 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_204 for ONNX node: Slice_204
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 301 for ONNX tensor: 301
[03/01/2023-14:29:04] [V] [TRT] Slice_204 [Slice] outputs: [301 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_205 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 301
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 867
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 868
[03/01/2023-14:29:04] [V] [TRT] Conv_205 [Conv] inputs: [301 -> (1, 1, 24, 24)[FLOAT]], [867 -> (64, 1, 3, 3)[FLOAT]], [868 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_205 for ONNX node: Conv_205
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 866 for ONNX tensor: 866
[03/01/2023-14:29:04] [V] [TRT] Conv_205 [Conv] outputs: [866 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_206 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 866
[03/01/2023-14:29:04] [V] [TRT] Relu_206 [Relu] inputs: [866 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_206 for ONNX node: Relu_206
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 304 for ONNX tensor: 304
[03/01/2023-14:29:04] [V] [TRT] Relu_206 [Relu] outputs: [304 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_207 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 304
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 870
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 871
[03/01/2023-14:29:04] [V] [TRT] Conv_207 [Conv] inputs: [304 -> (1, 64, 22, 22)[FLOAT]], [870 -> (64, 64, 3, 3)[FLOAT]], [871 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_207 for ONNX node: Conv_207
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 869 for ONNX tensor: 869
[03/01/2023-14:29:04] [V] [TRT] Conv_207 [Conv] outputs: [869 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_208 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 869
[03/01/2023-14:29:04] [V] [TRT] Relu_208 [Relu] inputs: [869 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_208 for ONNX node: Relu_208
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 307 for ONNX tensor: 307
[03/01/2023-14:29:04] [V] [TRT] Relu_208 [Relu] outputs: [307 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_209 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 307
[03/01/2023-14:29:04] [V] [TRT] MaxPool_209 [MaxPool] inputs: [307 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_209 for ONNX node: MaxPool_209
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 308 for ONNX tensor: 308
[03/01/2023-14:29:04] [V] [TRT] MaxPool_209 [MaxPool] outputs: [308 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_210 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 308
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 873
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 874
[03/01/2023-14:29:04] [V] [TRT] Conv_210 [Conv] inputs: [308 -> (1, 64, 10, 10)[FLOAT]], [873 -> (128, 64, 3, 3)[FLOAT]], [874 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_210 for ONNX node: Conv_210
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 872 for ONNX tensor: 872
[03/01/2023-14:29:04] [V] [TRT] Conv_210 [Conv] outputs: [872 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_211 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 872
[03/01/2023-14:29:04] [V] [TRT] Relu_211 [Relu] inputs: [872 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_211 for ONNX node: Relu_211
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 311 for ONNX tensor: 311
[03/01/2023-14:29:04] [V] [TRT] Relu_211 [Relu] outputs: [311 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_212 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 311
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 876
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 877
[03/01/2023-14:29:04] [V] [TRT] Conv_212 [Conv] inputs: [311 -> (1, 128, 8, 8)[FLOAT]], [876 -> (128, 128, 3, 3)[FLOAT]], [877 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_212 for ONNX node: Conv_212
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 875 for ONNX tensor: 875
[03/01/2023-14:29:04] [V] [TRT] Conv_212 [Conv] outputs: [875 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_213 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 875
[03/01/2023-14:29:04] [V] [TRT] Relu_213 [Relu] inputs: [875 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_213 for ONNX node: Relu_213
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 314 for ONNX tensor: 314
[03/01/2023-14:29:04] [V] [TRT] Relu_213 [Relu] outputs: [314 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_214 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 314
[03/01/2023-14:29:04] [V] [TRT] MaxPool_214 [MaxPool] inputs: [314 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_214 for ONNX node: MaxPool_214
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 315 for ONNX tensor: 315
[03/01/2023-14:29:04] [V] [TRT] MaxPool_214 [MaxPool] outputs: [315 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_215 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 315
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_215 [ReduceMean] inputs: [315 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_215 for ONNX node: ReduceMean_215
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 316 for ONNX tensor: 316
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_215 [ReduceMean] outputs: [316 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_216 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 315
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_216 [ReduceMax] inputs: [315 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_216 for ONNX node: ReduceMax_216
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 317 for ONNX tensor: 317
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_216 [ReduceMax] outputs: [317 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_217 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 316
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 317
[03/01/2023-14:29:04] [V] [TRT] Concat_217 [Concat] inputs: [316 -> (1, 1, 3, 3)[FLOAT]], [317 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_217 for ONNX node: Concat_217
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 318 for ONNX tensor: 318
[03/01/2023-14:29:04] [V] [TRT] Concat_217 [Concat] outputs: [318 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_218 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 318
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_218 [Conv] inputs: [318 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_218 for ONNX node: Conv_218
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 319 for ONNX tensor: 319
[03/01/2023-14:29:04] [V] [TRT] Conv_218 [Conv] outputs: [319 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_219 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 319
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_219 [Sigmoid] inputs: [319 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_219 for ONNX node: Sigmoid_219
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 320 for ONNX tensor: 320
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_219 [Sigmoid] outputs: [320 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_220 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 315
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 320
[03/01/2023-14:29:04] [V] [TRT] Mul_220 [Mul] inputs: [315 -> (1, 128, 3, 3)[FLOAT]], [320 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_220 for ONNX node: Mul_220
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 321 for ONNX tensor: 321
[03/01/2023-14:29:04] [V] [TRT] Mul_220 [Mul] outputs: [321 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_221 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 321
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_221 [GlobalAveragePool] inputs: [321 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_221 for ONNX node: GlobalAveragePool_221
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 322 for ONNX tensor: 322
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_221 [GlobalAveragePool] outputs: [322 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_222 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 322
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_222 [Conv] inputs: [322 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_222 for ONNX node: Conv_222
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 323 for ONNX tensor: 323
[03/01/2023-14:29:04] [V] [TRT] Conv_222 [Conv] outputs: [323 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_223 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 323
[03/01/2023-14:29:04] [V] [TRT] Relu_223 [Relu] inputs: [323 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_223 for ONNX node: Relu_223
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 324 for ONNX tensor: 324
[03/01/2023-14:29:04] [V] [TRT] Relu_223 [Relu] outputs: [324 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_224 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 324
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_224 [Conv] inputs: [324 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_224 for ONNX node: Conv_224
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 325 for ONNX tensor: 325
[03/01/2023-14:29:04] [V] [TRT] Conv_224 [Conv] outputs: [325 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_225 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 321
[03/01/2023-14:29:04] [V] [TRT] MaxPool_225 [MaxPool] inputs: [321 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_225 for ONNX node: MaxPool_225
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 326 for ONNX tensor: 326
[03/01/2023-14:29:04] [V] [TRT] MaxPool_225 [MaxPool] outputs: [326 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_226 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 326
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_226 [Conv] inputs: [326 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_226 for ONNX node: Conv_226
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 327 for ONNX tensor: 327
[03/01/2023-14:29:04] [V] [TRT] Conv_226 [Conv] outputs: [327 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_227 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 327
[03/01/2023-14:29:04] [V] [TRT] Relu_227 [Relu] inputs: [327 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_227 for ONNX node: Relu_227
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 328 for ONNX tensor: 328
[03/01/2023-14:29:04] [V] [TRT] Relu_227 [Relu] outputs: [328 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_228 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 328
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_228 [Conv] inputs: [328 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_228 for ONNX node: Conv_228
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 329 for ONNX tensor: 329
[03/01/2023-14:29:04] [V] [TRT] Conv_228 [Conv] outputs: [329 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_229 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 325
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 329
[03/01/2023-14:29:04] [V] [TRT] Add_229 [Add] inputs: [325 -> (1, 128, 1, 1)[FLOAT]], [329 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_229 for ONNX node: Add_229
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 330 for ONNX tensor: 330
[03/01/2023-14:29:04] [V] [TRT] Add_229 [Add] outputs: [330 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_230 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 330
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_230 [Sigmoid] inputs: [330 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_230 for ONNX node: Sigmoid_230
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 331 for ONNX tensor: 331
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_230 [Sigmoid] outputs: [331 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_231 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 321
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 331
[03/01/2023-14:29:04] [V] [TRT] Mul_231 [Mul] inputs: [321 -> (1, 128, 3, 3)[FLOAT]], [331 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_231 for ONNX node: Mul_231
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 332 for ONNX tensor: 332
[03/01/2023-14:29:04] [V] [TRT] Mul_231 [Mul] outputs: [332 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_232 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 291
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 332
[03/01/2023-14:29:04] [V] [TRT] Concat_232 [Concat] inputs: [291 -> (1, 512, 3, 3)[FLOAT]], [332 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_232 for ONNX node: Concat_232
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 333 for ONNX tensor: 333
[03/01/2023-14:29:04] [V] [TRT] Concat_232 [Concat] outputs: [333 -> (1, 640, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_233 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_233 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_233 [Constant] outputs: [334 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_234 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_234 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_234 [Constant] outputs: [335 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_235 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_235 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_235 [Constant] outputs: [336 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_236 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_236 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_236 [Constant] outputs: [337 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_237 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 335
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 336
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 334
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 337
[03/01/2023-14:29:04] [V] [TRT] Slice_237 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [335 -> (1)[INT32]], [336 -> (1)[INT32]], [334 -> (1)[INT32]], [337 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_237 for ONNX node: Slice_237
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 338 for ONNX tensor: 338
[03/01/2023-14:29:04] [V] [TRT] Slice_237 [Slice] outputs: [338 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_238 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_238 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_238 [Constant] outputs: [339 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_239 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_239 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_239 [Constant] outputs: [340 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_240 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_240 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_240 [Constant] outputs: [341 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_241 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_241 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_241 [Constant] outputs: [342 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_242 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 338
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 340
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 341
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 339
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 342
[03/01/2023-14:29:04] [V] [TRT] Slice_242 [Slice] inputs: [338 -> (1, 1, 24, 60)[FLOAT]], [340 -> (1)[INT32]], [341 -> (1)[INT32]], [339 -> (1)[INT32]], [342 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_242 for ONNX node: Slice_242
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 343 for ONNX tensor: 343
[03/01/2023-14:29:04] [V] [TRT] Slice_242 [Slice] outputs: [343 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_243 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 343
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 879
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 880
[03/01/2023-14:29:04] [V] [TRT] Conv_243 [Conv] inputs: [343 -> (1, 1, 24, 24)[FLOAT]], [879 -> (64, 1, 3, 3)[FLOAT]], [880 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_243 for ONNX node: Conv_243
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 878 for ONNX tensor: 878
[03/01/2023-14:29:04] [V] [TRT] Conv_243 [Conv] outputs: [878 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_244 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 878
[03/01/2023-14:29:04] [V] [TRT] Relu_244 [Relu] inputs: [878 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_244 for ONNX node: Relu_244
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 346 for ONNX tensor: 346
[03/01/2023-14:29:04] [V] [TRT] Relu_244 [Relu] outputs: [346 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_245 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 346
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 882
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 883
[03/01/2023-14:29:04] [V] [TRT] Conv_245 [Conv] inputs: [346 -> (1, 64, 22, 22)[FLOAT]], [882 -> (64, 64, 3, 3)[FLOAT]], [883 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_245 for ONNX node: Conv_245
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 881 for ONNX tensor: 881
[03/01/2023-14:29:04] [V] [TRT] Conv_245 [Conv] outputs: [881 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_246 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 881
[03/01/2023-14:29:04] [V] [TRT] Relu_246 [Relu] inputs: [881 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_246 for ONNX node: Relu_246
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 349 for ONNX tensor: 349
[03/01/2023-14:29:04] [V] [TRT] Relu_246 [Relu] outputs: [349 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_247 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 349
[03/01/2023-14:29:04] [V] [TRT] MaxPool_247 [MaxPool] inputs: [349 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_247 for ONNX node: MaxPool_247
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 350 for ONNX tensor: 350
[03/01/2023-14:29:04] [V] [TRT] MaxPool_247 [MaxPool] outputs: [350 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_248 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 350
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 885
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 886
[03/01/2023-14:29:04] [V] [TRT] Conv_248 [Conv] inputs: [350 -> (1, 64, 10, 10)[FLOAT]], [885 -> (128, 64, 3, 3)[FLOAT]], [886 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_248 for ONNX node: Conv_248
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 884 for ONNX tensor: 884
[03/01/2023-14:29:04] [V] [TRT] Conv_248 [Conv] outputs: [884 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_249 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 884
[03/01/2023-14:29:04] [V] [TRT] Relu_249 [Relu] inputs: [884 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_249 for ONNX node: Relu_249
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 353 for ONNX tensor: 353
[03/01/2023-14:29:04] [V] [TRT] Relu_249 [Relu] outputs: [353 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_250 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 353
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 888
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 889
[03/01/2023-14:29:04] [V] [TRT] Conv_250 [Conv] inputs: [353 -> (1, 128, 8, 8)[FLOAT]], [888 -> (128, 128, 3, 3)[FLOAT]], [889 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_250 for ONNX node: Conv_250
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 887 for ONNX tensor: 887
[03/01/2023-14:29:04] [V] [TRT] Conv_250 [Conv] outputs: [887 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_251 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 887
[03/01/2023-14:29:04] [V] [TRT] Relu_251 [Relu] inputs: [887 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_251 for ONNX node: Relu_251
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 356 for ONNX tensor: 356
[03/01/2023-14:29:04] [V] [TRT] Relu_251 [Relu] outputs: [356 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_252 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 356
[03/01/2023-14:29:04] [V] [TRT] MaxPool_252 [MaxPool] inputs: [356 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_252 for ONNX node: MaxPool_252
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 357 for ONNX tensor: 357
[03/01/2023-14:29:04] [V] [TRT] MaxPool_252 [MaxPool] outputs: [357 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_253 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 357
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_253 [ReduceMean] inputs: [357 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_253 for ONNX node: ReduceMean_253
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 358 for ONNX tensor: 358
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_253 [ReduceMean] outputs: [358 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_254 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 357
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_254 [ReduceMax] inputs: [357 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_254 for ONNX node: ReduceMax_254
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 359 for ONNX tensor: 359
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_254 [ReduceMax] outputs: [359 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_255 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 358
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 359
[03/01/2023-14:29:04] [V] [TRT] Concat_255 [Concat] inputs: [358 -> (1, 1, 3, 3)[FLOAT]], [359 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_255 for ONNX node: Concat_255
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 360 for ONNX tensor: 360
[03/01/2023-14:29:04] [V] [TRT] Concat_255 [Concat] outputs: [360 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_256 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 360
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_256 [Conv] inputs: [360 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_256 for ONNX node: Conv_256
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 361 for ONNX tensor: 361
[03/01/2023-14:29:04] [V] [TRT] Conv_256 [Conv] outputs: [361 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_257 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 361
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_257 [Sigmoid] inputs: [361 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_257 for ONNX node: Sigmoid_257
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 362 for ONNX tensor: 362
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_257 [Sigmoid] outputs: [362 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_258 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 357
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 362
[03/01/2023-14:29:04] [V] [TRT] Mul_258 [Mul] inputs: [357 -> (1, 128, 3, 3)[FLOAT]], [362 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_258 for ONNX node: Mul_258
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 363 for ONNX tensor: 363
[03/01/2023-14:29:04] [V] [TRT] Mul_258 [Mul] outputs: [363 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_259 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 363
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_259 [GlobalAveragePool] inputs: [363 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_259 for ONNX node: GlobalAveragePool_259
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 364 for ONNX tensor: 364
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_259 [GlobalAveragePool] outputs: [364 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_260 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 364
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_260 [Conv] inputs: [364 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_260 for ONNX node: Conv_260
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 365 for ONNX tensor: 365
[03/01/2023-14:29:04] [V] [TRT] Conv_260 [Conv] outputs: [365 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_261 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 365
[03/01/2023-14:29:04] [V] [TRT] Relu_261 [Relu] inputs: [365 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_261 for ONNX node: Relu_261
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 366 for ONNX tensor: 366
[03/01/2023-14:29:04] [V] [TRT] Relu_261 [Relu] outputs: [366 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_262 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 366
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_262 [Conv] inputs: [366 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_262 for ONNX node: Conv_262
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 367 for ONNX tensor: 367
[03/01/2023-14:29:04] [V] [TRT] Conv_262 [Conv] outputs: [367 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_263 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 363
[03/01/2023-14:29:04] [V] [TRT] MaxPool_263 [MaxPool] inputs: [363 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_263 for ONNX node: MaxPool_263
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 368 for ONNX tensor: 368
[03/01/2023-14:29:04] [V] [TRT] MaxPool_263 [MaxPool] outputs: [368 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_264 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 368
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_264 [Conv] inputs: [368 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_264 for ONNX node: Conv_264
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 369 for ONNX tensor: 369
[03/01/2023-14:29:04] [V] [TRT] Conv_264 [Conv] outputs: [369 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_265 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 369
[03/01/2023-14:29:04] [V] [TRT] Relu_265 [Relu] inputs: [369 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_265 for ONNX node: Relu_265
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 370 for ONNX tensor: 370
[03/01/2023-14:29:04] [V] [TRT] Relu_265 [Relu] outputs: [370 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_266 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 370
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_266 [Conv] inputs: [370 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_266 for ONNX node: Conv_266
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 371 for ONNX tensor: 371
[03/01/2023-14:29:04] [V] [TRT] Conv_266 [Conv] outputs: [371 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_267 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 367
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 371
[03/01/2023-14:29:04] [V] [TRT] Add_267 [Add] inputs: [367 -> (1, 128, 1, 1)[FLOAT]], [371 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_267 for ONNX node: Add_267
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 372 for ONNX tensor: 372
[03/01/2023-14:29:04] [V] [TRT] Add_267 [Add] outputs: [372 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_268 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 372
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_268 [Sigmoid] inputs: [372 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_268 for ONNX node: Sigmoid_268
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 373 for ONNX tensor: 373
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_268 [Sigmoid] outputs: [373 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_269 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 363
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 373
[03/01/2023-14:29:04] [V] [TRT] Mul_269 [Mul] inputs: [363 -> (1, 128, 3, 3)[FLOAT]], [373 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_269 for ONNX node: Mul_269
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 374 for ONNX tensor: 374
[03/01/2023-14:29:04] [V] [TRT] Mul_269 [Mul] outputs: [374 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_270 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 333
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 374
[03/01/2023-14:29:04] [V] [TRT] Concat_270 [Concat] inputs: [333 -> (1, 640, 3, 3)[FLOAT]], [374 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_270 for ONNX node: Concat_270
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 375 for ONNX tensor: 375
[03/01/2023-14:29:04] [V] [TRT] Concat_270 [Concat] outputs: [375 -> (1, 768, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_271 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_271 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_271 [Constant] outputs: [376 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_272 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_272 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_272 [Constant] outputs: [377 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_273 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_273 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_273 [Constant] outputs: [378 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_274 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_274 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_274 [Constant] outputs: [379 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_275 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 377
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 378
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 376
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 379
[03/01/2023-14:29:04] [V] [TRT] Slice_275 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [377 -> (1)[INT32]], [378 -> (1)[INT32]], [376 -> (1)[INT32]], [379 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_275 for ONNX node: Slice_275
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 380 for ONNX tensor: 380
[03/01/2023-14:29:04] [V] [TRT] Slice_275 [Slice] outputs: [380 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_276 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_276 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_276 [Constant] outputs: [381 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_277 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_277 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_277 [Constant] outputs: [382 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_278 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_278 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_278 [Constant] outputs: [383 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_279 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_279 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_279 [Constant] outputs: [384 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_280 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 380
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 382
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 383
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 381
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 384
[03/01/2023-14:29:04] [V] [TRT] Slice_280 [Slice] inputs: [380 -> (1, 1, 24, 60)[FLOAT]], [382 -> (1)[INT32]], [383 -> (1)[INT32]], [381 -> (1)[INT32]], [384 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_280 for ONNX node: Slice_280
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 385 for ONNX tensor: 385
[03/01/2023-14:29:04] [V] [TRT] Slice_280 [Slice] outputs: [385 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_281 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 385
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 891
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 892
[03/01/2023-14:29:04] [V] [TRT] Conv_281 [Conv] inputs: [385 -> (1, 1, 24, 24)[FLOAT]], [891 -> (64, 1, 3, 3)[FLOAT]], [892 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_281 for ONNX node: Conv_281
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 890 for ONNX tensor: 890
[03/01/2023-14:29:04] [V] [TRT] Conv_281 [Conv] outputs: [890 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_282 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 890
[03/01/2023-14:29:04] [V] [TRT] Relu_282 [Relu] inputs: [890 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_282 for ONNX node: Relu_282
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 388 for ONNX tensor: 388
[03/01/2023-14:29:04] [V] [TRT] Relu_282 [Relu] outputs: [388 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_283 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 388
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 894
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 895
[03/01/2023-14:29:04] [V] [TRT] Conv_283 [Conv] inputs: [388 -> (1, 64, 22, 22)[FLOAT]], [894 -> (64, 64, 3, 3)[FLOAT]], [895 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_283 for ONNX node: Conv_283
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 893 for ONNX tensor: 893
[03/01/2023-14:29:04] [V] [TRT] Conv_283 [Conv] outputs: [893 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_284 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 893
[03/01/2023-14:29:04] [V] [TRT] Relu_284 [Relu] inputs: [893 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_284 for ONNX node: Relu_284
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 391 for ONNX tensor: 391
[03/01/2023-14:29:04] [V] [TRT] Relu_284 [Relu] outputs: [391 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_285 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 391
[03/01/2023-14:29:04] [V] [TRT] MaxPool_285 [MaxPool] inputs: [391 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_285 for ONNX node: MaxPool_285
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 392 for ONNX tensor: 392
[03/01/2023-14:29:04] [V] [TRT] MaxPool_285 [MaxPool] outputs: [392 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_286 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 392
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 897
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 898
[03/01/2023-14:29:04] [V] [TRT] Conv_286 [Conv] inputs: [392 -> (1, 64, 10, 10)[FLOAT]], [897 -> (128, 64, 3, 3)[FLOAT]], [898 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_286 for ONNX node: Conv_286
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 896 for ONNX tensor: 896
[03/01/2023-14:29:04] [V] [TRT] Conv_286 [Conv] outputs: [896 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_287 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 896
[03/01/2023-14:29:04] [V] [TRT] Relu_287 [Relu] inputs: [896 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_287 for ONNX node: Relu_287
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 395 for ONNX tensor: 395
[03/01/2023-14:29:04] [V] [TRT] Relu_287 [Relu] outputs: [395 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_288 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 395
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 900
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 901
[03/01/2023-14:29:04] [V] [TRT] Conv_288 [Conv] inputs: [395 -> (1, 128, 8, 8)[FLOAT]], [900 -> (128, 128, 3, 3)[FLOAT]], [901 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_288 for ONNX node: Conv_288
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 899 for ONNX tensor: 899
[03/01/2023-14:29:04] [V] [TRT] Conv_288 [Conv] outputs: [899 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_289 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 899
[03/01/2023-14:29:04] [V] [TRT] Relu_289 [Relu] inputs: [899 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_289 for ONNX node: Relu_289
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 398 for ONNX tensor: 398
[03/01/2023-14:29:04] [V] [TRT] Relu_289 [Relu] outputs: [398 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_290 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 398
[03/01/2023-14:29:04] [V] [TRT] MaxPool_290 [MaxPool] inputs: [398 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_290 for ONNX node: MaxPool_290
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 399 for ONNX tensor: 399
[03/01/2023-14:29:04] [V] [TRT] MaxPool_290 [MaxPool] outputs: [399 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_291 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 399
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_291 [ReduceMean] inputs: [399 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_291 for ONNX node: ReduceMean_291
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 400 for ONNX tensor: 400
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_291 [ReduceMean] outputs: [400 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_292 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 399
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_292 [ReduceMax] inputs: [399 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_292 for ONNX node: ReduceMax_292
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 401 for ONNX tensor: 401
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_292 [ReduceMax] outputs: [401 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_293 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 400
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 401
[03/01/2023-14:29:04] [V] [TRT] Concat_293 [Concat] inputs: [400 -> (1, 1, 3, 3)[FLOAT]], [401 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_293 for ONNX node: Concat_293
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 402 for ONNX tensor: 402
[03/01/2023-14:29:04] [V] [TRT] Concat_293 [Concat] outputs: [402 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_294 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 402
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_294 [Conv] inputs: [402 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_294 for ONNX node: Conv_294
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 403 for ONNX tensor: 403
[03/01/2023-14:29:04] [V] [TRT] Conv_294 [Conv] outputs: [403 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_295 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 403
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_295 [Sigmoid] inputs: [403 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_295 for ONNX node: Sigmoid_295
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 404 for ONNX tensor: 404
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_295 [Sigmoid] outputs: [404 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_296 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 399
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 404
[03/01/2023-14:29:04] [V] [TRT] Mul_296 [Mul] inputs: [399 -> (1, 128, 3, 3)[FLOAT]], [404 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_296 for ONNX node: Mul_296
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 405 for ONNX tensor: 405
[03/01/2023-14:29:04] [V] [TRT] Mul_296 [Mul] outputs: [405 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_297 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 405
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_297 [GlobalAveragePool] inputs: [405 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_297 for ONNX node: GlobalAveragePool_297
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 406 for ONNX tensor: 406
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_297 [GlobalAveragePool] outputs: [406 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_298 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 406
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_298 [Conv] inputs: [406 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_298 for ONNX node: Conv_298
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 407 for ONNX tensor: 407
[03/01/2023-14:29:04] [V] [TRT] Conv_298 [Conv] outputs: [407 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_299 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 407
[03/01/2023-14:29:04] [V] [TRT] Relu_299 [Relu] inputs: [407 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_299 for ONNX node: Relu_299
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 408 for ONNX tensor: 408
[03/01/2023-14:29:04] [V] [TRT] Relu_299 [Relu] outputs: [408 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_300 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 408
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_300 [Conv] inputs: [408 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_300 for ONNX node: Conv_300
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 409 for ONNX tensor: 409
[03/01/2023-14:29:04] [V] [TRT] Conv_300 [Conv] outputs: [409 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_301 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 405
[03/01/2023-14:29:04] [V] [TRT] MaxPool_301 [MaxPool] inputs: [405 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_301 for ONNX node: MaxPool_301
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 410 for ONNX tensor: 410
[03/01/2023-14:29:04] [V] [TRT] MaxPool_301 [MaxPool] outputs: [410 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_302 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 410
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_302 [Conv] inputs: [410 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_302 for ONNX node: Conv_302
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 411 for ONNX tensor: 411
[03/01/2023-14:29:04] [V] [TRT] Conv_302 [Conv] outputs: [411 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_303 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 411
[03/01/2023-14:29:04] [V] [TRT] Relu_303 [Relu] inputs: [411 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_303 for ONNX node: Relu_303
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 412 for ONNX tensor: 412
[03/01/2023-14:29:04] [V] [TRT] Relu_303 [Relu] outputs: [412 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_304 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 412
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_304 [Conv] inputs: [412 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_304 for ONNX node: Conv_304
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 413 for ONNX tensor: 413
[03/01/2023-14:29:04] [V] [TRT] Conv_304 [Conv] outputs: [413 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_305 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 409
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 413
[03/01/2023-14:29:04] [V] [TRT] Add_305 [Add] inputs: [409 -> (1, 128, 1, 1)[FLOAT]], [413 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_305 for ONNX node: Add_305
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 414 for ONNX tensor: 414
[03/01/2023-14:29:04] [V] [TRT] Add_305 [Add] outputs: [414 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_306 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 414
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_306 [Sigmoid] inputs: [414 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_306 for ONNX node: Sigmoid_306
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 415 for ONNX tensor: 415
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_306 [Sigmoid] outputs: [415 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_307 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 405
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 415
[03/01/2023-14:29:04] [V] [TRT] Mul_307 [Mul] inputs: [405 -> (1, 128, 3, 3)[FLOAT]], [415 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_307 for ONNX node: Mul_307
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 416 for ONNX tensor: 416
[03/01/2023-14:29:04] [V] [TRT] Mul_307 [Mul] outputs: [416 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_308 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 375
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 416
[03/01/2023-14:29:04] [V] [TRT] Concat_308 [Concat] inputs: [375 -> (1, 768, 3, 3)[FLOAT]], [416 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_308 for ONNX node: Concat_308
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 417 for ONNX tensor: 417
[03/01/2023-14:29:04] [V] [TRT] Concat_308 [Concat] outputs: [417 -> (1, 896, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_309 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_309 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_309 [Constant] outputs: [418 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_310 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_310 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_310 [Constant] outputs: [419 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_311 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_311 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_311 [Constant] outputs: [420 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_312 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_312 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_312 [Constant] outputs: [421 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_313 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 419
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 420
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 418
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 421
[03/01/2023-14:29:04] [V] [TRT] Slice_313 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [419 -> (1)[INT32]], [420 -> (1)[INT32]], [418 -> (1)[INT32]], [421 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_313 for ONNX node: Slice_313
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 422 for ONNX tensor: 422
[03/01/2023-14:29:04] [V] [TRT] Slice_313 [Slice] outputs: [422 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_314 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_314 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_314 [Constant] outputs: [423 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_315 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_315 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_315 [Constant] outputs: [424 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_316 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_316 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_316 [Constant] outputs: [425 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_317 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_317 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_317 [Constant] outputs: [426 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_318 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 422
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 424
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 425
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 423
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 426
[03/01/2023-14:29:04] [V] [TRT] Slice_318 [Slice] inputs: [422 -> (1, 1, 24, 60)[FLOAT]], [424 -> (1)[INT32]], [425 -> (1)[INT32]], [423 -> (1)[INT32]], [426 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_318 for ONNX node: Slice_318
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 427 for ONNX tensor: 427
[03/01/2023-14:29:04] [V] [TRT] Slice_318 [Slice] outputs: [427 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_319 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 427
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 903
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 904
[03/01/2023-14:29:04] [V] [TRT] Conv_319 [Conv] inputs: [427 -> (1, 1, 24, 24)[FLOAT]], [903 -> (64, 1, 3, 3)[FLOAT]], [904 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_319 for ONNX node: Conv_319
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 902 for ONNX tensor: 902
[03/01/2023-14:29:04] [V] [TRT] Conv_319 [Conv] outputs: [902 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_320 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 902
[03/01/2023-14:29:04] [V] [TRT] Relu_320 [Relu] inputs: [902 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_320 for ONNX node: Relu_320
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 430 for ONNX tensor: 430
[03/01/2023-14:29:04] [V] [TRT] Relu_320 [Relu] outputs: [430 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_321 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 430
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 906
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 907
[03/01/2023-14:29:04] [V] [TRT] Conv_321 [Conv] inputs: [430 -> (1, 64, 22, 22)[FLOAT]], [906 -> (64, 64, 3, 3)[FLOAT]], [907 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_321 for ONNX node: Conv_321
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 905 for ONNX tensor: 905
[03/01/2023-14:29:04] [V] [TRT] Conv_321 [Conv] outputs: [905 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_322 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 905
[03/01/2023-14:29:04] [V] [TRT] Relu_322 [Relu] inputs: [905 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_322 for ONNX node: Relu_322
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 433 for ONNX tensor: 433
[03/01/2023-14:29:04] [V] [TRT] Relu_322 [Relu] outputs: [433 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_323 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 433
[03/01/2023-14:29:04] [V] [TRT] MaxPool_323 [MaxPool] inputs: [433 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_323 for ONNX node: MaxPool_323
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 434 for ONNX tensor: 434
[03/01/2023-14:29:04] [V] [TRT] MaxPool_323 [MaxPool] outputs: [434 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_324 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 434
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 909
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 910
[03/01/2023-14:29:04] [V] [TRT] Conv_324 [Conv] inputs: [434 -> (1, 64, 10, 10)[FLOAT]], [909 -> (128, 64, 3, 3)[FLOAT]], [910 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_324 for ONNX node: Conv_324
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 908 for ONNX tensor: 908
[03/01/2023-14:29:04] [V] [TRT] Conv_324 [Conv] outputs: [908 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_325 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 908
[03/01/2023-14:29:04] [V] [TRT] Relu_325 [Relu] inputs: [908 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_325 for ONNX node: Relu_325
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 437 for ONNX tensor: 437
[03/01/2023-14:29:04] [V] [TRT] Relu_325 [Relu] outputs: [437 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_326 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 437
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 912
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 913
[03/01/2023-14:29:04] [V] [TRT] Conv_326 [Conv] inputs: [437 -> (1, 128, 8, 8)[FLOAT]], [912 -> (128, 128, 3, 3)[FLOAT]], [913 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_326 for ONNX node: Conv_326
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 911 for ONNX tensor: 911
[03/01/2023-14:29:04] [V] [TRT] Conv_326 [Conv] outputs: [911 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_327 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 911
[03/01/2023-14:29:04] [V] [TRT] Relu_327 [Relu] inputs: [911 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_327 for ONNX node: Relu_327
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 440 for ONNX tensor: 440
[03/01/2023-14:29:04] [V] [TRT] Relu_327 [Relu] outputs: [440 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_328 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 440
[03/01/2023-14:29:04] [V] [TRT] MaxPool_328 [MaxPool] inputs: [440 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_328 for ONNX node: MaxPool_328
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 441 for ONNX tensor: 441
[03/01/2023-14:29:04] [V] [TRT] MaxPool_328 [MaxPool] outputs: [441 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_329 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 441
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_329 [ReduceMean] inputs: [441 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_329 for ONNX node: ReduceMean_329
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 442 for ONNX tensor: 442
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_329 [ReduceMean] outputs: [442 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_330 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 441
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_330 [ReduceMax] inputs: [441 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_330 for ONNX node: ReduceMax_330
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 443 for ONNX tensor: 443
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_330 [ReduceMax] outputs: [443 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_331 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 442
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 443
[03/01/2023-14:29:04] [V] [TRT] Concat_331 [Concat] inputs: [442 -> (1, 1, 3, 3)[FLOAT]], [443 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_331 for ONNX node: Concat_331
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 444 for ONNX tensor: 444
[03/01/2023-14:29:04] [V] [TRT] Concat_331 [Concat] outputs: [444 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_332 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 444
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_332 [Conv] inputs: [444 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_332 for ONNX node: Conv_332
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 445 for ONNX tensor: 445
[03/01/2023-14:29:04] [V] [TRT] Conv_332 [Conv] outputs: [445 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_333 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 445
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_333 [Sigmoid] inputs: [445 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_333 for ONNX node: Sigmoid_333
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 446 for ONNX tensor: 446
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_333 [Sigmoid] outputs: [446 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_334 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 441
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 446
[03/01/2023-14:29:04] [V] [TRT] Mul_334 [Mul] inputs: [441 -> (1, 128, 3, 3)[FLOAT]], [446 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_334 for ONNX node: Mul_334
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 447 for ONNX tensor: 447
[03/01/2023-14:29:04] [V] [TRT] Mul_334 [Mul] outputs: [447 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_335 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 447
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_335 [GlobalAveragePool] inputs: [447 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_335 for ONNX node: GlobalAveragePool_335
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 448 for ONNX tensor: 448
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_335 [GlobalAveragePool] outputs: [448 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_336 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 448
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_336 [Conv] inputs: [448 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_336 for ONNX node: Conv_336
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 449 for ONNX tensor: 449
[03/01/2023-14:29:04] [V] [TRT] Conv_336 [Conv] outputs: [449 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_337 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 449
[03/01/2023-14:29:04] [V] [TRT] Relu_337 [Relu] inputs: [449 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_337 for ONNX node: Relu_337
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 450 for ONNX tensor: 450
[03/01/2023-14:29:04] [V] [TRT] Relu_337 [Relu] outputs: [450 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_338 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 450
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_338 [Conv] inputs: [450 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_338 for ONNX node: Conv_338
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 451 for ONNX tensor: 451
[03/01/2023-14:29:04] [V] [TRT] Conv_338 [Conv] outputs: [451 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_339 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 447
[03/01/2023-14:29:04] [V] [TRT] MaxPool_339 [MaxPool] inputs: [447 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_339 for ONNX node: MaxPool_339
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 452 for ONNX tensor: 452
[03/01/2023-14:29:04] [V] [TRT] MaxPool_339 [MaxPool] outputs: [452 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_340 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 452
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_340 [Conv] inputs: [452 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_340 for ONNX node: Conv_340
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 453 for ONNX tensor: 453
[03/01/2023-14:29:04] [V] [TRT] Conv_340 [Conv] outputs: [453 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_341 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 453
[03/01/2023-14:29:04] [V] [TRT] Relu_341 [Relu] inputs: [453 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_341 for ONNX node: Relu_341
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 454 for ONNX tensor: 454
[03/01/2023-14:29:04] [V] [TRT] Relu_341 [Relu] outputs: [454 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_342 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 454
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_342 [Conv] inputs: [454 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_342 for ONNX node: Conv_342
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 455 for ONNX tensor: 455
[03/01/2023-14:29:04] [V] [TRT] Conv_342 [Conv] outputs: [455 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_343 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 451
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 455
[03/01/2023-14:29:04] [V] [TRT] Add_343 [Add] inputs: [451 -> (1, 128, 1, 1)[FLOAT]], [455 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_343 for ONNX node: Add_343
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 456 for ONNX tensor: 456
[03/01/2023-14:29:04] [V] [TRT] Add_343 [Add] outputs: [456 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_344 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 456
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_344 [Sigmoid] inputs: [456 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_344 for ONNX node: Sigmoid_344
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 457 for ONNX tensor: 457
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_344 [Sigmoid] outputs: [457 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_345 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 447
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 457
[03/01/2023-14:29:04] [V] [TRT] Mul_345 [Mul] inputs: [447 -> (1, 128, 3, 3)[FLOAT]], [457 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_345 for ONNX node: Mul_345
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 458 for ONNX tensor: 458
[03/01/2023-14:29:04] [V] [TRT] Mul_345 [Mul] outputs: [458 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_346 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 417
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 458
[03/01/2023-14:29:04] [V] [TRT] Concat_346 [Concat] inputs: [417 -> (1, 896, 3, 3)[FLOAT]], [458 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_346 for ONNX node: Concat_346
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 459 for ONNX tensor: 459
[03/01/2023-14:29:04] [V] [TRT] Concat_346 [Concat] outputs: [459 -> (1, 1024, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_347 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_347 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_347 [Constant] outputs: [460 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_348 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_348 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_348 [Constant] outputs: [461 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_349 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_349 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_349 [Constant] outputs: [462 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_350 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_350 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_350 [Constant] outputs: [463 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_351 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 461
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 462
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 460
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 463
[03/01/2023-14:29:04] [V] [TRT] Slice_351 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [461 -> (1)[INT32]], [462 -> (1)[INT32]], [460 -> (1)[INT32]], [463 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_351 for ONNX node: Slice_351
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 464 for ONNX tensor: 464
[03/01/2023-14:29:04] [V] [TRT] Slice_351 [Slice] outputs: [464 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_352 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_352 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_352 [Constant] outputs: [465 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_353 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_353 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_353 [Constant] outputs: [466 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_354 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_354 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_354 [Constant] outputs: [467 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_355 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_355 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_355 [Constant] outputs: [468 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_356 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 464
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 466
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 467
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 465
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 468
[03/01/2023-14:29:04] [V] [TRT] Slice_356 [Slice] inputs: [464 -> (1, 1, 24, 60)[FLOAT]], [466 -> (1)[INT32]], [467 -> (1)[INT32]], [465 -> (1)[INT32]], [468 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_356 for ONNX node: Slice_356
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 469 for ONNX tensor: 469
[03/01/2023-14:29:04] [V] [TRT] Slice_356 [Slice] outputs: [469 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_357 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 469
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 915
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 916
[03/01/2023-14:29:04] [V] [TRT] Conv_357 [Conv] inputs: [469 -> (1, 1, 24, 24)[FLOAT]], [915 -> (64, 1, 3, 3)[FLOAT]], [916 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_357 for ONNX node: Conv_357
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 914 for ONNX tensor: 914
[03/01/2023-14:29:04] [V] [TRT] Conv_357 [Conv] outputs: [914 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_358 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 914
[03/01/2023-14:29:04] [V] [TRT] Relu_358 [Relu] inputs: [914 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_358 for ONNX node: Relu_358
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 472 for ONNX tensor: 472
[03/01/2023-14:29:04] [V] [TRT] Relu_358 [Relu] outputs: [472 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_359 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 472
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 918
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 919
[03/01/2023-14:29:04] [V] [TRT] Conv_359 [Conv] inputs: [472 -> (1, 64, 22, 22)[FLOAT]], [918 -> (64, 64, 3, 3)[FLOAT]], [919 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_359 for ONNX node: Conv_359
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 917 for ONNX tensor: 917
[03/01/2023-14:29:04] [V] [TRT] Conv_359 [Conv] outputs: [917 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_360 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 917
[03/01/2023-14:29:04] [V] [TRT] Relu_360 [Relu] inputs: [917 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_360 for ONNX node: Relu_360
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 475 for ONNX tensor: 475
[03/01/2023-14:29:04] [V] [TRT] Relu_360 [Relu] outputs: [475 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_361 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 475
[03/01/2023-14:29:04] [V] [TRT] MaxPool_361 [MaxPool] inputs: [475 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_361 for ONNX node: MaxPool_361
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 476 for ONNX tensor: 476
[03/01/2023-14:29:04] [V] [TRT] MaxPool_361 [MaxPool] outputs: [476 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_362 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 476
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 921
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 922
[03/01/2023-14:29:04] [V] [TRT] Conv_362 [Conv] inputs: [476 -> (1, 64, 10, 10)[FLOAT]], [921 -> (128, 64, 3, 3)[FLOAT]], [922 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_362 for ONNX node: Conv_362
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 920 for ONNX tensor: 920
[03/01/2023-14:29:04] [V] [TRT] Conv_362 [Conv] outputs: [920 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_363 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 920
[03/01/2023-14:29:04] [V] [TRT] Relu_363 [Relu] inputs: [920 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_363 for ONNX node: Relu_363
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 479 for ONNX tensor: 479
[03/01/2023-14:29:04] [V] [TRT] Relu_363 [Relu] outputs: [479 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_364 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 479
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 924
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 925
[03/01/2023-14:29:04] [V] [TRT] Conv_364 [Conv] inputs: [479 -> (1, 128, 8, 8)[FLOAT]], [924 -> (128, 128, 3, 3)[FLOAT]], [925 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_364 for ONNX node: Conv_364
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 923 for ONNX tensor: 923
[03/01/2023-14:29:04] [V] [TRT] Conv_364 [Conv] outputs: [923 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_365 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 923
[03/01/2023-14:29:04] [V] [TRT] Relu_365 [Relu] inputs: [923 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_365 for ONNX node: Relu_365
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 482 for ONNX tensor: 482
[03/01/2023-14:29:04] [V] [TRT] Relu_365 [Relu] outputs: [482 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_366 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 482
[03/01/2023-14:29:04] [V] [TRT] MaxPool_366 [MaxPool] inputs: [482 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_366 for ONNX node: MaxPool_366
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 483 for ONNX tensor: 483
[03/01/2023-14:29:04] [V] [TRT] MaxPool_366 [MaxPool] outputs: [483 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_367 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 483
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_367 [ReduceMean] inputs: [483 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_367 for ONNX node: ReduceMean_367
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 484 for ONNX tensor: 484
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_367 [ReduceMean] outputs: [484 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_368 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 483
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_368 [ReduceMax] inputs: [483 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_368 for ONNX node: ReduceMax_368
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 485 for ONNX tensor: 485
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_368 [ReduceMax] outputs: [485 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_369 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 484
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 485
[03/01/2023-14:29:04] [V] [TRT] Concat_369 [Concat] inputs: [484 -> (1, 1, 3, 3)[FLOAT]], [485 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_369 for ONNX node: Concat_369
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 486 for ONNX tensor: 486
[03/01/2023-14:29:04] [V] [TRT] Concat_369 [Concat] outputs: [486 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_370 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 486
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_370 [Conv] inputs: [486 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_370 for ONNX node: Conv_370
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 487 for ONNX tensor: 487
[03/01/2023-14:29:04] [V] [TRT] Conv_370 [Conv] outputs: [487 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_371 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 487
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_371 [Sigmoid] inputs: [487 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_371 for ONNX node: Sigmoid_371
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 488 for ONNX tensor: 488
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_371 [Sigmoid] outputs: [488 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_372 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 483
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 488
[03/01/2023-14:29:04] [V] [TRT] Mul_372 [Mul] inputs: [483 -> (1, 128, 3, 3)[FLOAT]], [488 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_372 for ONNX node: Mul_372
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 489 for ONNX tensor: 489
[03/01/2023-14:29:04] [V] [TRT] Mul_372 [Mul] outputs: [489 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_373 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 489
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_373 [GlobalAveragePool] inputs: [489 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_373 for ONNX node: GlobalAveragePool_373
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 490 for ONNX tensor: 490
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_373 [GlobalAveragePool] outputs: [490 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_374 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 490
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_374 [Conv] inputs: [490 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_374 for ONNX node: Conv_374
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 491 for ONNX tensor: 491
[03/01/2023-14:29:04] [V] [TRT] Conv_374 [Conv] outputs: [491 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_375 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 491
[03/01/2023-14:29:04] [V] [TRT] Relu_375 [Relu] inputs: [491 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_375 for ONNX node: Relu_375
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 492 for ONNX tensor: 492
[03/01/2023-14:29:04] [V] [TRT] Relu_375 [Relu] outputs: [492 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_376 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 492
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_376 [Conv] inputs: [492 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_376 for ONNX node: Conv_376
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 493 for ONNX tensor: 493
[03/01/2023-14:29:04] [V] [TRT] Conv_376 [Conv] outputs: [493 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_377 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 489
[03/01/2023-14:29:04] [V] [TRT] MaxPool_377 [MaxPool] inputs: [489 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_377 for ONNX node: MaxPool_377
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 494 for ONNX tensor: 494
[03/01/2023-14:29:04] [V] [TRT] MaxPool_377 [MaxPool] outputs: [494 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_378 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 494
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_378 [Conv] inputs: [494 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_378 for ONNX node: Conv_378
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 495 for ONNX tensor: 495
[03/01/2023-14:29:04] [V] [TRT] Conv_378 [Conv] outputs: [495 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_379 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 495
[03/01/2023-14:29:04] [V] [TRT] Relu_379 [Relu] inputs: [495 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_379 for ONNX node: Relu_379
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 496 for ONNX tensor: 496
[03/01/2023-14:29:04] [V] [TRT] Relu_379 [Relu] outputs: [496 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_380 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 496
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_380 [Conv] inputs: [496 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_380 for ONNX node: Conv_380
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 497 for ONNX tensor: 497
[03/01/2023-14:29:04] [V] [TRT] Conv_380 [Conv] outputs: [497 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_381 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 493
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 497
[03/01/2023-14:29:04] [V] [TRT] Add_381 [Add] inputs: [493 -> (1, 128, 1, 1)[FLOAT]], [497 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_381 for ONNX node: Add_381
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 498 for ONNX tensor: 498
[03/01/2023-14:29:04] [V] [TRT] Add_381 [Add] outputs: [498 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_382 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 498
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_382 [Sigmoid] inputs: [498 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_382 for ONNX node: Sigmoid_382
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 499 for ONNX tensor: 499
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_382 [Sigmoid] outputs: [499 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_383 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 489
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 499
[03/01/2023-14:29:04] [V] [TRT] Mul_383 [Mul] inputs: [489 -> (1, 128, 3, 3)[FLOAT]], [499 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_383 for ONNX node: Mul_383
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 500 for ONNX tensor: 500
[03/01/2023-14:29:04] [V] [TRT] Mul_383 [Mul] outputs: [500 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_384 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 459
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 500
[03/01/2023-14:29:04] [V] [TRT] Concat_384 [Concat] inputs: [459 -> (1, 1024, 3, 3)[FLOAT]], [500 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_384 for ONNX node: Concat_384
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 501 for ONNX tensor: 501
[03/01/2023-14:29:04] [V] [TRT] Concat_384 [Concat] outputs: [501 -> (1, 1152, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_385 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_385 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_385 [Constant] outputs: [502 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_386 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_386 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_386 [Constant] outputs: [503 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_387 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_387 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_387 [Constant] outputs: [504 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_388 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_388 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_388 [Constant] outputs: [505 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_389 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 503
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 504
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 502
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 505
[03/01/2023-14:29:04] [V] [TRT] Slice_389 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [503 -> (1)[INT32]], [504 -> (1)[INT32]], [502 -> (1)[INT32]], [505 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_389 for ONNX node: Slice_389
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 506 for ONNX tensor: 506
[03/01/2023-14:29:04] [V] [TRT] Slice_389 [Slice] outputs: [506 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_390 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_390 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_390 [Constant] outputs: [507 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_391 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_391 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_391 [Constant] outputs: [508 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_392 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_392 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_392 [Constant] outputs: [509 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_393 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_393 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_393 [Constant] outputs: [510 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_394 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 506
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 508
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 509
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 507
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 510
[03/01/2023-14:29:04] [V] [TRT] Slice_394 [Slice] inputs: [506 -> (1, 1, 24, 60)[FLOAT]], [508 -> (1)[INT32]], [509 -> (1)[INT32]], [507 -> (1)[INT32]], [510 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_394 for ONNX node: Slice_394
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 511 for ONNX tensor: 511
[03/01/2023-14:29:04] [V] [TRT] Slice_394 [Slice] outputs: [511 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_395 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 511
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 927
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 928
[03/01/2023-14:29:04] [V] [TRT] Conv_395 [Conv] inputs: [511 -> (1, 1, 24, 24)[FLOAT]], [927 -> (64, 1, 3, 3)[FLOAT]], [928 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_395 for ONNX node: Conv_395
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 926 for ONNX tensor: 926
[03/01/2023-14:29:04] [V] [TRT] Conv_395 [Conv] outputs: [926 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_396 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 926
[03/01/2023-14:29:04] [V] [TRT] Relu_396 [Relu] inputs: [926 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_396 for ONNX node: Relu_396
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 514 for ONNX tensor: 514
[03/01/2023-14:29:04] [V] [TRT] Relu_396 [Relu] outputs: [514 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_397 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 514
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 930
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 931
[03/01/2023-14:29:04] [V] [TRT] Conv_397 [Conv] inputs: [514 -> (1, 64, 22, 22)[FLOAT]], [930 -> (64, 64, 3, 3)[FLOAT]], [931 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_397 for ONNX node: Conv_397
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 929 for ONNX tensor: 929
[03/01/2023-14:29:04] [V] [TRT] Conv_397 [Conv] outputs: [929 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_398 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 929
[03/01/2023-14:29:04] [V] [TRT] Relu_398 [Relu] inputs: [929 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_398 for ONNX node: Relu_398
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 517 for ONNX tensor: 517
[03/01/2023-14:29:04] [V] [TRT] Relu_398 [Relu] outputs: [517 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_399 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 517
[03/01/2023-14:29:04] [V] [TRT] MaxPool_399 [MaxPool] inputs: [517 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_399 for ONNX node: MaxPool_399
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 518 for ONNX tensor: 518
[03/01/2023-14:29:04] [V] [TRT] MaxPool_399 [MaxPool] outputs: [518 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_400 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 518
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 933
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 934
[03/01/2023-14:29:04] [V] [TRT] Conv_400 [Conv] inputs: [518 -> (1, 64, 10, 10)[FLOAT]], [933 -> (128, 64, 3, 3)[FLOAT]], [934 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_400 for ONNX node: Conv_400
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 932 for ONNX tensor: 932
[03/01/2023-14:29:04] [V] [TRT] Conv_400 [Conv] outputs: [932 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_401 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 932
[03/01/2023-14:29:04] [V] [TRT] Relu_401 [Relu] inputs: [932 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_401 for ONNX node: Relu_401
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 521 for ONNX tensor: 521
[03/01/2023-14:29:04] [V] [TRT] Relu_401 [Relu] outputs: [521 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_402 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 521
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 936
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 937
[03/01/2023-14:29:04] [V] [TRT] Conv_402 [Conv] inputs: [521 -> (1, 128, 8, 8)[FLOAT]], [936 -> (128, 128, 3, 3)[FLOAT]], [937 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_402 for ONNX node: Conv_402
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 935 for ONNX tensor: 935
[03/01/2023-14:29:04] [V] [TRT] Conv_402 [Conv] outputs: [935 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_403 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 935
[03/01/2023-14:29:04] [V] [TRT] Relu_403 [Relu] inputs: [935 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_403 for ONNX node: Relu_403
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 524 for ONNX tensor: 524
[03/01/2023-14:29:04] [V] [TRT] Relu_403 [Relu] outputs: [524 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_404 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 524
[03/01/2023-14:29:04] [V] [TRT] MaxPool_404 [MaxPool] inputs: [524 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_404 for ONNX node: MaxPool_404
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 525 for ONNX tensor: 525
[03/01/2023-14:29:04] [V] [TRT] MaxPool_404 [MaxPool] outputs: [525 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_405 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 525
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_405 [ReduceMean] inputs: [525 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_405 for ONNX node: ReduceMean_405
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 526 for ONNX tensor: 526
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_405 [ReduceMean] outputs: [526 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_406 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 525
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_406 [ReduceMax] inputs: [525 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_406 for ONNX node: ReduceMax_406
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 527 for ONNX tensor: 527
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_406 [ReduceMax] outputs: [527 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_407 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 526
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 527
[03/01/2023-14:29:04] [V] [TRT] Concat_407 [Concat] inputs: [526 -> (1, 1, 3, 3)[FLOAT]], [527 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_407 for ONNX node: Concat_407
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 528 for ONNX tensor: 528
[03/01/2023-14:29:04] [V] [TRT] Concat_407 [Concat] outputs: [528 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_408 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 528
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_408 [Conv] inputs: [528 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_408 for ONNX node: Conv_408
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 529 for ONNX tensor: 529
[03/01/2023-14:29:04] [V] [TRT] Conv_408 [Conv] outputs: [529 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_409 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 529
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_409 [Sigmoid] inputs: [529 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_409 for ONNX node: Sigmoid_409
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 530 for ONNX tensor: 530
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_409 [Sigmoid] outputs: [530 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_410 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 525
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 530
[03/01/2023-14:29:04] [V] [TRT] Mul_410 [Mul] inputs: [525 -> (1, 128, 3, 3)[FLOAT]], [530 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_410 for ONNX node: Mul_410
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 531 for ONNX tensor: 531
[03/01/2023-14:29:04] [V] [TRT] Mul_410 [Mul] outputs: [531 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_411 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 531
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_411 [GlobalAveragePool] inputs: [531 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_411 for ONNX node: GlobalAveragePool_411
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 532 for ONNX tensor: 532
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_411 [GlobalAveragePool] outputs: [532 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_412 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 532
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_412 [Conv] inputs: [532 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_412 for ONNX node: Conv_412
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 533 for ONNX tensor: 533
[03/01/2023-14:29:04] [V] [TRT] Conv_412 [Conv] outputs: [533 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_413 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 533
[03/01/2023-14:29:04] [V] [TRT] Relu_413 [Relu] inputs: [533 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_413 for ONNX node: Relu_413
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 534 for ONNX tensor: 534
[03/01/2023-14:29:04] [V] [TRT] Relu_413 [Relu] outputs: [534 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_414 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 534
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_414 [Conv] inputs: [534 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_414 for ONNX node: Conv_414
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 535 for ONNX tensor: 535
[03/01/2023-14:29:04] [V] [TRT] Conv_414 [Conv] outputs: [535 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_415 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 531
[03/01/2023-14:29:04] [V] [TRT] MaxPool_415 [MaxPool] inputs: [531 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_415 for ONNX node: MaxPool_415
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 536 for ONNX tensor: 536
[03/01/2023-14:29:04] [V] [TRT] MaxPool_415 [MaxPool] outputs: [536 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_416 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 536
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_416 [Conv] inputs: [536 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_416 for ONNX node: Conv_416
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 537 for ONNX tensor: 537
[03/01/2023-14:29:04] [V] [TRT] Conv_416 [Conv] outputs: [537 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_417 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 537
[03/01/2023-14:29:04] [V] [TRT] Relu_417 [Relu] inputs: [537 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_417 for ONNX node: Relu_417
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 538 for ONNX tensor: 538
[03/01/2023-14:29:04] [V] [TRT] Relu_417 [Relu] outputs: [538 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_418 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 538
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_418 [Conv] inputs: [538 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_418 for ONNX node: Conv_418
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 539 for ONNX tensor: 539
[03/01/2023-14:29:04] [V] [TRT] Conv_418 [Conv] outputs: [539 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_419 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 535
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 539
[03/01/2023-14:29:04] [V] [TRT] Add_419 [Add] inputs: [535 -> (1, 128, 1, 1)[FLOAT]], [539 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_419 for ONNX node: Add_419
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 540 for ONNX tensor: 540
[03/01/2023-14:29:04] [V] [TRT] Add_419 [Add] outputs: [540 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_420 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 540
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_420 [Sigmoid] inputs: [540 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_420 for ONNX node: Sigmoid_420
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 541 for ONNX tensor: 541
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_420 [Sigmoid] outputs: [541 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_421 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 531
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 541
[03/01/2023-14:29:04] [V] [TRT] Mul_421 [Mul] inputs: [531 -> (1, 128, 3, 3)[FLOAT]], [541 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_421 for ONNX node: Mul_421
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 542 for ONNX tensor: 542
[03/01/2023-14:29:04] [V] [TRT] Mul_421 [Mul] outputs: [542 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_422 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 501
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 542
[03/01/2023-14:29:04] [V] [TRT] Concat_422 [Concat] inputs: [501 -> (1, 1152, 3, 3)[FLOAT]], [542 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_422 for ONNX node: Concat_422
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 543 for ONNX tensor: 543
[03/01/2023-14:29:04] [V] [TRT] Concat_422 [Concat] outputs: [543 -> (1, 1280, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_423 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_423 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_423 [Constant] outputs: [544 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_424 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_424 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_424 [Constant] outputs: [545 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_425 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_425 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_425 [Constant] outputs: [546 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_426 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_426 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_426 [Constant] outputs: [547 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_427 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 545
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 546
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 544
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 547
[03/01/2023-14:29:04] [V] [TRT] Slice_427 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [545 -> (1)[INT32]], [546 -> (1)[INT32]], [544 -> (1)[INT32]], [547 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_427 for ONNX node: Slice_427
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 548 for ONNX tensor: 548
[03/01/2023-14:29:04] [V] [TRT] Slice_427 [Slice] outputs: [548 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_428 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_428 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_428 [Constant] outputs: [549 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_429 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_429 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_429 [Constant] outputs: [550 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_430 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_430 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_430 [Constant] outputs: [551 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_431 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_431 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_431 [Constant] outputs: [552 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_432 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 548
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 550
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 551
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 549
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 552
[03/01/2023-14:29:04] [V] [TRT] Slice_432 [Slice] inputs: [548 -> (1, 1, 24, 60)[FLOAT]], [550 -> (1)[INT32]], [551 -> (1)[INT32]], [549 -> (1)[INT32]], [552 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_432 for ONNX node: Slice_432
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 553 for ONNX tensor: 553
[03/01/2023-14:29:04] [V] [TRT] Slice_432 [Slice] outputs: [553 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_433 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 553
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 939
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 940
[03/01/2023-14:29:04] [V] [TRT] Conv_433 [Conv] inputs: [553 -> (1, 1, 24, 24)[FLOAT]], [939 -> (64, 1, 3, 3)[FLOAT]], [940 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_433 for ONNX node: Conv_433
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 938 for ONNX tensor: 938
[03/01/2023-14:29:04] [V] [TRT] Conv_433 [Conv] outputs: [938 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_434 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 938
[03/01/2023-14:29:04] [V] [TRT] Relu_434 [Relu] inputs: [938 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_434 for ONNX node: Relu_434
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 556 for ONNX tensor: 556
[03/01/2023-14:29:04] [V] [TRT] Relu_434 [Relu] outputs: [556 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_435 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 556
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 942
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 943
[03/01/2023-14:29:04] [V] [TRT] Conv_435 [Conv] inputs: [556 -> (1, 64, 22, 22)[FLOAT]], [942 -> (64, 64, 3, 3)[FLOAT]], [943 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_435 for ONNX node: Conv_435
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 941 for ONNX tensor: 941
[03/01/2023-14:29:04] [V] [TRT] Conv_435 [Conv] outputs: [941 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_436 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 941
[03/01/2023-14:29:04] [V] [TRT] Relu_436 [Relu] inputs: [941 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_436 for ONNX node: Relu_436
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 559 for ONNX tensor: 559
[03/01/2023-14:29:04] [V] [TRT] Relu_436 [Relu] outputs: [559 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_437 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 559
[03/01/2023-14:29:04] [V] [TRT] MaxPool_437 [MaxPool] inputs: [559 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_437 for ONNX node: MaxPool_437
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 560 for ONNX tensor: 560
[03/01/2023-14:29:04] [V] [TRT] MaxPool_437 [MaxPool] outputs: [560 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_438 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 560
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 945
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 946
[03/01/2023-14:29:04] [V] [TRT] Conv_438 [Conv] inputs: [560 -> (1, 64, 10, 10)[FLOAT]], [945 -> (128, 64, 3, 3)[FLOAT]], [946 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_438 for ONNX node: Conv_438
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 944 for ONNX tensor: 944
[03/01/2023-14:29:04] [V] [TRT] Conv_438 [Conv] outputs: [944 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_439 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 944
[03/01/2023-14:29:04] [V] [TRT] Relu_439 [Relu] inputs: [944 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_439 for ONNX node: Relu_439
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 563 for ONNX tensor: 563
[03/01/2023-14:29:04] [V] [TRT] Relu_439 [Relu] outputs: [563 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_440 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 563
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 948
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 949
[03/01/2023-14:29:04] [V] [TRT] Conv_440 [Conv] inputs: [563 -> (1, 128, 8, 8)[FLOAT]], [948 -> (128, 128, 3, 3)[FLOAT]], [949 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_440 for ONNX node: Conv_440
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 947 for ONNX tensor: 947
[03/01/2023-14:29:04] [V] [TRT] Conv_440 [Conv] outputs: [947 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_441 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 947
[03/01/2023-14:29:04] [V] [TRT] Relu_441 [Relu] inputs: [947 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_441 for ONNX node: Relu_441
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 566 for ONNX tensor: 566
[03/01/2023-14:29:04] [V] [TRT] Relu_441 [Relu] outputs: [566 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_442 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 566
[03/01/2023-14:29:04] [V] [TRT] MaxPool_442 [MaxPool] inputs: [566 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_442 for ONNX node: MaxPool_442
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 567 for ONNX tensor: 567
[03/01/2023-14:29:04] [V] [TRT] MaxPool_442 [MaxPool] outputs: [567 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_443 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 567
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_443 [ReduceMean] inputs: [567 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_443 for ONNX node: ReduceMean_443
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 568 for ONNX tensor: 568
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_443 [ReduceMean] outputs: [568 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_444 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 567
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_444 [ReduceMax] inputs: [567 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_444 for ONNX node: ReduceMax_444
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 569 for ONNX tensor: 569
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_444 [ReduceMax] outputs: [569 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_445 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 568
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 569
[03/01/2023-14:29:04] [V] [TRT] Concat_445 [Concat] inputs: [568 -> (1, 1, 3, 3)[FLOAT]], [569 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_445 for ONNX node: Concat_445
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 570 for ONNX tensor: 570
[03/01/2023-14:29:04] [V] [TRT] Concat_445 [Concat] outputs: [570 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_446 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 570
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_446 [Conv] inputs: [570 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_446 for ONNX node: Conv_446
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 571 for ONNX tensor: 571
[03/01/2023-14:29:04] [V] [TRT] Conv_446 [Conv] outputs: [571 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_447 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 571
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_447 [Sigmoid] inputs: [571 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_447 for ONNX node: Sigmoid_447
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 572 for ONNX tensor: 572
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_447 [Sigmoid] outputs: [572 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_448 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 567
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 572
[03/01/2023-14:29:04] [V] [TRT] Mul_448 [Mul] inputs: [567 -> (1, 128, 3, 3)[FLOAT]], [572 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_448 for ONNX node: Mul_448
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 573 for ONNX tensor: 573
[03/01/2023-14:29:04] [V] [TRT] Mul_448 [Mul] outputs: [573 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_449 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 573
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_449 [GlobalAveragePool] inputs: [573 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_449 for ONNX node: GlobalAveragePool_449
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 574 for ONNX tensor: 574
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_449 [GlobalAveragePool] outputs: [574 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_450 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 574
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_450 [Conv] inputs: [574 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_450 for ONNX node: Conv_450
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 575 for ONNX tensor: 575
[03/01/2023-14:29:04] [V] [TRT] Conv_450 [Conv] outputs: [575 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_451 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 575
[03/01/2023-14:29:04] [V] [TRT] Relu_451 [Relu] inputs: [575 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_451 for ONNX node: Relu_451
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 576 for ONNX tensor: 576
[03/01/2023-14:29:04] [V] [TRT] Relu_451 [Relu] outputs: [576 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_452 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 576
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_452 [Conv] inputs: [576 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_452 for ONNX node: Conv_452
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 577 for ONNX tensor: 577
[03/01/2023-14:29:04] [V] [TRT] Conv_452 [Conv] outputs: [577 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_453 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 573
[03/01/2023-14:29:04] [V] [TRT] MaxPool_453 [MaxPool] inputs: [573 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_453 for ONNX node: MaxPool_453
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 578 for ONNX tensor: 578
[03/01/2023-14:29:04] [V] [TRT] MaxPool_453 [MaxPool] outputs: [578 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_454 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 578
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_454 [Conv] inputs: [578 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_454 for ONNX node: Conv_454
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 579 for ONNX tensor: 579
[03/01/2023-14:29:04] [V] [TRT] Conv_454 [Conv] outputs: [579 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_455 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 579
[03/01/2023-14:29:04] [V] [TRT] Relu_455 [Relu] inputs: [579 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_455 for ONNX node: Relu_455
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 580 for ONNX tensor: 580
[03/01/2023-14:29:04] [V] [TRT] Relu_455 [Relu] outputs: [580 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_456 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 580
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_456 [Conv] inputs: [580 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_456 for ONNX node: Conv_456
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 581 for ONNX tensor: 581
[03/01/2023-14:29:04] [V] [TRT] Conv_456 [Conv] outputs: [581 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_457 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 577
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 581
[03/01/2023-14:29:04] [V] [TRT] Add_457 [Add] inputs: [577 -> (1, 128, 1, 1)[FLOAT]], [581 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_457 for ONNX node: Add_457
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 582 for ONNX tensor: 582
[03/01/2023-14:29:04] [V] [TRT] Add_457 [Add] outputs: [582 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_458 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 582
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_458 [Sigmoid] inputs: [582 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_458 for ONNX node: Sigmoid_458
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 583 for ONNX tensor: 583
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_458 [Sigmoid] outputs: [583 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_459 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 573
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 583
[03/01/2023-14:29:04] [V] [TRT] Mul_459 [Mul] inputs: [573 -> (1, 128, 3, 3)[FLOAT]], [583 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_459 for ONNX node: Mul_459
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 584 for ONNX tensor: 584
[03/01/2023-14:29:04] [V] [TRT] Mul_459 [Mul] outputs: [584 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_460 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 543
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 584
[03/01/2023-14:29:04] [V] [TRT] Concat_460 [Concat] inputs: [543 -> (1, 1280, 3, 3)[FLOAT]], [584 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_460 for ONNX node: Concat_460
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 585 for ONNX tensor: 585
[03/01/2023-14:29:04] [V] [TRT] Concat_460 [Concat] outputs: [585 -> (1, 1408, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_461 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_461 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_461 [Constant] outputs: [586 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_462 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_462 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_462 [Constant] outputs: [587 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_463 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_463 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_463 [Constant] outputs: [588 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_464 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_464 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_464 [Constant] outputs: [589 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_465 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 587
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 588
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 586
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 589
[03/01/2023-14:29:04] [V] [TRT] Slice_465 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [587 -> (1)[INT32]], [588 -> (1)[INT32]], [586 -> (1)[INT32]], [589 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_465 for ONNX node: Slice_465
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 590 for ONNX tensor: 590
[03/01/2023-14:29:04] [V] [TRT] Slice_465 [Slice] outputs: [590 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_466 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_466 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_466 [Constant] outputs: [591 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_467 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_467 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_467 [Constant] outputs: [592 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_468 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_468 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_468 [Constant] outputs: [593 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_469 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_469 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_469 [Constant] outputs: [594 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_470 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 590
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 592
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 593
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 591
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 594
[03/01/2023-14:29:04] [V] [TRT] Slice_470 [Slice] inputs: [590 -> (1, 1, 24, 60)[FLOAT]], [592 -> (1)[INT32]], [593 -> (1)[INT32]], [591 -> (1)[INT32]], [594 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_470 for ONNX node: Slice_470
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 595 for ONNX tensor: 595
[03/01/2023-14:29:04] [V] [TRT] Slice_470 [Slice] outputs: [595 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_471 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 595
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 951
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 952
[03/01/2023-14:29:04] [V] [TRT] Conv_471 [Conv] inputs: [595 -> (1, 1, 24, 24)[FLOAT]], [951 -> (64, 1, 3, 3)[FLOAT]], [952 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_471 for ONNX node: Conv_471
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 950 for ONNX tensor: 950
[03/01/2023-14:29:04] [V] [TRT] Conv_471 [Conv] outputs: [950 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_472 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 950
[03/01/2023-14:29:04] [V] [TRT] Relu_472 [Relu] inputs: [950 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_472 for ONNX node: Relu_472
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 598 for ONNX tensor: 598
[03/01/2023-14:29:04] [V] [TRT] Relu_472 [Relu] outputs: [598 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_473 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 598
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 954
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 955
[03/01/2023-14:29:04] [V] [TRT] Conv_473 [Conv] inputs: [598 -> (1, 64, 22, 22)[FLOAT]], [954 -> (64, 64, 3, 3)[FLOAT]], [955 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_473 for ONNX node: Conv_473
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 953 for ONNX tensor: 953
[03/01/2023-14:29:04] [V] [TRT] Conv_473 [Conv] outputs: [953 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_474 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 953
[03/01/2023-14:29:04] [V] [TRT] Relu_474 [Relu] inputs: [953 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_474 for ONNX node: Relu_474
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 601 for ONNX tensor: 601
[03/01/2023-14:29:04] [V] [TRT] Relu_474 [Relu] outputs: [601 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_475 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 601
[03/01/2023-14:29:04] [V] [TRT] MaxPool_475 [MaxPool] inputs: [601 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_475 for ONNX node: MaxPool_475
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 602 for ONNX tensor: 602
[03/01/2023-14:29:04] [V] [TRT] MaxPool_475 [MaxPool] outputs: [602 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_476 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 602
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 957
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 958
[03/01/2023-14:29:04] [V] [TRT] Conv_476 [Conv] inputs: [602 -> (1, 64, 10, 10)[FLOAT]], [957 -> (128, 64, 3, 3)[FLOAT]], [958 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_476 for ONNX node: Conv_476
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 956 for ONNX tensor: 956
[03/01/2023-14:29:04] [V] [TRT] Conv_476 [Conv] outputs: [956 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_477 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 956
[03/01/2023-14:29:04] [V] [TRT] Relu_477 [Relu] inputs: [956 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_477 for ONNX node: Relu_477
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 605 for ONNX tensor: 605
[03/01/2023-14:29:04] [V] [TRT] Relu_477 [Relu] outputs: [605 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_478 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 605
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 960
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 961
[03/01/2023-14:29:04] [V] [TRT] Conv_478 [Conv] inputs: [605 -> (1, 128, 8, 8)[FLOAT]], [960 -> (128, 128, 3, 3)[FLOAT]], [961 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_478 for ONNX node: Conv_478
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 959 for ONNX tensor: 959
[03/01/2023-14:29:04] [V] [TRT] Conv_478 [Conv] outputs: [959 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_479 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 959
[03/01/2023-14:29:04] [V] [TRT] Relu_479 [Relu] inputs: [959 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_479 for ONNX node: Relu_479
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 608 for ONNX tensor: 608
[03/01/2023-14:29:04] [V] [TRT] Relu_479 [Relu] outputs: [608 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_480 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 608
[03/01/2023-14:29:04] [V] [TRT] MaxPool_480 [MaxPool] inputs: [608 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_480 for ONNX node: MaxPool_480
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 609 for ONNX tensor: 609
[03/01/2023-14:29:04] [V] [TRT] MaxPool_480 [MaxPool] outputs: [609 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_481 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 609
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_481 [ReduceMean] inputs: [609 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_481 for ONNX node: ReduceMean_481
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 610 for ONNX tensor: 610
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_481 [ReduceMean] outputs: [610 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_482 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 609
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_482 [ReduceMax] inputs: [609 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_482 for ONNX node: ReduceMax_482
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 611 for ONNX tensor: 611
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_482 [ReduceMax] outputs: [611 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_483 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 610
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 611
[03/01/2023-14:29:04] [V] [TRT] Concat_483 [Concat] inputs: [610 -> (1, 1, 3, 3)[FLOAT]], [611 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_483 for ONNX node: Concat_483
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 612 for ONNX tensor: 612
[03/01/2023-14:29:04] [V] [TRT] Concat_483 [Concat] outputs: [612 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_484 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 612
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_484 [Conv] inputs: [612 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_484 for ONNX node: Conv_484
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 613 for ONNX tensor: 613
[03/01/2023-14:29:04] [V] [TRT] Conv_484 [Conv] outputs: [613 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_485 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 613
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_485 [Sigmoid] inputs: [613 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_485 for ONNX node: Sigmoid_485
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 614 for ONNX tensor: 614
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_485 [Sigmoid] outputs: [614 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_486 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 609
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 614
[03/01/2023-14:29:04] [V] [TRT] Mul_486 [Mul] inputs: [609 -> (1, 128, 3, 3)[FLOAT]], [614 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_486 for ONNX node: Mul_486
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 615 for ONNX tensor: 615
[03/01/2023-14:29:04] [V] [TRT] Mul_486 [Mul] outputs: [615 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_487 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 615
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_487 [GlobalAveragePool] inputs: [615 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_487 for ONNX node: GlobalAveragePool_487
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 616 for ONNX tensor: 616
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_487 [GlobalAveragePool] outputs: [616 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_488 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 616
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_488 [Conv] inputs: [616 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_488 for ONNX node: Conv_488
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 617 for ONNX tensor: 617
[03/01/2023-14:29:04] [V] [TRT] Conv_488 [Conv] outputs: [617 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_489 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 617
[03/01/2023-14:29:04] [V] [TRT] Relu_489 [Relu] inputs: [617 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_489 for ONNX node: Relu_489
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 618 for ONNX tensor: 618
[03/01/2023-14:29:04] [V] [TRT] Relu_489 [Relu] outputs: [618 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_490 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 618
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_490 [Conv] inputs: [618 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_490 for ONNX node: Conv_490
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 619 for ONNX tensor: 619
[03/01/2023-14:29:04] [V] [TRT] Conv_490 [Conv] outputs: [619 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_491 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 615
[03/01/2023-14:29:04] [V] [TRT] MaxPool_491 [MaxPool] inputs: [615 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_491 for ONNX node: MaxPool_491
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 620 for ONNX tensor: 620
[03/01/2023-14:29:04] [V] [TRT] MaxPool_491 [MaxPool] outputs: [620 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_492 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 620
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_492 [Conv] inputs: [620 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_492 for ONNX node: Conv_492
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 621 for ONNX tensor: 621
[03/01/2023-14:29:04] [V] [TRT] Conv_492 [Conv] outputs: [621 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_493 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 621
[03/01/2023-14:29:04] [V] [TRT] Relu_493 [Relu] inputs: [621 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_493 for ONNX node: Relu_493
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 622 for ONNX tensor: 622
[03/01/2023-14:29:04] [V] [TRT] Relu_493 [Relu] outputs: [622 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_494 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 622
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_494 [Conv] inputs: [622 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_494 for ONNX node: Conv_494
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 623 for ONNX tensor: 623
[03/01/2023-14:29:04] [V] [TRT] Conv_494 [Conv] outputs: [623 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_495 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 619
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 623
[03/01/2023-14:29:04] [V] [TRT] Add_495 [Add] inputs: [619 -> (1, 128, 1, 1)[FLOAT]], [623 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_495 for ONNX node: Add_495
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 624 for ONNX tensor: 624
[03/01/2023-14:29:04] [V] [TRT] Add_495 [Add] outputs: [624 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_496 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 624
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_496 [Sigmoid] inputs: [624 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_496 for ONNX node: Sigmoid_496
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 625 for ONNX tensor: 625
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_496 [Sigmoid] outputs: [625 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_497 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 615
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 625
[03/01/2023-14:29:04] [V] [TRT] Mul_497 [Mul] inputs: [615 -> (1, 128, 3, 3)[FLOAT]], [625 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_497 for ONNX node: Mul_497
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 626 for ONNX tensor: 626
[03/01/2023-14:29:04] [V] [TRT] Mul_497 [Mul] outputs: [626 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_498 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 585
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 626
[03/01/2023-14:29:04] [V] [TRT] Concat_498 [Concat] inputs: [585 -> (1, 1408, 3, 3)[FLOAT]], [626 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_498 for ONNX node: Concat_498
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 627 for ONNX tensor: 627
[03/01/2023-14:29:04] [V] [TRT] Concat_498 [Concat] outputs: [627 -> (1, 1536, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_499 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_499 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_499 [Constant] outputs: [628 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_500 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_500 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_500 [Constant] outputs: [629 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_501 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_501 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_501 [Constant] outputs: [630 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_502 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_502 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_502 [Constant] outputs: [631 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_503 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 629
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 630
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 628
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 631
[03/01/2023-14:29:04] [V] [TRT] Slice_503 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [629 -> (1)[INT32]], [630 -> (1)[INT32]], [628 -> (1)[INT32]], [631 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_503 for ONNX node: Slice_503
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 632 for ONNX tensor: 632
[03/01/2023-14:29:04] [V] [TRT] Slice_503 [Slice] outputs: [632 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_504 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_504 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_504 [Constant] outputs: [633 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_505 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_505 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_505 [Constant] outputs: [634 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_506 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_506 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_506 [Constant] outputs: [635 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_507 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_507 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_507 [Constant] outputs: [636 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_508 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 632
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 634
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 635
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 633
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 636
[03/01/2023-14:29:04] [V] [TRT] Slice_508 [Slice] inputs: [632 -> (1, 1, 24, 60)[FLOAT]], [634 -> (1)[INT32]], [635 -> (1)[INT32]], [633 -> (1)[INT32]], [636 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_508 for ONNX node: Slice_508
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 637 for ONNX tensor: 637
[03/01/2023-14:29:04] [V] [TRT] Slice_508 [Slice] outputs: [637 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_509 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 637
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 963
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 964
[03/01/2023-14:29:04] [V] [TRT] Conv_509 [Conv] inputs: [637 -> (1, 1, 24, 24)[FLOAT]], [963 -> (64, 1, 3, 3)[FLOAT]], [964 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_509 for ONNX node: Conv_509
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 962 for ONNX tensor: 962
[03/01/2023-14:29:04] [V] [TRT] Conv_509 [Conv] outputs: [962 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_510 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 962
[03/01/2023-14:29:04] [V] [TRT] Relu_510 [Relu] inputs: [962 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_510 for ONNX node: Relu_510
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 640 for ONNX tensor: 640
[03/01/2023-14:29:04] [V] [TRT] Relu_510 [Relu] outputs: [640 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_511 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 640
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 966
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 967
[03/01/2023-14:29:04] [V] [TRT] Conv_511 [Conv] inputs: [640 -> (1, 64, 22, 22)[FLOAT]], [966 -> (64, 64, 3, 3)[FLOAT]], [967 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_511 for ONNX node: Conv_511
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 965 for ONNX tensor: 965
[03/01/2023-14:29:04] [V] [TRT] Conv_511 [Conv] outputs: [965 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_512 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 965
[03/01/2023-14:29:04] [V] [TRT] Relu_512 [Relu] inputs: [965 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_512 for ONNX node: Relu_512
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 643 for ONNX tensor: 643
[03/01/2023-14:29:04] [V] [TRT] Relu_512 [Relu] outputs: [643 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_513 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 643
[03/01/2023-14:29:04] [V] [TRT] MaxPool_513 [MaxPool] inputs: [643 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_513 for ONNX node: MaxPool_513
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 644 for ONNX tensor: 644
[03/01/2023-14:29:04] [V] [TRT] MaxPool_513 [MaxPool] outputs: [644 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_514 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 644
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 969
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 970
[03/01/2023-14:29:04] [V] [TRT] Conv_514 [Conv] inputs: [644 -> (1, 64, 10, 10)[FLOAT]], [969 -> (128, 64, 3, 3)[FLOAT]], [970 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_514 for ONNX node: Conv_514
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 968 for ONNX tensor: 968
[03/01/2023-14:29:04] [V] [TRT] Conv_514 [Conv] outputs: [968 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_515 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 968
[03/01/2023-14:29:04] [V] [TRT] Relu_515 [Relu] inputs: [968 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_515 for ONNX node: Relu_515
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 647 for ONNX tensor: 647
[03/01/2023-14:29:04] [V] [TRT] Relu_515 [Relu] outputs: [647 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_516 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 647
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 972
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 973
[03/01/2023-14:29:04] [V] [TRT] Conv_516 [Conv] inputs: [647 -> (1, 128, 8, 8)[FLOAT]], [972 -> (128, 128, 3, 3)[FLOAT]], [973 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_516 for ONNX node: Conv_516
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 971 for ONNX tensor: 971
[03/01/2023-14:29:04] [V] [TRT] Conv_516 [Conv] outputs: [971 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_517 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 971
[03/01/2023-14:29:04] [V] [TRT] Relu_517 [Relu] inputs: [971 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_517 for ONNX node: Relu_517
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 650 for ONNX tensor: 650
[03/01/2023-14:29:04] [V] [TRT] Relu_517 [Relu] outputs: [650 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_518 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 650
[03/01/2023-14:29:04] [V] [TRT] MaxPool_518 [MaxPool] inputs: [650 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_518 for ONNX node: MaxPool_518
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 651 for ONNX tensor: 651
[03/01/2023-14:29:04] [V] [TRT] MaxPool_518 [MaxPool] outputs: [651 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_519 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 651
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_519 [ReduceMean] inputs: [651 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_519 for ONNX node: ReduceMean_519
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 652 for ONNX tensor: 652
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_519 [ReduceMean] outputs: [652 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_520 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 651
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_520 [ReduceMax] inputs: [651 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_520 for ONNX node: ReduceMax_520
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 653 for ONNX tensor: 653
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_520 [ReduceMax] outputs: [653 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_521 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 652
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 653
[03/01/2023-14:29:04] [V] [TRT] Concat_521 [Concat] inputs: [652 -> (1, 1, 3, 3)[FLOAT]], [653 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_521 for ONNX node: Concat_521
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 654 for ONNX tensor: 654
[03/01/2023-14:29:04] [V] [TRT] Concat_521 [Concat] outputs: [654 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_522 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 654
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_522 [Conv] inputs: [654 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_522 for ONNX node: Conv_522
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 655 for ONNX tensor: 655
[03/01/2023-14:29:04] [V] [TRT] Conv_522 [Conv] outputs: [655 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_523 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 655
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_523 [Sigmoid] inputs: [655 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_523 for ONNX node: Sigmoid_523
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 656 for ONNX tensor: 656
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_523 [Sigmoid] outputs: [656 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_524 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 651
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 656
[03/01/2023-14:29:04] [V] [TRT] Mul_524 [Mul] inputs: [651 -> (1, 128, 3, 3)[FLOAT]], [656 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_524 for ONNX node: Mul_524
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 657 for ONNX tensor: 657
[03/01/2023-14:29:04] [V] [TRT] Mul_524 [Mul] outputs: [657 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_525 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 657
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_525 [GlobalAveragePool] inputs: [657 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_525 for ONNX node: GlobalAveragePool_525
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 658 for ONNX tensor: 658
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_525 [GlobalAveragePool] outputs: [658 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_526 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 658
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_526 [Conv] inputs: [658 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_526 for ONNX node: Conv_526
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 659 for ONNX tensor: 659
[03/01/2023-14:29:04] [V] [TRT] Conv_526 [Conv] outputs: [659 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_527 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 659
[03/01/2023-14:29:04] [V] [TRT] Relu_527 [Relu] inputs: [659 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_527 for ONNX node: Relu_527
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 660 for ONNX tensor: 660
[03/01/2023-14:29:04] [V] [TRT] Relu_527 [Relu] outputs: [660 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_528 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 660
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_528 [Conv] inputs: [660 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_528 for ONNX node: Conv_528
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 661 for ONNX tensor: 661
[03/01/2023-14:29:04] [V] [TRT] Conv_528 [Conv] outputs: [661 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_529 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 657
[03/01/2023-14:29:04] [V] [TRT] MaxPool_529 [MaxPool] inputs: [657 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_529 for ONNX node: MaxPool_529
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 662 for ONNX tensor: 662
[03/01/2023-14:29:04] [V] [TRT] MaxPool_529 [MaxPool] outputs: [662 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_530 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 662
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_530 [Conv] inputs: [662 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_530 for ONNX node: Conv_530
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 663 for ONNX tensor: 663
[03/01/2023-14:29:04] [V] [TRT] Conv_530 [Conv] outputs: [663 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_531 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 663
[03/01/2023-14:29:04] [V] [TRT] Relu_531 [Relu] inputs: [663 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_531 for ONNX node: Relu_531
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 664 for ONNX tensor: 664
[03/01/2023-14:29:04] [V] [TRT] Relu_531 [Relu] outputs: [664 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_532 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 664
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_532 [Conv] inputs: [664 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_532 for ONNX node: Conv_532
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 665 for ONNX tensor: 665
[03/01/2023-14:29:04] [V] [TRT] Conv_532 [Conv] outputs: [665 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_533 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 661
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 665
[03/01/2023-14:29:04] [V] [TRT] Add_533 [Add] inputs: [661 -> (1, 128, 1, 1)[FLOAT]], [665 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_533 for ONNX node: Add_533
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 666 for ONNX tensor: 666
[03/01/2023-14:29:04] [V] [TRT] Add_533 [Add] outputs: [666 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_534 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 666
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_534 [Sigmoid] inputs: [666 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_534 for ONNX node: Sigmoid_534
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 667 for ONNX tensor: 667
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_534 [Sigmoid] outputs: [667 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_535 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 657
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 667
[03/01/2023-14:29:04] [V] [TRT] Mul_535 [Mul] inputs: [657 -> (1, 128, 3, 3)[FLOAT]], [667 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_535 for ONNX node: Mul_535
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 668 for ONNX tensor: 668
[03/01/2023-14:29:04] [V] [TRT] Mul_535 [Mul] outputs: [668 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_536 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 627
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 668
[03/01/2023-14:29:04] [V] [TRT] Concat_536 [Concat] inputs: [627 -> (1, 1536, 3, 3)[FLOAT]], [668 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_536 for ONNX node: Concat_536
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 669 for ONNX tensor: 669
[03/01/2023-14:29:04] [V] [TRT] Concat_536 [Concat] outputs: [669 -> (1, 1664, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_537 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_537 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_537 [Constant] outputs: [670 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_538 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_538 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_538 [Constant] outputs: [671 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_539 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_539 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_539 [Constant] outputs: [672 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_540 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_540 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_540 [Constant] outputs: [673 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_541 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 671
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 672
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 670
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 673
[03/01/2023-14:29:04] [V] [TRT] Slice_541 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [671 -> (1)[INT32]], [672 -> (1)[INT32]], [670 -> (1)[INT32]], [673 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_541 for ONNX node: Slice_541
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 674 for ONNX tensor: 674
[03/01/2023-14:29:04] [V] [TRT] Slice_541 [Slice] outputs: [674 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_542 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_542 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_542 [Constant] outputs: [675 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_543 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_543 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_543 [Constant] outputs: [676 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_544 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_544 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_544 [Constant] outputs: [677 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_545 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_545 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_545 [Constant] outputs: [678 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_546 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 674
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 676
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 677
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 675
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 678
[03/01/2023-14:29:04] [V] [TRT] Slice_546 [Slice] inputs: [674 -> (1, 1, 24, 60)[FLOAT]], [676 -> (1)[INT32]], [677 -> (1)[INT32]], [675 -> (1)[INT32]], [678 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_546 for ONNX node: Slice_546
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 679 for ONNX tensor: 679
[03/01/2023-14:29:04] [V] [TRT] Slice_546 [Slice] outputs: [679 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_547 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 679
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 975
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 976
[03/01/2023-14:29:04] [V] [TRT] Conv_547 [Conv] inputs: [679 -> (1, 1, 24, 24)[FLOAT]], [975 -> (64, 1, 3, 3)[FLOAT]], [976 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_547 for ONNX node: Conv_547
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 974 for ONNX tensor: 974
[03/01/2023-14:29:04] [V] [TRT] Conv_547 [Conv] outputs: [974 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_548 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 974
[03/01/2023-14:29:04] [V] [TRT] Relu_548 [Relu] inputs: [974 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_548 for ONNX node: Relu_548
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 682 for ONNX tensor: 682
[03/01/2023-14:29:04] [V] [TRT] Relu_548 [Relu] outputs: [682 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_549 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 682
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 978
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 979
[03/01/2023-14:29:04] [V] [TRT] Conv_549 [Conv] inputs: [682 -> (1, 64, 22, 22)[FLOAT]], [978 -> (64, 64, 3, 3)[FLOAT]], [979 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_549 for ONNX node: Conv_549
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 977 for ONNX tensor: 977
[03/01/2023-14:29:04] [V] [TRT] Conv_549 [Conv] outputs: [977 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_550 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 977
[03/01/2023-14:29:04] [V] [TRT] Relu_550 [Relu] inputs: [977 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_550 for ONNX node: Relu_550
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 685 for ONNX tensor: 685
[03/01/2023-14:29:04] [V] [TRT] Relu_550 [Relu] outputs: [685 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_551 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 685
[03/01/2023-14:29:04] [V] [TRT] MaxPool_551 [MaxPool] inputs: [685 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_551 for ONNX node: MaxPool_551
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 686 for ONNX tensor: 686
[03/01/2023-14:29:04] [V] [TRT] MaxPool_551 [MaxPool] outputs: [686 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_552 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 686
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 981
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 982
[03/01/2023-14:29:04] [V] [TRT] Conv_552 [Conv] inputs: [686 -> (1, 64, 10, 10)[FLOAT]], [981 -> (128, 64, 3, 3)[FLOAT]], [982 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_552 for ONNX node: Conv_552
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 980 for ONNX tensor: 980
[03/01/2023-14:29:04] [V] [TRT] Conv_552 [Conv] outputs: [980 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_553 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 980
[03/01/2023-14:29:04] [V] [TRT] Relu_553 [Relu] inputs: [980 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_553 for ONNX node: Relu_553
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 689 for ONNX tensor: 689
[03/01/2023-14:29:04] [V] [TRT] Relu_553 [Relu] outputs: [689 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_554 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 689
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 984
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 985
[03/01/2023-14:29:04] [V] [TRT] Conv_554 [Conv] inputs: [689 -> (1, 128, 8, 8)[FLOAT]], [984 -> (128, 128, 3, 3)[FLOAT]], [985 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_554 for ONNX node: Conv_554
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 983 for ONNX tensor: 983
[03/01/2023-14:29:04] [V] [TRT] Conv_554 [Conv] outputs: [983 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_555 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 983
[03/01/2023-14:29:04] [V] [TRT] Relu_555 [Relu] inputs: [983 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_555 for ONNX node: Relu_555
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 692 for ONNX tensor: 692
[03/01/2023-14:29:04] [V] [TRT] Relu_555 [Relu] outputs: [692 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_556 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 692
[03/01/2023-14:29:04] [V] [TRT] MaxPool_556 [MaxPool] inputs: [692 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_556 for ONNX node: MaxPool_556
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 693 for ONNX tensor: 693
[03/01/2023-14:29:04] [V] [TRT] MaxPool_556 [MaxPool] outputs: [693 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_557 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 693
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_557 [ReduceMean] inputs: [693 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_557 for ONNX node: ReduceMean_557
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 694 for ONNX tensor: 694
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_557 [ReduceMean] outputs: [694 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_558 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 693
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_558 [ReduceMax] inputs: [693 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_558 for ONNX node: ReduceMax_558
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 695 for ONNX tensor: 695
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_558 [ReduceMax] outputs: [695 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_559 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 694
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 695
[03/01/2023-14:29:04] [V] [TRT] Concat_559 [Concat] inputs: [694 -> (1, 1, 3, 3)[FLOAT]], [695 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_559 for ONNX node: Concat_559
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 696 for ONNX tensor: 696
[03/01/2023-14:29:04] [V] [TRT] Concat_559 [Concat] outputs: [696 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_560 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 696
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_560 [Conv] inputs: [696 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_560 for ONNX node: Conv_560
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 697 for ONNX tensor: 697
[03/01/2023-14:29:04] [V] [TRT] Conv_560 [Conv] outputs: [697 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_561 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 697
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_561 [Sigmoid] inputs: [697 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_561 for ONNX node: Sigmoid_561
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 698 for ONNX tensor: 698
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_561 [Sigmoid] outputs: [698 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_562 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 693
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 698
[03/01/2023-14:29:04] [V] [TRT] Mul_562 [Mul] inputs: [693 -> (1, 128, 3, 3)[FLOAT]], [698 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_562 for ONNX node: Mul_562
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 699 for ONNX tensor: 699
[03/01/2023-14:29:04] [V] [TRT] Mul_562 [Mul] outputs: [699 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_563 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 699
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_563 [GlobalAveragePool] inputs: [699 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_563 for ONNX node: GlobalAveragePool_563
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 700 for ONNX tensor: 700
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_563 [GlobalAveragePool] outputs: [700 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_564 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 700
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_564 [Conv] inputs: [700 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_564 for ONNX node: Conv_564
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 701 for ONNX tensor: 701
[03/01/2023-14:29:04] [V] [TRT] Conv_564 [Conv] outputs: [701 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_565 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 701
[03/01/2023-14:29:04] [V] [TRT] Relu_565 [Relu] inputs: [701 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_565 for ONNX node: Relu_565
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 702 for ONNX tensor: 702
[03/01/2023-14:29:04] [V] [TRT] Relu_565 [Relu] outputs: [702 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_566 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 702
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_566 [Conv] inputs: [702 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_566 for ONNX node: Conv_566
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 703 for ONNX tensor: 703
[03/01/2023-14:29:04] [V] [TRT] Conv_566 [Conv] outputs: [703 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_567 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 699
[03/01/2023-14:29:04] [V] [TRT] MaxPool_567 [MaxPool] inputs: [699 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_567 for ONNX node: MaxPool_567
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 704 for ONNX tensor: 704
[03/01/2023-14:29:04] [V] [TRT] MaxPool_567 [MaxPool] outputs: [704 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_568 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 704
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_568 [Conv] inputs: [704 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_568 for ONNX node: Conv_568
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 705 for ONNX tensor: 705
[03/01/2023-14:29:04] [V] [TRT] Conv_568 [Conv] outputs: [705 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_569 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 705
[03/01/2023-14:29:04] [V] [TRT] Relu_569 [Relu] inputs: [705 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_569 for ONNX node: Relu_569
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 706 for ONNX tensor: 706
[03/01/2023-14:29:04] [V] [TRT] Relu_569 [Relu] outputs: [706 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_570 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 706
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_570 [Conv] inputs: [706 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_570 for ONNX node: Conv_570
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 707 for ONNX tensor: 707
[03/01/2023-14:29:04] [V] [TRT] Conv_570 [Conv] outputs: [707 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_571 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 703
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 707
[03/01/2023-14:29:04] [V] [TRT] Add_571 [Add] inputs: [703 -> (1, 128, 1, 1)[FLOAT]], [707 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_571 for ONNX node: Add_571
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 708 for ONNX tensor: 708
[03/01/2023-14:29:04] [V] [TRT] Add_571 [Add] outputs: [708 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_572 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 708
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_572 [Sigmoid] inputs: [708 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_572 for ONNX node: Sigmoid_572
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 709 for ONNX tensor: 709
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_572 [Sigmoid] outputs: [709 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_573 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 699
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 709
[03/01/2023-14:29:04] [V] [TRT] Mul_573 [Mul] inputs: [699 -> (1, 128, 3, 3)[FLOAT]], [709 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_573 for ONNX node: Mul_573
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 710 for ONNX tensor: 710
[03/01/2023-14:29:04] [V] [TRT] Mul_573 [Mul] outputs: [710 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_574 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 669
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 710
[03/01/2023-14:29:04] [V] [TRT] Concat_574 [Concat] inputs: [669 -> (1, 1664, 3, 3)[FLOAT]], [710 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_574 for ONNX node: Concat_574
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 711 for ONNX tensor: 711
[03/01/2023-14:29:04] [V] [TRT] Concat_574 [Concat] outputs: [711 -> (1, 1792, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_575 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_575 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_575 [Constant] outputs: [712 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_576 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_576 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_576 [Constant] outputs: [713 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_577 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_577 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_577 [Constant] outputs: [714 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_578 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_578 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_578 [Constant] outputs: [715 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_579 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 713
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 714
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 712
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 715
[03/01/2023-14:29:04] [V] [TRT] Slice_579 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [713 -> (1)[INT32]], [714 -> (1)[INT32]], [712 -> (1)[INT32]], [715 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_579 for ONNX node: Slice_579
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 716 for ONNX tensor: 716
[03/01/2023-14:29:04] [V] [TRT] Slice_579 [Slice] outputs: [716 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_580 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_580 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_580 [Constant] outputs: [717 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_581 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_581 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_581 [Constant] outputs: [718 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_582 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_582 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_582 [Constant] outputs: [719 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_583 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_583 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_583 [Constant] outputs: [720 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_584 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 716
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 718
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 719
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 717
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 720
[03/01/2023-14:29:04] [V] [TRT] Slice_584 [Slice] inputs: [716 -> (1, 1, 24, 60)[FLOAT]], [718 -> (1)[INT32]], [719 -> (1)[INT32]], [717 -> (1)[INT32]], [720 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_584 for ONNX node: Slice_584
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 721 for ONNX tensor: 721
[03/01/2023-14:29:04] [V] [TRT] Slice_584 [Slice] outputs: [721 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_585 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 721
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 987
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 988
[03/01/2023-14:29:04] [V] [TRT] Conv_585 [Conv] inputs: [721 -> (1, 1, 24, 24)[FLOAT]], [987 -> (64, 1, 3, 3)[FLOAT]], [988 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_585 for ONNX node: Conv_585
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 986 for ONNX tensor: 986
[03/01/2023-14:29:04] [V] [TRT] Conv_585 [Conv] outputs: [986 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_586 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 986
[03/01/2023-14:29:04] [V] [TRT] Relu_586 [Relu] inputs: [986 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_586 for ONNX node: Relu_586
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 724 for ONNX tensor: 724
[03/01/2023-14:29:04] [V] [TRT] Relu_586 [Relu] outputs: [724 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_587 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 724
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 990
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 991
[03/01/2023-14:29:04] [V] [TRT] Conv_587 [Conv] inputs: [724 -> (1, 64, 22, 22)[FLOAT]], [990 -> (64, 64, 3, 3)[FLOAT]], [991 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_587 for ONNX node: Conv_587
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 989 for ONNX tensor: 989
[03/01/2023-14:29:04] [V] [TRT] Conv_587 [Conv] outputs: [989 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_588 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 989
[03/01/2023-14:29:04] [V] [TRT] Relu_588 [Relu] inputs: [989 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_588 for ONNX node: Relu_588
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 727 for ONNX tensor: 727
[03/01/2023-14:29:04] [V] [TRT] Relu_588 [Relu] outputs: [727 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_589 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 727
[03/01/2023-14:29:04] [V] [TRT] MaxPool_589 [MaxPool] inputs: [727 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_589 for ONNX node: MaxPool_589
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 728 for ONNX tensor: 728
[03/01/2023-14:29:04] [V] [TRT] MaxPool_589 [MaxPool] outputs: [728 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_590 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 728
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 993
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 994
[03/01/2023-14:29:04] [V] [TRT] Conv_590 [Conv] inputs: [728 -> (1, 64, 10, 10)[FLOAT]], [993 -> (128, 64, 3, 3)[FLOAT]], [994 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_590 for ONNX node: Conv_590
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 992 for ONNX tensor: 992
[03/01/2023-14:29:04] [V] [TRT] Conv_590 [Conv] outputs: [992 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_591 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 992
[03/01/2023-14:29:04] [V] [TRT] Relu_591 [Relu] inputs: [992 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_591 for ONNX node: Relu_591
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 731 for ONNX tensor: 731
[03/01/2023-14:29:04] [V] [TRT] Relu_591 [Relu] outputs: [731 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_592 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 731
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 996
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 997
[03/01/2023-14:29:04] [V] [TRT] Conv_592 [Conv] inputs: [731 -> (1, 128, 8, 8)[FLOAT]], [996 -> (128, 128, 3, 3)[FLOAT]], [997 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_592 for ONNX node: Conv_592
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 995 for ONNX tensor: 995
[03/01/2023-14:29:04] [V] [TRT] Conv_592 [Conv] outputs: [995 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_593 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 995
[03/01/2023-14:29:04] [V] [TRT] Relu_593 [Relu] inputs: [995 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_593 for ONNX node: Relu_593
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 734 for ONNX tensor: 734
[03/01/2023-14:29:04] [V] [TRT] Relu_593 [Relu] outputs: [734 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_594 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 734
[03/01/2023-14:29:04] [V] [TRT] MaxPool_594 [MaxPool] inputs: [734 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_594 for ONNX node: MaxPool_594
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 735 for ONNX tensor: 735
[03/01/2023-14:29:04] [V] [TRT] MaxPool_594 [MaxPool] outputs: [735 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_595 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 735
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_595 [ReduceMean] inputs: [735 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_595 for ONNX node: ReduceMean_595
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 736 for ONNX tensor: 736
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_595 [ReduceMean] outputs: [736 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_596 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 735
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_596 [ReduceMax] inputs: [735 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_596 for ONNX node: ReduceMax_596
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 737 for ONNX tensor: 737
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_596 [ReduceMax] outputs: [737 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_597 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 736
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 737
[03/01/2023-14:29:04] [V] [TRT] Concat_597 [Concat] inputs: [736 -> (1, 1, 3, 3)[FLOAT]], [737 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_597 for ONNX node: Concat_597
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 738 for ONNX tensor: 738
[03/01/2023-14:29:04] [V] [TRT] Concat_597 [Concat] outputs: [738 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_598 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 738
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_598 [Conv] inputs: [738 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_598 for ONNX node: Conv_598
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 739 for ONNX tensor: 739
[03/01/2023-14:29:04] [V] [TRT] Conv_598 [Conv] outputs: [739 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_599 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 739
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_599 [Sigmoid] inputs: [739 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_599 for ONNX node: Sigmoid_599
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 740 for ONNX tensor: 740
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_599 [Sigmoid] outputs: [740 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_600 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 735
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 740
[03/01/2023-14:29:04] [V] [TRT] Mul_600 [Mul] inputs: [735 -> (1, 128, 3, 3)[FLOAT]], [740 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_600 for ONNX node: Mul_600
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 741 for ONNX tensor: 741
[03/01/2023-14:29:04] [V] [TRT] Mul_600 [Mul] outputs: [741 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_601 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 741
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_601 [GlobalAveragePool] inputs: [741 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_601 for ONNX node: GlobalAveragePool_601
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 742 for ONNX tensor: 742
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_601 [GlobalAveragePool] outputs: [742 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_602 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 742
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_602 [Conv] inputs: [742 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_602 for ONNX node: Conv_602
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 743 for ONNX tensor: 743
[03/01/2023-14:29:04] [V] [TRT] Conv_602 [Conv] outputs: [743 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_603 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 743
[03/01/2023-14:29:04] [V] [TRT] Relu_603 [Relu] inputs: [743 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_603 for ONNX node: Relu_603
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 744 for ONNX tensor: 744
[03/01/2023-14:29:04] [V] [TRT] Relu_603 [Relu] outputs: [744 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_604 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 744
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_604 [Conv] inputs: [744 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_604 for ONNX node: Conv_604
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 745 for ONNX tensor: 745
[03/01/2023-14:29:04] [V] [TRT] Conv_604 [Conv] outputs: [745 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_605 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 741
[03/01/2023-14:29:04] [V] [TRT] MaxPool_605 [MaxPool] inputs: [741 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_605 for ONNX node: MaxPool_605
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 746 for ONNX tensor: 746
[03/01/2023-14:29:04] [V] [TRT] MaxPool_605 [MaxPool] outputs: [746 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_606 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 746
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_606 [Conv] inputs: [746 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_606 for ONNX node: Conv_606
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 747 for ONNX tensor: 747
[03/01/2023-14:29:04] [V] [TRT] Conv_606 [Conv] outputs: [747 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_607 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 747
[03/01/2023-14:29:04] [V] [TRT] Relu_607 [Relu] inputs: [747 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_607 for ONNX node: Relu_607
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 748 for ONNX tensor: 748
[03/01/2023-14:29:04] [V] [TRT] Relu_607 [Relu] outputs: [748 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_608 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 748
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_608 [Conv] inputs: [748 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_608 for ONNX node: Conv_608
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 749 for ONNX tensor: 749
[03/01/2023-14:29:04] [V] [TRT] Conv_608 [Conv] outputs: [749 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_609 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 745
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 749
[03/01/2023-14:29:04] [V] [TRT] Add_609 [Add] inputs: [745 -> (1, 128, 1, 1)[FLOAT]], [749 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_609 for ONNX node: Add_609
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 750 for ONNX tensor: 750
[03/01/2023-14:29:04] [V] [TRT] Add_609 [Add] outputs: [750 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_610 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 750
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_610 [Sigmoid] inputs: [750 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_610 for ONNX node: Sigmoid_610
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 751 for ONNX tensor: 751
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_610 [Sigmoid] outputs: [751 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_611 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 741
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 751
[03/01/2023-14:29:04] [V] [TRT] Mul_611 [Mul] inputs: [741 -> (1, 128, 3, 3)[FLOAT]], [751 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_611 for ONNX node: Mul_611
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 752 for ONNX tensor: 752
[03/01/2023-14:29:04] [V] [TRT] Mul_611 [Mul] outputs: [752 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_612 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 711
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 752
[03/01/2023-14:29:04] [V] [TRT] Concat_612 [Concat] inputs: [711 -> (1, 1792, 3, 3)[FLOAT]], [752 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_612 for ONNX node: Concat_612
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 753 for ONNX tensor: 753
[03/01/2023-14:29:04] [V] [TRT] Concat_612 [Concat] outputs: [753 -> (1, 1920, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_613 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_613 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_613 [Constant] outputs: [754 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_614 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_614 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_614 [Constant] outputs: [755 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_615 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_615 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_615 [Constant] outputs: [756 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_616 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_616 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_616 [Constant] outputs: [757 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_617 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: input
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 755
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 756
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 754
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 757
[03/01/2023-14:29:04] [V] [TRT] Slice_617 [Slice] inputs: [input -> (1, 1, 60, 60)[FLOAT]], [755 -> (1)[INT32]], [756 -> (1)[INT32]], [754 -> (1)[INT32]], [757 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_617 for ONNX node: Slice_617
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 758 for ONNX tensor: 758
[03/01/2023-14:29:04] [V] [TRT] Slice_617 [Slice] outputs: [758 -> (1, 1, 24, 60)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_618 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_618 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_618 [Constant] outputs: [759 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_619 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_619 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_619 [Constant] outputs: [760 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_620 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_620 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_620 [Constant] outputs: [761 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_621 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_621 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_621 [Constant] outputs: [762 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Slice_622 [Slice]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 758
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 760
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 761
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 759
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 762
[03/01/2023-14:29:04] [V] [TRT] Slice_622 [Slice] inputs: [758 -> (1, 1, 24, 60)[FLOAT]], [760 -> (1)[INT32]], [761 -> (1)[INT32]], [759 -> (1)[INT32]], [762 -> (1)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Slice_622 for ONNX node: Slice_622
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 763 for ONNX tensor: 763
[03/01/2023-14:29:04] [V] [TRT] Slice_622 [Slice] outputs: [763 -> (1, 1, 24, 24)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_623 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 763
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 999
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1000
[03/01/2023-14:29:04] [V] [TRT] Conv_623 [Conv] inputs: [763 -> (1, 1, 24, 24)[FLOAT]], [999 -> (64, 1, 3, 3)[FLOAT]], [1000 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 1, 24, 24)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_623 for ONNX node: Conv_623
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 998 for ONNX tensor: 998
[03/01/2023-14:29:04] [V] [TRT] Conv_623 [Conv] outputs: [998 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_624 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 998
[03/01/2023-14:29:04] [V] [TRT] Relu_624 [Relu] inputs: [998 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_624 for ONNX node: Relu_624
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 766 for ONNX tensor: 766
[03/01/2023-14:29:04] [V] [TRT] Relu_624 [Relu] outputs: [766 -> (1, 64, 22, 22)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_625 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 766
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1002
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1003
[03/01/2023-14:29:04] [V] [TRT] Conv_625 [Conv] inputs: [766 -> (1, 64, 22, 22)[FLOAT]], [1002 -> (64, 64, 3, 3)[FLOAT]], [1003 -> (64)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 22, 22)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_625 for ONNX node: Conv_625
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 64
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 64, 20, 20)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 1001 for ONNX tensor: 1001
[03/01/2023-14:29:04] [V] [TRT] Conv_625 [Conv] outputs: [1001 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_626 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1001
[03/01/2023-14:29:04] [V] [TRT] Relu_626 [Relu] inputs: [1001 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_626 for ONNX node: Relu_626
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 769 for ONNX tensor: 769
[03/01/2023-14:29:04] [V] [TRT] Relu_626 [Relu] outputs: [769 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_627 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 769
[03/01/2023-14:29:04] [V] [TRT] MaxPool_627 [MaxPool] inputs: [769 -> (1, 64, 20, 20)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_627 for ONNX node: MaxPool_627
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 770 for ONNX tensor: 770
[03/01/2023-14:29:04] [V] [TRT] MaxPool_627 [MaxPool] outputs: [770 -> (1, 64, 10, 10)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_628 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 770
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1005
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1006
[03/01/2023-14:29:04] [V] [TRT] Conv_628 [Conv] inputs: [770 -> (1, 64, 10, 10)[FLOAT]], [1005 -> (128, 64, 3, 3)[FLOAT]], [1006 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 64, 10, 10)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_628 for ONNX node: Conv_628
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 1004 for ONNX tensor: 1004
[03/01/2023-14:29:04] [V] [TRT] Conv_628 [Conv] outputs: [1004 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_629 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1004
[03/01/2023-14:29:04] [V] [TRT] Relu_629 [Relu] inputs: [1004 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_629 for ONNX node: Relu_629
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 773 for ONNX tensor: 773
[03/01/2023-14:29:04] [V] [TRT] Relu_629 [Relu] outputs: [773 -> (1, 128, 8, 8)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_630 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 773
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1008
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1009
[03/01/2023-14:29:04] [V] [TRT] Conv_630 [Conv] inputs: [773 -> (1, 128, 8, 8)[FLOAT]], [1008 -> (128, 128, 3, 3)[FLOAT]], [1009 -> (128)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 8, 8)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_630 for ONNX node: Conv_630
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (3, 3), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 6, 6)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 1007 for ONNX tensor: 1007
[03/01/2023-14:29:04] [V] [TRT] Conv_630 [Conv] outputs: [1007 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_631 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 1007
[03/01/2023-14:29:04] [V] [TRT] Relu_631 [Relu] inputs: [1007 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_631 for ONNX node: Relu_631
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 776 for ONNX tensor: 776
[03/01/2023-14:29:04] [V] [TRT] Relu_631 [Relu] outputs: [776 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_632 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 776
[03/01/2023-14:29:04] [V] [TRT] MaxPool_632 [MaxPool] inputs: [776 -> (1, 128, 6, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_632 for ONNX node: MaxPool_632
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 777 for ONNX tensor: 777
[03/01/2023-14:29:04] [V] [TRT] MaxPool_632 [MaxPool] outputs: [777 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMean_633 [ReduceMean]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 777
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_633 [ReduceMean] inputs: [777 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMean_633 for ONNX node: ReduceMean_633
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 778 for ONNX tensor: 778
[03/01/2023-14:29:04] [V] [TRT] ReduceMean_633 [ReduceMean] outputs: [778 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: ReduceMax_634 [ReduceMax]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 777
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_634 [ReduceMax] inputs: [777 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: ReduceMax_634 for ONNX node: ReduceMax_634
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 779 for ONNX tensor: 779
[03/01/2023-14:29:04] [V] [TRT] ReduceMax_634 [ReduceMax] outputs: [779 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_635 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 778
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 779
[03/01/2023-14:29:04] [V] [TRT] Concat_635 [Concat] inputs: [778 -> (1, 1, 3, 3)[FLOAT]], [779 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_635 for ONNX node: Concat_635
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 780 for ONNX tensor: 780
[03/01/2023-14:29:04] [V] [TRT] Concat_635 [Concat] outputs: [780 -> (1, 2, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_636 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 780
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_spatial.conv1.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_636 [Conv] inputs: [780 -> (1, 2, 3, 3)[FLOAT]], [patchattention_spatial.conv1.weight -> (1, 2, 7, 7)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 2, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_636 for ONNX node: Conv_636
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (7, 7), strides: (1, 1), prepadding: (3, 3), postpadding: (3, 3), dilations: (1, 1), numOutputs: 1
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 1, 3, 3)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 781 for ONNX tensor: 781
[03/01/2023-14:29:04] [V] [TRT] Conv_636 [Conv] outputs: [781 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_637 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 781
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_637 [Sigmoid] inputs: [781 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_637 for ONNX node: Sigmoid_637
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 782 for ONNX tensor: 782
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_637 [Sigmoid] outputs: [782 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_638 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 777
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 782
[03/01/2023-14:29:04] [V] [TRT] Mul_638 [Mul] inputs: [777 -> (1, 128, 3, 3)[FLOAT]], [782 -> (1, 1, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_638 for ONNX node: Mul_638
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 783 for ONNX tensor: 783
[03/01/2023-14:29:04] [V] [TRT] Mul_638 [Mul] outputs: [783 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_639 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 783
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_639 [GlobalAveragePool] inputs: [783 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_639 for ONNX node: GlobalAveragePool_639
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 784 for ONNX tensor: 784
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_639 [GlobalAveragePool] outputs: [784 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_640 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 784
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_640 [Conv] inputs: [784 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_640 for ONNX node: Conv_640
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 785 for ONNX tensor: 785
[03/01/2023-14:29:04] [V] [TRT] Conv_640 [Conv] outputs: [785 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_641 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 785
[03/01/2023-14:29:04] [V] [TRT] Relu_641 [Relu] inputs: [785 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_641 for ONNX node: Relu_641
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 786 for ONNX tensor: 786
[03/01/2023-14:29:04] [V] [TRT] Relu_641 [Relu] outputs: [786 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_642 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 786
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_642 [Conv] inputs: [786 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_642 for ONNX node: Conv_642
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 787 for ONNX tensor: 787
[03/01/2023-14:29:04] [V] [TRT] Conv_642 [Conv] outputs: [787 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: MaxPool_643 [MaxPool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 783
[03/01/2023-14:29:04] [V] [TRT] MaxPool_643 [MaxPool] inputs: [783 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: MaxPool_643 for ONNX node: MaxPool_643
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 788 for ONNX tensor: 788
[03/01/2023-14:29:04] [V] [TRT] MaxPool_643 [MaxPool] outputs: [788 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_644 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 788
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.0.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_644 [Conv] inputs: [788 -> (1, 128, 1, 1)[FLOAT]], [patchattention_channel.fc.0.weight -> (8, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_644 for ONNX node: Conv_644
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 8
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 789 for ONNX tensor: 789
[03/01/2023-14:29:04] [V] [TRT] Conv_644 [Conv] outputs: [789 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Relu_645 [Relu]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 789
[03/01/2023-14:29:04] [V] [TRT] Relu_645 [Relu] inputs: [789 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Relu_645 for ONNX node: Relu_645
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 790 for ONNX tensor: 790
[03/01/2023-14:29:04] [V] [TRT] Relu_645 [Relu] outputs: [790 -> (1, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Conv_646 [Conv]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 790
[03/01/2023-14:29:04] [V] [TRT] Searching for input: patchattention_channel.fc.2.weight
[03/01/2023-14:29:04] [V] [TRT] Conv_646 [Conv] inputs: [790 -> (1, 8, 1, 1)[FLOAT]], [patchattention_channel.fc.2.weight -> (128, 8, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Convolution input dimensions: (1, 8, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Conv_646 for ONNX node: Conv_646
[03/01/2023-14:29:04] [V] [TRT] Using kernel: (1, 1), strides: (1, 1), prepadding: (0, 0), postpadding: (0, 0), dilations: (1, 1), numOutputs: 128
[03/01/2023-14:29:04] [V] [TRT] Convolution output dimensions: (1, 128, 1, 1)
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 791 for ONNX tensor: 791
[03/01/2023-14:29:04] [V] [TRT] Conv_646 [Conv] outputs: [791 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Add_647 [Add]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 787
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 791
[03/01/2023-14:29:04] [V] [TRT] Add_647 [Add] inputs: [787 -> (1, 128, 1, 1)[FLOAT]], [791 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Add_647 for ONNX node: Add_647
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 792 for ONNX tensor: 792
[03/01/2023-14:29:04] [V] [TRT] Add_647 [Add] outputs: [792 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Sigmoid_648 [Sigmoid]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 792
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_648 [Sigmoid] inputs: [792 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Sigmoid_648 for ONNX node: Sigmoid_648
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 793 for ONNX tensor: 793
[03/01/2023-14:29:04] [V] [TRT] Sigmoid_648 [Sigmoid] outputs: [793 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Mul_649 [Mul]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 783
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 793
[03/01/2023-14:29:04] [V] [TRT] Mul_649 [Mul] inputs: [783 -> (1, 128, 3, 3)[FLOAT]], [793 -> (1, 128, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Mul_649 for ONNX node: Mul_649
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 794 for ONNX tensor: 794
[03/01/2023-14:29:04] [V] [TRT] Mul_649 [Mul] outputs: [794 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Concat_650 [Concat]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 753
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 794
[03/01/2023-14:29:04] [V] [TRT] Concat_650 [Concat] inputs: [753 -> (1, 1920, 3, 3)[FLOAT]], [794 -> (1, 128, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Concat_650 for ONNX node: Concat_650
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 795 for ONNX tensor: 795
[03/01/2023-14:29:04] [V] [TRT] Concat_650 [Concat] outputs: [795 -> (1, 2048, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: GlobalAveragePool_651 [GlobalAveragePool]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 795
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_651 [GlobalAveragePool] inputs: [795 -> (1, 2048, 3, 3)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool operators are implemented via Reduce layers rather than Pooling layers
[03/01/2023-14:29:04] [V] [TRT] Registering layer: GlobalAveragePool_651 for ONNX node: GlobalAveragePool_651
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 796 for ONNX tensor: 796
[03/01/2023-14:29:04] [V] [TRT] GlobalAveragePool_651 [GlobalAveragePool] outputs: [796 -> (1, 2048, 1, 1)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Constant_652 [Constant]
[03/01/2023-14:29:04] [V] [TRT] Constant_652 [Constant] inputs: 
[03/01/2023-14:29:04] [V] [TRT] Constant_652 [Constant] outputs: [797 -> (2)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Reshape_653 [Reshape]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 796
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 797
[03/01/2023-14:29:04] [V] [TRT] Reshape_653 [Reshape] inputs: [796 -> (1, 2048, 1, 1)[FLOAT]], [797 -> (2)[INT32]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Reshape_653 for ONNX node: Reshape_653
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 798 for ONNX tensor: 798
[03/01/2023-14:29:04] [V] [TRT] Reshape_653 [Reshape] outputs: [798 -> (1, 2048)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Parsing node: Gemm_654 [Gemm]
[03/01/2023-14:29:04] [V] [TRT] Searching for input: 798
[03/01/2023-14:29:04] [V] [TRT] Searching for input: classfier2.weight
[03/01/2023-14:29:04] [V] [TRT] Searching for input: classfier2.bias
[03/01/2023-14:29:04] [V] [TRT] Gemm_654 [Gemm] inputs: [798 -> (1, 2048)[FLOAT]], [classfier2.weight -> (6, 2048)[FLOAT]], [classfier2.bias -> (6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Registering layer: classfier2.weight for ONNX node: classfier2.weight
[03/01/2023-14:29:04] [V] [TRT] Using opA: 0 opB: 1
[03/01/2023-14:29:04] [V] [TRT] Registering layer: Gemm_654 for ONNX node: Gemm_654
[03/01/2023-14:29:04] [V] [TRT] Registering layer: classfier2.bias for ONNX node: classfier2.bias
[03/01/2023-14:29:04] [V] [TRT] Registering tensor: 799_134 for ONNX tensor: 799
[03/01/2023-14:29:04] [V] [TRT] Gemm_654 [Gemm] outputs: [799 -> (1, 6)[FLOAT]], 
[03/01/2023-14:29:04] [V] [TRT] Marking output_4 as output: output
[03/01/2023-14:29:04] [V] [TRT] Marking 799_134 as output: 799
[03/01/2023-14:29:04] [I] Finish parsing network model
[03/01/2023-14:29:04] [V] Trying to set exclusive file lock ./timing.cache.lock
[03/01/2023-14:29:04] [V] File locked in 3.795e-06 seconds.
[03/01/2023-14:29:04] [I] Loaded 45341 bytes of timing cache from ./timing.cache
[03/01/2023-14:29:04] [V] Trying to remove exclusive file lock ./timing.cache.lock
[03/01/2023-14:29:04] [V] File unlocked in 5.858e-06 seconds.
[03/01/2023-14:29:04] [V] [TRT] Loaded 434 timing cache entries.
[03/01/2023-14:29:04] [V] [TRT] Loaded 59 bytes of code generator cache.
[03/01/2023-14:29:04] [V] [TRT] Original: 527 layers
[03/01/2023-14:29:04] [V] [TRT] After dead-layer removal: 527 layers
[03/01/2023-14:29:04] [V] [TRT] Applying generic optimizations to the graph for inference.
[03/01/2023-14:29:04] [V] [TRT] Running: ConstShuffleFusion on classfier1.bias
[03/01/2023-14:29:04] [V] [TRT] ConstShuffleFusion: Fusing classfier1.bias with (Unnamed Layer* 43) [Shuffle]
[03/01/2023-14:29:04] [V] [TRT] Running: ConstShuffleFusion on classfier2.bias
[03/01/2023-14:29:04] [V] [TRT] ConstShuffleFusion: Fusing classfier2.bias with (Unnamed Layer* 529) [Shuffle]
[03/01/2023-14:29:04] [V] [TRT] After Myelin optimization: 525 layers
[03/01/2023-14:29:04] [V] [TRT] Running: MatMulToConvTransform on Gemm_43
[03/01/2023-14:29:04] [V] [TRT] Convert layer type of Gemm_43 from MATRIX_MULTIPLY to CONVOLUTION
[03/01/2023-14:29:04] [V] [TRT] Running: MatMulToConvTransform on Gemm_654
[03/01/2023-14:29:04] [V] [TRT] Convert layer type of Gemm_654 from MATRIX_MULTIPLY to CONVOLUTION
[03/01/2023-14:29:04] [V] [TRT] Running: ShuffleShuffleFusion on Reshape_42
[03/01/2023-14:29:04] [V] [TRT] ShuffleShuffleFusion: Fusing Reshape_42 with reshape_before_Gemm_43
[03/01/2023-14:29:04] [V] [TRT] Running: ShuffleErasure on Reshape_42 + reshape_before_Gemm_43
[03/01/2023-14:29:04] [V] [TRT] Removing Reshape_42 + reshape_before_Gemm_43
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReshapeBiasAddFusion on Gemm_43
[03/01/2023-14:29:04] [V] [TRT] Running: ShuffleShuffleFusion on Reshape_653
[03/01/2023-14:29:04] [V] [TRT] ShuffleShuffleFusion: Fusing Reshape_653 with reshape_before_Gemm_654
[03/01/2023-14:29:04] [V] [TRT] Running: ShuffleErasure on Reshape_653 + reshape_before_Gemm_654
[03/01/2023-14:29:04] [V] [TRT] Removing Reshape_653 + reshape_before_Gemm_654
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReshapeBiasAddFusion on Gemm_654
[03/01/2023-14:29:04] [V] [TRT] Applying ScaleNodes fusions.
[03/01/2023-14:29:04] [V] [TRT] After scale fusion: 519 layers
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_0
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_0 with Relu_1
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_2
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_2 with Relu_3
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_5
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_5 with Relu_6
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_7
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_7 with Relu_8
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_17
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_17 with Relu_18
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_19
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_19 with Relu_20
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_29
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_29 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_30
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_30 with Relu_31
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_32
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_32 with Add_37
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_34
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_34 with Relu_35
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_40
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_40 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_54
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_54 with Relu_55
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_56
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_56 with Relu_57
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_59
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_59 with Relu_60
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_61
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_61 with Relu_62
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_70
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_70 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_71
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_71 with Relu_72
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_73
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_73 with Add_78
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_75
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_75 with Relu_76
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_91
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_91 with Relu_92
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_93
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_93 with Relu_94
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_96
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_96 with Relu_97
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_98
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_98 with Relu_99
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_107
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_107 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_108
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_108 with Relu_109
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_110
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_110 with Add_115
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_112
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_112 with Relu_113
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_129
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_129 with Relu_130
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_131
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_131 with Relu_132
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_134
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_134 with Relu_135
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_136
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_136 with Relu_137
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_145
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_145 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_146
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_146 with Relu_147
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_148
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_148 with Add_153
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_150
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_150 with Relu_151
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_167
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_167 with Relu_168
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_169
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_169 with Relu_170
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_172
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_172 with Relu_173
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_174
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_174 with Relu_175
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_183
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_183 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_184
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_184 with Relu_185
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_186
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_186 with Add_191
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_188
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_188 with Relu_189
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_205
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_205 with Relu_206
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_207
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_207 with Relu_208
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_210
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_210 with Relu_211
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_212
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_212 with Relu_213
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_221
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_221 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_222
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_222 with Relu_223
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_224
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_224 with Add_229
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_226
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_226 with Relu_227
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_243
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_243 with Relu_244
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_245
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_245 with Relu_246
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_248
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_248 with Relu_249
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_250
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_250 with Relu_251
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_259
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_259 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_260
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_260 with Relu_261
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_262
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_262 with Add_267
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_264
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_264 with Relu_265
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_281
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_281 with Relu_282
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_283
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_283 with Relu_284
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_286
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_286 with Relu_287
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_288
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_288 with Relu_289
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_297
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_297 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_298
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_298 with Relu_299
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_300
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_300 with Add_305
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_302
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_302 with Relu_303
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_319
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_319 with Relu_320
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_321
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_321 with Relu_322
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_324
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_324 with Relu_325
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_326
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_326 with Relu_327
[03/01/2023-14:29:04] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_335
[03/01/2023-14:29:04] [V] [TRT] Swap the layer type of GlobalAveragePool_335 from REDUCE to POOLING
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_336
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_336 with Relu_337
[03/01/2023-14:29:04] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_338
[03/01/2023-14:29:04] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_338 with Add_343
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_340
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_340 with Relu_341
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_357
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_357 with Relu_358
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_359
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_359 with Relu_360
[03/01/2023-14:29:04] [V] [TRT] Running: ConvReluFusion on Conv_362
[03/01/2023-14:29:04] [V] [TRT] ConvReluFusion: Fusing Conv_362 with Relu_363
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_364
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_364 with Relu_365
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_373
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_373 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_374
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_374 with Relu_375
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_376
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_376 with Add_381
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_378
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_378 with Relu_379
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_395
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_395 with Relu_396
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_397
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_397 with Relu_398
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_400
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_400 with Relu_401
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_402
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_402 with Relu_403
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_411
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_411 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_412
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_412 with Relu_413
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_414
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_414 with Add_419
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_416
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_416 with Relu_417
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_433
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_433 with Relu_434
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_435
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_435 with Relu_436
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_438
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_438 with Relu_439
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_440
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_440 with Relu_441
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_449
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_449 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_450
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_450 with Relu_451
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_452
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_452 with Add_457
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_454
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_454 with Relu_455
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_471
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_471 with Relu_472
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_473
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_473 with Relu_474
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_476
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_476 with Relu_477
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_478
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_478 with Relu_479
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_487
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_487 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_488
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_488 with Relu_489
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_490
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_490 with Add_495
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_492
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_492 with Relu_493
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_509
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_509 with Relu_510
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_511
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_511 with Relu_512
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_514
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_514 with Relu_515
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_516
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_516 with Relu_517
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_525
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_525 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_526
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_526 with Relu_527
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_528
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_528 with Add_533
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_530
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_530 with Relu_531
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_547
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_547 with Relu_548
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_549
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_549 with Relu_550
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_552
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_552 with Relu_553
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_554
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_554 with Relu_555
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_563
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_563 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_564
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_564 with Relu_565
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_566
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_566 with Add_571
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_568
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_568 with Relu_569
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_585
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_585 with Relu_586
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_587
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_587 with Relu_588
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_590
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_590 with Relu_591
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_592
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_592 with Relu_593
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_601
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_601 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_602
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_602 with Relu_603
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_604
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_604 with Add_609
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_606
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_606 with Relu_607
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_623
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_623 with Relu_624
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_625
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_625 with Relu_626
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_628
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_628 with Relu_629
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_630
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_630 with Relu_631
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_639
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_639 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_640
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_640 with Relu_641
[03/01/2023-14:29:05] [V] [TRT] Running: ConvEltwiseSumFusion on Conv_642
[03/01/2023-14:29:05] [V] [TRT] ConvEltwiseSumFusion: Fusing Conv_642 with Add_647
[03/01/2023-14:29:05] [V] [TRT] Running: ConvReluFusion on Conv_644
[03/01/2023-14:29:05] [V] [TRT] ConvReluFusion: Fusing Conv_644 with Relu_645
[03/01/2023-14:29:05] [V] [TRT] Running: ReduceToPoolingFusion on GlobalAveragePool_651
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of GlobalAveragePool_651 from REDUCE to POOLING
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_27
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_27 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_38
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_38 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_68
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_68 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_79
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_79 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_105
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_105 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_116
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_116 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_143
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_143 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_154
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_154 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_181
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_181 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_192
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_192 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_219
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_219 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_230
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_230 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_257
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_257 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_268
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_268 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_295
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_295 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_306
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_306 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_333
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_333 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_344
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_344 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_371
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_371 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_382
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_382 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_409
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_409 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_420
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_420 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_447
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_447 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_458
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_458 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_485
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_485 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_496
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_496 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_523
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_523 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_534
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_534 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_561
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_561 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_572
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_572 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_599
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_599 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_610
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_610 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_637
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_637 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] Running: ActivationToPointwiseConversion on Sigmoid_648
[03/01/2023-14:29:05] [V] [TRT] Swap the layer type of Sigmoid_648 from ACTIVATION to POINTWISE
[03/01/2023-14:29:05] [V] [TRT] After dupe layer removal: 398 layers
[03/01/2023-14:29:05] [V] [TRT] After final dead-layer removal: 398 layers
[03/01/2023-14:29:06] [V] [TRT] After tensor merging: 398 layers
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_27)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_27) with Mul_28
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_38)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_38) with Mul_39
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_68)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_68) with Mul_69
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_79)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_79) with Mul_80
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_105)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_105) with Mul_106
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_116)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_116) with Mul_117
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_143)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_143) with Mul_144
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_154)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_154) with Mul_155
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_181)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_181) with Mul_182
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_192)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_192) with Mul_193
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_219)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_219) with Mul_220
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_230)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_230) with Mul_231
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_257)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_257) with Mul_258
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_268)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_268) with Mul_269
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_295)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_295) with Mul_296
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_306)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_306) with Mul_307
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_333)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_333) with Mul_334
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_344)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_344) with Mul_345
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_371)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_371) with Mul_372
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_382)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_382) with Mul_383
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_409)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_409) with Mul_410
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_420)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_420) with Mul_421
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_447)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_447) with Mul_448
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_458)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_458) with Mul_459
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_485)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_485) with Mul_486
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_496)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_496) with Mul_497
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_523)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_523) with Mul_524
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_534)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_534) with Mul_535
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_561)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_561) with Mul_562
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_572)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_572) with Mul_573
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_599)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_599) with Mul_600
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_610)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_610) with Mul_611
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_637)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_637) with Mul_638
[03/01/2023-14:29:07] [V] [TRT] Running: PointWiseFusion on PWN(Sigmoid_648)
[03/01/2023-14:29:07] [V] [TRT] PointWiseFusion: Fusing PWN(Sigmoid_648) with Mul_649
[03/01/2023-14:29:07] [V] [TRT] After vertical fusions: 364 layers
[03/01/2023-14:29:07] [V] [TRT] After dupe layer removal: 364 layers
[03/01/2023-14:29:07] [V] [TRT] After final dead-layer removal: 364 layers
[03/01/2023-14:29:08] [V] [TRT] After tensor merging: 364 layers
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_48 by retargeting 129 from 129 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_53 with copy from input to 134
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_85 by retargeting 170 from 170 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_90 with copy from input to 175
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_123 by retargeting 212 from 212 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_128 with copy from input to 217
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_161 by retargeting 254 from 254 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_166 with copy from input to 259
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_199 by retargeting 296 from 296 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_204 with copy from input to 301
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_237 by retargeting 338 from 338 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_242 with copy from input to 343
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_275 by retargeting 380 from 380 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_280 with copy from input to 385
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_313 by retargeting 422 from 422 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_318 with copy from input to 427
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_351 by retargeting 464 from 464 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_356 with copy from input to 469
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_389 by retargeting 506 from 506 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_394 with copy from input to 511
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_427 by retargeting 548 from 548 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_432 with copy from input to 553
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_465 by retargeting 590 from 590 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_470 with copy from input to 595
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_503 by retargeting 632 from 632 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_508 with copy from input to 637
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_541 by retargeting 674 from 674 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_546 with copy from input to 679
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_579 by retargeting 716 from 716 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_584 with copy from input to 721
[03/01/2023-14:29:08] [V] [TRT] Eliminating slice Slice_617 by retargeting 758 from 758 to input
[03/01/2023-14:29:08] [V] [TRT] Replacing slice Slice_622 with copy from input to 763
[03/01/2023-14:29:08] [V] [TRT] After slice removal: 348 layers
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_650
[03/01/2023-14:29:08] [V] [TRT] Retargeting 753 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 794 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_635
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 778 to 780 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 779 to 780 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_612
[03/01/2023-14:29:08] [V] [TRT] Retargeting 711 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 752 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_597
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 736 to 738 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 737 to 738 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_574
[03/01/2023-14:29:08] [V] [TRT] Retargeting 669 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 710 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_559
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 694 to 696 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 695 to 696 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_536
[03/01/2023-14:29:08] [V] [TRT] Retargeting 627 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 668 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_521
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 652 to 654 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 653 to 654 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_498
[03/01/2023-14:29:08] [V] [TRT] Retargeting 585 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 626 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_483
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 610 to 612 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 611 to 612 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_460
[03/01/2023-14:29:08] [V] [TRT] Retargeting 543 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 584 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_445
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 568 to 570 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 569 to 570 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_422
[03/01/2023-14:29:08] [V] [TRT] Retargeting 501 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 542 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_407
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 526 to 528 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 527 to 528 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_384
[03/01/2023-14:29:08] [V] [TRT] Retargeting 459 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 500 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_369
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 484 to 486 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 485 to 486 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_346
[03/01/2023-14:29:08] [V] [TRT] Retargeting 417 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 458 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_331
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 442 to 444 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 443 to 444 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_308
[03/01/2023-14:29:08] [V] [TRT] Retargeting 375 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 416 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_293
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 400 to 402 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 401 to 402 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_270
[03/01/2023-14:29:08] [V] [TRT] Retargeting 333 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 374 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_255
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 358 to 360 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 359 to 360 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_232
[03/01/2023-14:29:08] [V] [TRT] Retargeting 291 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 332 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_217
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 316 to 318 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 317 to 318 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_194
[03/01/2023-14:29:08] [V] [TRT] Retargeting 249 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 290 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_179
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 274 to 276 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 275 to 276 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_156
[03/01/2023-14:29:08] [V] [TRT] Retargeting 207 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 248 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_141
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 232 to 234 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 233 to 234 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_118
[03/01/2023-14:29:08] [V] [TRT] Retargeting 165 to 795
[03/01/2023-14:29:08] [V] [TRT] Retargeting 206 to 795
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_103
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 190 to 192 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 191 to 192 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_66
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 149 to 151 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 150 to 151 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_25
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 104 to 106 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 105 to 106 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] Eliminating concatenation Concat_22
[03/01/2023-14:29:08] [V] [TRT] Retargeting 102 to 103
[03/01/2023-14:29:08] [V] [TRT] Generating copy for 95 to 103 because input does not support striding.
[03/01/2023-14:29:08] [V] [TRT] After concat removal: 350 layers
[03/01/2023-14:29:08] [V] [TRT] Trying to split Reshape and strided tensor
[03/01/2023-14:29:08] [V] [TRT] Graph construction and optimization completed in 4.09895 seconds.
[03/01/2023-14:29:08] [V] [TRT] Trying to load shared library libcublas.so.11
[03/01/2023-14:29:08] [V] [TRT] Loaded shared library libcublas.so.11
[03/01/2023-14:29:11] [V] [TRT] Using cublas as plugin tactic source
[03/01/2023-14:29:11] [V] [TRT] Trying to load shared library libcublasLt.so.11
[03/01/2023-14:29:11] [V] [TRT] Loaded shared library libcublasLt.so.11
[03/01/2023-14:29:11] [V] [TRT] Using cublasLt as core library tactic source
[03/01/2023-14:29:11] [I] [TRT] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +622, GPU +260, now: CPU 1479, GPU 8586 (MiB)
[03/01/2023-14:29:11] [V] [TRT] Trying to load shared library libcudnn.so.8
[03/01/2023-14:29:11] [V] [TRT] Loaded shared library libcudnn.so.8
[03/01/2023-14:29:11] [V] [TRT] Using cuDNN as plugin tactic source
[03/01/2023-14:29:14] [V] [TRT] Using cuDNN as core library tactic source
[03/01/2023-14:29:14] [I] [TRT] [MemUsageChange] Init cuDNN: CPU +654, GPU -5812, now: CPU 2133, GPU 2774 (MiB)
[03/01/2023-14:29:14] [W] [TRT] TensorRT was linked against cuDNN 8.6.0 but loaded cuDNN 8.1.1
[03/01/2023-14:29:14] [I] [TRT] Global timing cache in use. Profiling results in this builder pass will be stored.
[03/01/2023-14:29:14] [V] [TRT] Constructing optimization profile number 0 [1/1].
[03/01/2023-14:29:14] [V] [TRT] Reserving memory for host IO tensors. Host: 0 bytes
[03/01/2023-14:29:14] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:14] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(3600,1,60,1) ***************
[03/01/2023-14:29:14] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(input -> <out>) (Reformat)
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00362526
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0232803
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00861365
[03/01/2023-14:29:14] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00362526
[03/01/2023-14:29:14] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(3600,1:4,60,1) ***************
[03/01/2023-14:29:14] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(input -> <out>) (Reformat)
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00858057
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0224033
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.009382
[03/01/2023-14:29:14] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00858057
[03/01/2023-14:29:14] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:14] [V] [TRT] *************** Autotuning Reformat: Float(215296,3364,58,1) -> Float(215296,1,3712,64) ***************
[03/01/2023-14:29:14] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(73 -> <out>) (Reformat)
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00746811
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0206054
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00720526
[03/01/2023-14:29:14] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00720526
[03/01/2023-14:29:14] [V] [TRT] *************** Autotuning Reformat: Float(215296,3364,58,1) -> Float(53824,1:4,928,16) ***************
[03/01/2023-14:29:14] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(73 -> <out>) (Reformat)
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00774472
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0223804
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00815949
[03/01/2023-14:29:14] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00774472
[03/01/2023-14:29:14] [V] [TRT] *************** Autotuning Reformat: Float(215296,1,3712,64) -> Float(215296,3364,58,1) ***************
[03/01/2023-14:29:14] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(73 -> <out>) (Reformat)
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00762177
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.021905
[03/01/2023-14:29:14] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00815975
[03/01/2023-14:29:14] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00762177
[03/01/2023-14:29:14] [V] [TRT] *************** Autotuning Reformat: Float(215296,1,3712,64) -> Float(53824,1:4,928,16) ***************
[03/01/2023-14:29:14] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(73 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00741669
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0223817
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00743886
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00741669
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(53824,1:4,928,16) -> Float(215296,3364,58,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(73 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00728389
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0218619
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00756836
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00728389
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(53824,1:4,928,16) -> Float(215296,1,3712,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(73 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00720572
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0222544
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00553055
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00553055
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(200704,3136,56,1) -> Float(50176,1:4,896,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(76 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00426783
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0116128
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00466227
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00426783
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(200704,1,3584,64) -> Float(200704,3136,56,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(76 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00609467
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0206237
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00726949
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00609467
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(200704,1,3584,64) -> Float(50176,1:4,896,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(76 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00678836
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.020689
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00694444
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00678836
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(50176,1:4,896,16) -> Float(200704,3136,56,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(76 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00676987
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0202057
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00809448
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00676987
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(50176,784,28,1) -> Float(50176,1,1792,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(77 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00691788
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0212741
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00732868
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00691788
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(50176,784,28,1) -> Float(12544,1:4,448,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(77 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00716823
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0208562
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00740846
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00716823
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(50176,1,1792,64) -> Float(50176,784,28,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(77 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00768553
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0219416
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00769853
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00768553
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(50176,1,1792,64) -> Float(12544,1:4,448,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(77 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00728594
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0228807
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0074976
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00728594
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(12544,1:4,448,16) -> Float(50176,784,28,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(77 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00738674
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0223608
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00759146
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00738674
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(12544,1:4,448,16) -> Float(50176,1,1792,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(77 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00741714
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0223203
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00741531
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00741531
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(86528,676,26,1) -> Float(86528,1,3328,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(80 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0037849
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105134
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00601676
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0037849
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(86528,676,26,1) -> Float(21632,1:4,832,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(80 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00583973
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0177016
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00572215
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00572215
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(86528,1,3328,128) -> Float(86528,676,26,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(80 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00573367
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0167903
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00412878
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00412878
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(86528,1,3328,128) -> Float(21632,1:4,832,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(80 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00410005
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108353
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00413322
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00410005
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(21632,1:4,832,32) -> Float(86528,676,26,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(80 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00401803
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105747
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00414472
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00401803
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(21632,1:4,832,32) -> Float(86528,1,3328,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(80 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00401067
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109925
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00409652
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00401067
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(73728,576,24,1) -> Float(18432,1:4,768,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(73728,1,3072,128) -> Float(73728,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(83 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00398286
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105626
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00419252
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00398286
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(73728,1,3072,128) -> Float(18432,1:4,768,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(83 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00417084
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109819
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00425465
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00417084
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1:4,768,32) -> Float(73728,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,144,12,1) -> Float(18432,1,1536,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(<in> -> 84) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00398159
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0104803
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00406273
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00398159
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,144,12,1) -> Float(4608,1:4,384,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,384,32) -> Float(18432,144,12,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,384,32) -> Float(18432,1,1536,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(<in> -> 84) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00399492
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107102
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0040546
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00399492
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,1536,128) -> Float(18432,144,12,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(84 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00401498
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0104385
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00415386
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00401498
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,384,32) -> Float(18432,144,12,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,144,12,1) -> Float(18432,1,1536,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(84 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00398146
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010449
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00406298
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00398146
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,144,12,1) -> Float(4608,1:4,384,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(84 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00401816
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106162
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00404749
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00401816
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,1536,128) -> Float(18432,144,12,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,1536,128) -> Float(4608,1:4,384,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(84 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00582839
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0310126
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00910543
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00582839
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,384,32) -> Float(18432,144,12,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,384,32) -> Float(18432,1,1536,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(84 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00883792
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0126903
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00497734
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00497734
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,100,10,1) -> Float(25600,1,2560,256) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(98 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00479406
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0124952
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0047186
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.0047186
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,100,10,1) -> Float(6400,1:4,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(98 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00388621
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010044
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00389041
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00388621
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,2560,256) -> Float(25600,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(98 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00409548
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0119223
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00550171
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00409548
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,2560,256) -> Float(6400,1:4,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(98 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00538396
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0123867
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00657621
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00538396
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,640,64) -> Float(25600,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(98 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00618095
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0162565
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00586807
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00586807
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,640,64) -> Float(25600,1,2560,256) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(98 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00567789
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0172754
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00782147
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00567789
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16384,64,8,1) -> Float(4096,1:4,512,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16384,1,2048,256) -> Float(16384,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(101 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00715383
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0200777
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00764559
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00715383
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16384,1,2048,256) -> Float(4096,1:4,512,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(101 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00719589
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.021022
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00763693
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00719589
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4096,1:4,512,64) -> Float(16384,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) long-strided -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) long-strided -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) long-strided -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) long-strided -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) long-strided -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) long-strided -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) long-strided -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) long-strided -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4096,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4096,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4096,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4096,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4096,16,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1024,1:4,256,64) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1024,1:4,256,64) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1024,1:4,256,64) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1024,1:4,256,64) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1024,1:4,256,64) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 95 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00914257
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0248678
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0119211
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00914257
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 95 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0104382
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0239421
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00716754
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00716754
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 95 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00657558
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0195291
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00656312
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00656312
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 95 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00673683
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.01898
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00658847
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00658847
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,16,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 95 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00688958
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0208144
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00703652
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00688958
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(32,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 104 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00628392
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0198583
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00840766
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00628392
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(32,1,8,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 104 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00662338
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0205009
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00734331
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00662338
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 104 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00390647
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.00998705
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00394168
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00390647
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(32,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 105 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00348845
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.00982065
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00474618
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00348845
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(32,1,8,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 105 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00397282
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107843
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00404178
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00397282
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 105 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00411977
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105848
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00419553
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00411977
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,16,4,1) -> Float(32,1,8,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(106 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0040913
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0104594
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00427227
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0040913
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,16,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(106 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00431973
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106782
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00424202
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00424202
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1,8,2) -> Float(32,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(106 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00415464
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010543
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0042677
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00415464
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1,8,2) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(106 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0042685
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108056
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0043441
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0042685
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1:4,4,1) -> Float(32,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(106 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00415477
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0103654
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00427576
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00415477
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1:4,4,1) -> Float(32,1,8,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(106 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00415765
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106371
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00426286
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00415765
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(16,1,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(16,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1,4,1) -> Float(16,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1,4,1) -> Float(16,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1:4,4,1) -> Float(16,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1:4,4,1) -> Float(16,1,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1:4,4,1) -> Float(16,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,1:4,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16:32,4,1) -> Float(16,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16:32,4,1) -> Float(16,1,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16:32,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(16,16:32,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(16,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(16,1,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(16,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,1,1) -> Float(24,1,24,24) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(116 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00406248
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109404
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00414602
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00406248
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,1,1) -> Float(6,1:4,6,6) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(116 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00412108
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109505
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00415869
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00412108
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,24,24) -> Float(24,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(116 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00415399
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0110393
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00413518
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00413518
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,24,24) -> Float(6,1:4,6,6) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(116 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00407009
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.011174
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00411298
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00407009
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6,1:4,6,6) -> Float(24,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(116 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00403911
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106371
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00409587
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00403911
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6,1:4,6,6) -> Float(24,1,24,24) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(116 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00405359
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010961
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00404635
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00404635
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,1,1) -> Float(24,1,24,24) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,1,1) -> Float(6,1:4,6,6) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,24,24) -> Float(24,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(24,1,24,24) -> Float(6,1:4,6,6) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6,1:4,6,6) -> Float(24,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6,1:4,6,6) -> Float(24,1,24,24) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(12,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(12,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(12,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(12,1:32,1,1) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(12,1:32,1,1) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(12,1:32,1,1) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(12,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(12,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6144,1,1536,384) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1536,1:4,384,96) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(192,16:32,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,16,4,1) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,1,1) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(384,1,384,384) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(96,1:4,96,96) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6,1,6,6) -> Float(6,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(Gemm_43_out_tensor -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00399784
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108251
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00405803
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00399784
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(6,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(Gemm_43_out_tensor -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00398908
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107843
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00411559
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00398908
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_53 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00380692
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010846
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0040659
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00380692
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_53 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00406755
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0103654
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00405435
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00405435
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_53 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00413309
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010386
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00406311
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00406311
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(134 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00396083
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105215
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00397397
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00396083
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(134 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00401409
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106266
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0042681
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00401409
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(134 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00567771
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0145271
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00563833
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00563833
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(134 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00598038
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0161239
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00746103
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00598038
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(134 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00707788
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0181377
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00734994
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00707788
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(134 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00742377
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0227788
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00714834
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00714834
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(137 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00426702
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108147
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00457557
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00426702
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(137 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00435685
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0110963
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00458057
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00435685
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(137 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00445978
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0114205
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00475635
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00445978
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(137 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00460992
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0117243
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00481707
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00460992
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(137 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00453486
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0118586
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00482225
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00453486
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(137 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00448857
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0116353
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00478796
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00448857
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(140 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00458486
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0118379
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00471432
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00458486
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(140 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00454414
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0115003
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0047276
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00454414
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(140 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00457129
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0122392
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00480168
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00457129
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(140 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0044462
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0122514
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00470769
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0044462
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(141 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00564272
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0232575
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00766701
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00564272
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(141 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00516898
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0146295
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00512
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00512
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(141 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00499846
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0143945
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00523445
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00499846
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(141 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0055272
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0228415
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00695227
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0055272
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(141 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00685431
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0209189
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00743223
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00685431
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(141 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0070585
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0216921
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00721852
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0070585
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(144 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00690482
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0208581
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00705567
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00690482
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(144 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00679605
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0207308
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00686846
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00679605
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(144 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00585636
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0162537
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00750971
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00585636
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(144 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0071904
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0225476
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00746057
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0071904
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(144 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00731406
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0220878
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00757582
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00731406
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(144 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00732823
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0225907
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00752986
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00732823
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(147 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00739428
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0224862
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00750377
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00739428
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(147 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00745806
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0226325
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00759074
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00745806
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 149 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0066693
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0223399
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0056153
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.0056153
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 149 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00384517
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0102296
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00393748
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00384517
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 149 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0038699
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0100849
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00392574
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0038699
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 150 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00650286
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0215667
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00877607
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00650286
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 150 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0087957
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0227801
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00745234
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00745234
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 150 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00794997
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0122027
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00412199
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00412199
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(151 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00407543
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0103024
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0040546
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.0040546
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(151 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00408359
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0170677
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00982034
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00408359
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(151 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00779356
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0189029
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00745509
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00745509
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(151 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00758496
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0189257
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00826464
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00758496
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(151 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00783808
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0215269
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00764511
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00764511
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(151 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0073568
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0215876
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00763068
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0073568
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(161 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00651408
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0199863
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00662254
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00651408
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(161 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00643955
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0197863
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00669652
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00643955
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(161 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00478811
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.020689
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00706416
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00478811
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(161 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0068332
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.021984
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00729257
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0068332
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(161 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00683886
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0229055
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00710596
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00683886
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(161 -> <out>) (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00683636
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0217972
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00711728
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00683636
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_90 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00704414
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0227984
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00710335
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00704414
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_90 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00695314
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0213995
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00753684
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00695314
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_90 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00729988
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0218593
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00756018
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00729988
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 190 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00695946
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0220682
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00993707
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00695946
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 190 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00732937
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0151552
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00528016
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00528016
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 190 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00518269
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0114103
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00435796
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00435796
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 191 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00399454
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.011309
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00505868
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00399454
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 191 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00426312
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.011354
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00433925
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00426312
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 191 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00448486
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0113878
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00583936
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00448486
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_128 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00676821
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0229878
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.007256
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00676821
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_128 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0071616
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0219625
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0075212
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0071616
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_128 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00501911
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0101906
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00411298
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00411298
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 232 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00353583
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0104385
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00486705
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00353583
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 232 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00389004
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105953
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00394971
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00389004
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 232 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00385672
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105221
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0061301
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00385672
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 233 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00650348
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0208353
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00839543
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00650348
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 233 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00702171
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0210233
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00670296
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00670296
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 233 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00599771
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0149943
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00592183
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00592183
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_166 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00789871
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0221309
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00875187
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00789871
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_166 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00882931
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0214831
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00923343
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00882931
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_166 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00892101
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.021086
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00797359
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00797359
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 274 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00721211
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0228833
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.010352
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00721211
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 274 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00786863
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0224033
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00770743
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00770743
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 274 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0041583
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109822
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00413753
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00413753
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 275 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00376
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107207
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00492511
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00376
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 275 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00413362
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0200777
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00716754
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00413362
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 275 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00650971
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0194549
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00678899
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00650971
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_204 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00628989
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0202423
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00653693
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00628989
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_204 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00654421
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0190354
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00672914
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00654421
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_204 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00445936
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0117479
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00449857
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00445936
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 316 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00404241
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0118154
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00508453
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00404241
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 316 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00404698
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108565
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00426353
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00404698
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 316 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00398603
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010929
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00399441
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00398603
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 317 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.003744
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107624
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00485653
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.003744
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 317 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00391401
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108147
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00401435
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00391401
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 317 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00408346
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107837
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00412108
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00408346
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_242 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00375889
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108878
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00401498
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00375889
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_242 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0039986
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0104072
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00406362
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0039986
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_242 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00497828
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0221708
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00824914
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00497828
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 358 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00459371
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0139503
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00597924
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00459371
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 358 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00469088
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0142163
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00515167
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00469088
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 358 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0052498
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0158806
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00536364
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0052498
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 359 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00505442
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0154171
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00660239
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00505442
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 359 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00451657
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010846
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00404292
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00404292
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 359 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0041169
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109303
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00415033
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0041169
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_280 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00382256
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109708
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00405511
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00382256
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_280 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00402641
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0104274
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00412513
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00402641
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_280 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00508469
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0204193
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0068049
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00508469
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 400 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00608324
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.019328
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0078311
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00608324
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 400 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00430239
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0103236
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00387904
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00387904
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 400 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00386273
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105747
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00410005
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00386273
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 401 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00394156
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109401
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00492832
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00394156
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 401 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00402324
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0110727
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00407187
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00402324
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 401 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00416705
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108669
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00415895
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00415895
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_318 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00479863
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0206054
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00574592
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00479863
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_318 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00568826
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0206634
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00764229
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00568826
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: Slice_318 (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00731383
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0217757
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00727817
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00727817
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 442 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00649401
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0207935
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00830578
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00649401
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 442 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0067628
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0216921
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00690264
[03/01/2023-14:29:15] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0067628
[03/01/2023-14:29:15] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:15] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:15] [V] [TRT] --------------- Timing Runner: 442 copy (Reformat)
[03/01/2023-14:29:15] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00688109
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0216731
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00748274
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00688109
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 443 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00724869
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0219847
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00907829
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00724869
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 443 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00721189
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.022882
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0073952
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00721189
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 443 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00744526
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0176681
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00567121
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00567121
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_356 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00647473
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0215458
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00680187
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00647473
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_356 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00690264
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0203703
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00710596
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00690264
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_356 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0040513
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0102504
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00417097
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0040513
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 484 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00367918
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0118604
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00863113
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00367918
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 484 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00404368
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.127287
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00729943
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00404368
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 484 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00715406
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.019404
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00579913
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00579913
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 485 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00545033
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0175218
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00721897
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00545033
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 485 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00558716
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0172617
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00957684
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00558716
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 485 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0042076
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010658
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00419213
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00419213
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_394 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00410867
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0123246
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00419187
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00410867
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_394 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00417241
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0111177
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00407568
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00407568
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_394 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00415073
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105535
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00422091
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00415073
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 526 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00372489
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107847
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0048221
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00372489
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 526 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00396145
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106998
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00405536
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00396145
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 526 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00399035
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.011949
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0060339
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00399035
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 527 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0049786
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0155648
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00654899
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0049786
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 527 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.005104
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0156507
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00518204
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.005104
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 527 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00729943
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0226116
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0075674
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00729943
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_432 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00401537
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108349
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00693116
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00401537
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_432 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00529812
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0155209
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00544999
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00529812
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_432 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00551947
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0157403
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00561635
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00551947
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 568 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0036684
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105744
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00480838
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0036684
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 568 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00394996
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106687
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00406336
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00394996
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 568 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00403505
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107935
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00405168
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00403505
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 569 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00362126
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.011129
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00504954
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00362126
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 569 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00411285
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0115566
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00441046
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00411285
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 569 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00448429
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0119109
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00429405
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00429405
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_470 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00370215
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0109929
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00412473
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00370215
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_470 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0038788
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107625
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00407975
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0038788
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_470 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00415464
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107318
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00417933
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00415464
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 610 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00366863
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010929
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0048672
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00366863
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 610 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00395404
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108245
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00406768
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00395404
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 610 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0040226
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105113
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.004096
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0040226
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 611 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00373955
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107938
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00483733
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00373955
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 611 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00394144
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0110389
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00410462
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00394144
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 611 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00419187
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0108042
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00427697
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00419187
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_508 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00660946
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0199863
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00676945
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00660946
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_508 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00629585
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0190354
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00666867
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00629585
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_508 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00715223
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0216921
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0067626
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.0067626
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 652 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00615581
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0190914
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00782989
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00615581
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 652 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00634037
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.019544
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00712642
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00634037
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 652 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00708484
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0225913
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00748914
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00708484
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 653 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00696555
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0218586
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00822451
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00696555
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 653 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00756114
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0210442
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0070905
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.0070905
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 653 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00508485
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0159609
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00613791
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00508485
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_546 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00625272
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0230713
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00753059
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00625272
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_546 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0072192
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0220682
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00596705
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00596705
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_546 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00591049
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0171632
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00608286
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00591049
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 694 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00541731
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0224026
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00787537
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00541731
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 694 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00478308
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0107729
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00406349
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00406349
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 694 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00414171
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010961
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00568211
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00414171
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 695 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00700125
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0217548
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00837841
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00700125
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 695 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00660925
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0211696
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00718903
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00660925
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 695 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00712599
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0211696
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00740914
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00712599
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_584 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00688218
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0227788
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00726354
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00688218
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_584 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00727109
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0220264
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00748137
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00727109
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_584 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.0073872
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0225907
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00758857
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.0073872
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 736 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00498853
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0156507
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00702106
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00498853
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 736 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00444177
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0123246
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00451171
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00444177
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 736 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00447514
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0132991
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00496441
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00447514
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 737 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00643518
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0203886
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00787681
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00643518
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 737 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00624537
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0195303
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00636661
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00624537
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 737 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00380764
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0120804
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00447543
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00380764
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_622 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00428975
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0143892
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0056211
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00428975
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_622 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00390622
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.010123
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00404317
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00390622
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(3600,3600,60,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Slice_622 (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00402654
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0105319
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00414655
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00402654
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,576,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1,24,1) -> Float(576,1:4,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,576,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,1:4,24,1) -> Float(576,1,24,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,484,22,1) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(30976,1,1408,64) -> Float(7744,1:4,352,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,484,22,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(7744,1:4,352,16) -> Float(30976,1,1408,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,400,20,1) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(25600,1,1280,64) -> Float(6400,1:4,320,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1:4,320,16) -> Float(25600,400,20,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,100,10,1) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6400,1,640,64) -> Float(1600,1:4,160,16) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,100,10,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1600,1:4,160,16) -> Float(6400,1,640,64) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,64,8,1) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8192,1,1024,128) -> Float(2048,1:4,256,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,64,8,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1:4,256,32) -> Float(8192,1,1024,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,36,6,1) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1,768,128) -> Float(1152,1:4,192,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1:4,192,32) -> Float(4608,36,6,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 778 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00365714
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0103131
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0047242
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00365714
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 778 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00381871
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0106789
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00463911
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00381871
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 778 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00706417
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.022737
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00720434
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00706417
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 779 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00691026
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0225071
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00905114
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00691026
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 779 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00674867
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0163804
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00525992
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00525992
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x0000000000000000
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: 779 copy (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00544457
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0143072
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00572855
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00544457
[03/01/2023-14:29:16] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: Reformat Tactic: 0x00000000000003e8
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18,1,6,2) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(18,1,6,2) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,1:4,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(9,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,1:4,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(9,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,1,1) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(8,1,8,8) -> Float(2,1:4,2,2) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(8,1,8,8) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(128,1,128,128) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(32,1:4,32,32) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4,1:32,1,1) -> Float(1:4,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(128,1,128,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(32,1:4,32,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,1,1,1) -> Float(4,1:32,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(1152,1,384,128) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(288,1:4,96,32) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(36,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) long-strided -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) long-strided -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,9,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1152,1,384,128) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(288,1:4,96,32) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(36,9:32,3,1) -> Float(1:4,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,1,6144,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(576,9:32,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(18432,1,6144,2048) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(4608,1:4,1536,512) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(576,9:32,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(18432,9,3,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(1:4,9,3,1) -> Float(4608,1:4,1536,512) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(796 -> <out>) (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00512441
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0126537
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00495811
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00495811
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(512,1:4,512,512) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(796 -> <out>) (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00495322
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0128853
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00495811
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00495322
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(796 -> <out>) (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00661028
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0232803
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00764583
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00661028
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(512,1:4,512,512) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(796 -> <out>) (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00447557
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0113874
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00416287
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00416287
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(512,1:4,512,512) -> Float(2048,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(796 -> <out>) (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00414197
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0110734
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00430265
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x00000000000003e8 Time: 0.00414197
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(512,1:4,512,512) -> Float(2048,1,2048,2048) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Optimizer Reformat(796 -> <out>) (Reformat)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003e8 Time: 0.00688283
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x00000000000003ea Time: 0.0115678
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00413348
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00413348
[03/01/2023-14:29:16] [V] [TRT] =============== Computing reformatting costs: 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(6,1,6,6) -> Float(6,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning Reformat: Float(2,1:4,2,2) -> Float(6,1,1,1) ***************
[03/01/2023-14:29:16] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:16] [V] [TRT] *************** Autotuning format combination: Float(3600,3600,60,1) -> Float(215296,3364,58,1) ***************
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CudaDepthwiseConvolution)
[03/01/2023-14:29:16] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:16] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (FusedConvActConvolution)
[03/01/2023-14:29:16] [V] [TRT] Tactic: 0x000000000007ffff Time: 0.0111634
[03/01/2023-14:29:16] [V] [TRT] Fastest Tactic: 0x000000000007ffff Time: 0.0111634
[03/01/2023-14:29:18] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CudnnConvolution)
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0164328
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.013553
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.0192931
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.0518827
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.0627566
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000006 Time: 0.0162215
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.0135381
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.0135663
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003a Time: 0.0193097
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003c Time: 0.045312
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003d Time: 0.0639771
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003e Time: 0.0162524
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.0135115
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.0135647
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.019328
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.0476404
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.0635368
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000076 Time: 0.0162382
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x0000000000000070 Time: 0.0135115
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskGemmConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskFlattenConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskConvolution)
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.0102606
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.0104705
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1 Tactic: 0x94119b4c514b211a
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x94119b4c514b211a Time: 0.0075751
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.00972312
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.0074096
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.00776084
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_xregs_large_nn_v1 Tactic: 0x5403ad713f811a18
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5403ad713f811a18 Time: 0.0104591
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.00860558
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.00768385
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x01cf8ce2da913006
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x01cf8ce2da913006 Time: 0.010133
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.00922514
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.0103553
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.0070215
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4efce38acc876f5c
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x4efce38acc876f5c Time: 0.0198766
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.00893257
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.0112295
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x8ad32616b1424be4
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x8ad32616b1424be4 Time: 0.00685453
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_relu_xregs_large_nn_v1 Tactic: 0x5deb29b7a8e275f7
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5deb29b7a8e275f7 Time: 0.00935314
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.0103549
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.00900572
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4727434768e46395
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x4727434768e46395 Time: 0.00687543
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.0212532
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.00856148
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.00836267
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.00931657
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x8ad32616b1424be4 Time: 0.00685453
[03/01/2023-14:29:23] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x8ad32616b1424be4
[03/01/2023-14:29:23] [V] [TRT] *************** Autotuning format combination: Float(3600,1,60,1) -> Float(215296,1,3712,64) ***************
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskFlattenConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskConvolution)
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x3f0c846d6379bc98
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3f0c846d6379bc98 Time: 0.0256
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.00929829
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.0162042
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.023552
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.00882877
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x94a7db94ba744c45
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x94a7db94ba744c45 Time: 0.00917057
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.0131786
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x5953bec563d26434
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5953bec563d26434 Time: 0.00885432
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xd15dd11d64344e83
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd15dd11d64344e83 Time: 0.0121661
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x32059de4888dfdda
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x32059de4888dfdda Time: 0.00978164
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0108356
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.00949029
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.00943543
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.009152
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xf48db81f02eca9ee
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf48db81f02eca9ee Time: 0.012069
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.0164643
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.0160752
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.0159126
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.0096451
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x7121ec1db3f80c67 Time: 0.00882877
[03/01/2023-14:29:23] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:23] [V] [TRT] *************** Autotuning format combination: Float(3600,1:4,60,1) -> Float(53824,1:4,928,16) ***************
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CudaDepthwiseConvolution)
[03/01/2023-14:29:23] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskGemmConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskFlattenConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_0 + Relu_1 (CaskConvolution)
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.0179017
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0x634e99502974e4da
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x634e99502974e4da Time: 0.0160264
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.0158801
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x3f0c846d6379bc98
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3f0c846d6379bc98 Time: 0.026064
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r3s3 Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x999e005e3b016ea6 Time: 0.0182674
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.00915257
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.016189
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.023552
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0xb443c221fcb1565b
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xb443c221fcb1565b Time: 0.0183954
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.00846736
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x94a7db94ba744c45
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x94a7db94ba744c45 Time: 0.00901486
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x3e2b881168d9689d
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3e2b881168d9689d Time: 0.0177006
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.0170352
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0xbdfdef6b84f7ccc9
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xbdfdef6b84f7ccc9 Time: 0.0170829
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.0132322
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x5953bec563d26434
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5953bec563d26434 Time: 0.00838756
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0xf90060ce8193b811
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf90060ce8193b811 Time: 0.0157989
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xd15dd11d64344e83
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd15dd11d64344e83 Time: 0.0120571
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x32059de4888dfdda
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x32059de4888dfdda Time: 0.00980114
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xc7feb33970feefa7 Time: 0.0175705
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0109394
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.00949057
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.0185417
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.00911486
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.00893371
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x27b316f52c109002
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x27b316f52c109002 Time: 0.0175868
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xf48db81f02eca9ee
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf48db81f02eca9ee Time: 0.0121051
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xae0c89d047932ba3
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xae0c89d047932ba3 Time: 0.0158574
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.0163677
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.0161077
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xe47307053a42b3e4
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xe47307053a42b3e4 Time: 0.0157111
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.0158597
[03/01/2023-14:29:23] [V] [TRT] Conv_0 + Relu_1 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.00967467
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x5953bec563d26434 Time: 0.00838756
[03/01/2023-14:29:23] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x5953bec563d26434
[03/01/2023-14:29:23] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:23] [V] [TRT] *************** Autotuning format combination: Float(215296,3364,58,1) -> Float(200704,3136,56,1) ***************
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CudaDepthwiseConvolution)
[03/01/2023-14:29:23] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (FusedConvActConvolution)
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000007ffff Time: 0.0403017
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000000affff Time: 0.0343771
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000000effff Time: 0.0258682
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000000fffff Time: 0.0379611
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000019ffff Time: 0.0267215
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000001affff Time: 0.0348453
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000024ffff Time: 0.0283794
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000027ffff Time: 0.0270385
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000002dffff Time: 0.0239177
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000036ffff Time: 0.0257707
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000004cffff Time: 0.0318318
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000062ffff Time: 0.0329435
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000006effff Time: 0.0235938
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000077ffff Time: 0.0228415
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000086ffff Time: 0.0284282
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000089ffff Time: 0.0260632
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000097ffff Time: 0.0264046
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000098ffff Time: 0.0294327
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x00000000009fffff Time: 0.0211905
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000a2ffff Time: 0.021713
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000a4ffff Time: 0.024893
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x00000000009fffff Time: 0.0211905
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CudnnConvolution)
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0681691
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.0337627
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.0976457
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.394971
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.18037
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000006 Time: 0.0222354
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.0681204
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.0278918
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003a Time: 0.0978651
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003c Time: 0.384878
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003d Time: 0.177006
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x000000000000003e Time: 0.0222354
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.0681204
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.0358377
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.0977189
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.385317
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.179639
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0000000000000076 Time: 0.0222981
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x0000000000000006 Time: 0.0222354
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskGemmConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskFlattenConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskConvolution)
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.0662674
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.039168
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1 Tactic: 0x94119b4c514b211a
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x94119b4c514b211a Time: 0.0145984
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.0787017
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.0506636
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.0489082
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_xregs_large_nn_v1 Tactic: 0x5403ad713f811a18
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5403ad713f811a18 Time: 0.0674377
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.0311918
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.0362423
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x01cf8ce2da913006
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x01cf8ce2da913006 Time: 0.038656
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.0527604
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.0673463
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.0263299
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4efce38acc876f5c
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x4efce38acc876f5c Time: 0.120539
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.0636343
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.0443246
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x8ad32616b1424be4
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x8ad32616b1424be4 Time: 0.0303707
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_relu_xregs_large_nn_v1 Tactic: 0x5deb29b7a8e275f7
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5deb29b7a8e275f7 Time: 0.0527131
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.0666575
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.0489569
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4727434768e46395
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x4727434768e46395 Time: 0.0260389
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.122149
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.0654872
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.0632442
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.0547109
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x94119b4c514b211a Time: 0.0145984
[03/01/2023-14:29:23] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x94119b4c514b211a
[03/01/2023-14:29:23] [V] [TRT] *************** Autotuning format combination: Float(215296,1,3712,64) -> Float(200704,1,3584,64) ***************
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskFlattenConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskConvolution)
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.0244312
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0x634e99502974e4da
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x634e99502974e4da Time: 0.0650971
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.0635855
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x3f0c846d6379bc98
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3f0c846d6379bc98 Time: 0.0680716
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.0244297
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.0660724
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.0642194
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.0271604
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x94a7db94ba744c45
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x94a7db94ba744c45 Time: 0.0242834
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x3e2b881168d9689d
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x3e2b881168d9689d Time: 0.0240396
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.0403749
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0xbdfdef6b84f7ccc9
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xbdfdef6b84f7ccc9 Time: 0.0401554
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.0379269
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x5953bec563d26434
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5953bec563d26434 Time: 0.0271116
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0xf90060ce8193b811
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf90060ce8193b811 Time: 0.0647558
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xd15dd11d64344e83
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xd15dd11d64344e83 Time: 0.0363154
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x32059de4888dfdda
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x32059de4888dfdda Time: 0.040448
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xc7feb33970feefa7 Time: 0.0235311
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0449097
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.0314807
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0324169
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.0268937
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x27b316f52c109002
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x27b316f52c109002 Time: 0.0408137
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xf48db81f02eca9ee
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xf48db81f02eca9ee Time: 0.03712
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xae0c89d047932ba3
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xae0c89d047932ba3 Time: 0.0360571
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.0672914
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.0672427
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xe47307053a42b3e4
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xe47307053a42b3e4 Time: 0.0640229
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.0664625
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.0332654
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0xc7feb33970feefa7 Time: 0.0235311
[03/01/2023-14:29:23] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:23] [V] [TRT] *************** Autotuning format combination: Float(53824,1:4,928,16) -> Float(50176,1:4,896,16) ***************
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CudaDepthwiseConvolution)
[03/01/2023-14:29:23] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskGemmConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskFlattenConvolution)
[03/01/2023-14:29:23] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: Conv_2 + Relu_3 (CaskConvolution)
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r3s3 Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x999e005e3b016ea6 Time: 0.0445806
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0xb443c221fcb1565b
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xb443c221fcb1565b Time: 0.0452389
[03/01/2023-14:29:23] [V] [TRT] Conv_2 + Relu_3 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.0467749
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0x999e005e3b016ea6 Time: 0.0445806
[03/01/2023-14:29:23] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:23] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:23] [V] [TRT] *************** Autotuning format combination: Float(200704,3136,56,1) -> Float(50176,784,28,1) ***************
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: MaxPool_4 (TiledPooling)
[03/01/2023-14:29:23] [V] [TRT] TiledPooling has no valid tactics for this config, skipping
[03/01/2023-14:29:23] [V] [TRT] --------------- Timing Runner: MaxPool_4 (CudnnPooling)
[03/01/2023-14:29:23] [V] [TRT] Tactic: 0xffffffffffffffff Time: 0.00428921
[03/01/2023-14:29:23] [V] [TRT] Fastest Tactic: 0xffffffffffffffff Time: 0.00428921
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: MaxPool_4 (CaskPooling)
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll1_tThreads128 Tactic: 0x53862c46aa5b4c2b
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x53862c46aa5b4c2b Time: 0.00339827
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll7_tThreads256 Tactic: 0xbd4519190f75e7e9
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xbd4519190f75e7e9 Time: 0.00324389
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll6_tThreads256 Tactic: 0x60eceb67eff69444
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x60eceb67eff69444 Time: 0.00397473
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll3_tThreads128 Tactic: 0x7a0d6790c453b5f4
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x7a0d6790c453b5f4 Time: 0.00550224
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll8_tThreads256 Tactic: 0xbc5c1844e5cc7959
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xbc5c1844e5cc7959 Time: 0.005272
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_fw_4d_FP32FP32NCHW_Max Tactic: 0xb59f9cfb90407c92
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xb59f9cfb90407c92 Time: 0.00507933
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll6_tThreads128 Tactic: 0xf4b20242f8c135e7
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf4b20242f8c135e7 Time: 0.00508579
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_nd_NCDHW_kMAX_kGENERIC_3D_POOLING_MODE_kFLOAT_0 Tactic: 0x5faf4a0a8a5670ed
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5faf4a0a8a5670ed Time: 0.00503898
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll3_tThreads256 Tactic: 0xee538eb5d3641457
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xee538eb5d3641457 Time: 0.00433579
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll2_tThreads128 Tactic: 0xa7a495ee24d0c659
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa7a495ee24d0c659 Time: 0.00436945
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll4_tThreads128 Tactic: 0xdd39499496c9cc38
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xdd39499496c9cc38 Time: 0.0043235
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll1_tThreads256 Tactic: 0xc7d8c563bd6ced88
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xc7d8c563bd6ced88 Time: 0.00404381
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll5_tThreads128 Tactic: 0x0090bbea764abf95
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0090bbea764abf95 Time: 0.00433551
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll5_tThreads256 Tactic: 0x94ce52cf617d1e36
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x94ce52cf617d1e36 Time: 0.00517829
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll2_tThreads256 Tactic: 0x33fa7ccb33e767fa
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x33fa7ccb33e767fa Time: 0.00584631
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll7_tThreads128 Tactic: 0x291bf03c1842464a
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x291bf03c1842464a Time: 0.00516751
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ32_tR2_tS2_tU2_tV2_tUnroll4_tThreads256 Tactic: 0x4967a0b181fe6d9b
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x4967a0b181fe6d9b Time: 0.00530963
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_tiled_FP32NCHW_kMAX_tP2_tQ16_tR2_tS2_tU2_tV2_tUnroll8_tThreads128 Tactic: 0x2802f161f2fbd8fa
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x2802f161f2fbd8fa Time: 0.00535348
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0xbd4519190f75e7e9 Time: 0.00324389
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskPooling Tactic: 0xbd4519190f75e7e9
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(50176,1:4,896,16) -> Float(12544,1:4,448,16) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: MaxPool_4 (CaskPooling)
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_NOT_PROPAGATE_NAN_2D Tactic: 0xaec8628e8180bced
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xaec8628e8180bced Time: 0.00562022
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_NOT_PROPAGATE_NAN_3D Tactic: 0xfa211b1cdd504de0
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xfa211b1cdd504de0 Time: 0.00542188
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_PROPAGATE_NAN_3D Tactic: 0xd76bac5638836f8a
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd76bac5638836f8a Time: 0.00492922
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_PROPAGATE_NAN_2D Tactic: 0x8382d5c464539e87
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x8382d5c464539e87 Time: 0.00512473
[03/01/2023-14:29:24] [V] [TRT] MaxPool_4 Set Tactic Name: sm50_xmma_pooling_fw_4d_FP32FP32NHWC_Max_CAlign4 Tactic: 0x22fb1bb4a70e340d
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x22fb1bb4a70e340d Time: 0.00493904
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0xd76bac5638836f8a Time: 0.00492922
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskPooling Tactic: 0xd76bac5638836f8a
[03/01/2023-14:29:24] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(50176,784,28,1) -> Float(86528,676,26,1) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CudaDepthwiseConvolution)
[03/01/2023-14:29:24] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (FusedConvActConvolution)
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000007ffff Time: 0.0294034
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000affff Time: 0.0257707
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000effff Time: 0.0161224
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000fffff Time: 0.0218384
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000019ffff Time: 0.0158418
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000001affff Time: 0.014949
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000024ffff Time: 0.0136312
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000027ffff Time: 0.0153161
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000002dffff Time: 0.0158441
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000036ffff Time: 0.0159472
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000004cffff Time: 0.0189806
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000062ffff Time: 0.0234475
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000006effff Time: 0.0132721
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000077ffff Time: 0.0126781
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000086ffff Time: 0.0129459
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000089ffff Time: 0.015344
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000097ffff Time: 0.014528
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000098ffff Time: 0.0198766
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000009fffff Time: 0.0147895
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000a2ffff Time: 0.0149632
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000a4ffff Time: 0.017992
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x000000000077ffff Time: 0.0126781
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CudnnConvolution)
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0309833
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.0262827
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.0810423
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.127927
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.125367
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000006 Time: 0.0209816
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.0310126
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.0262095
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003a Time: 0.0811154
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003c Time: 0.128731
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003d Time: 0.125733
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003e Time: 0.0209607
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.0310126
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.0283794
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.0811886
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.129317
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.125586
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000076 Time: 0.0210024
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x000000000000003e Time: 0.0209607
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskGemmConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskFlattenConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskConvolution)
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.0664137
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.0393143
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1 Tactic: 0x94119b4c514b211a
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x94119b4c514b211a Time: 0.014336
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.0601722
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.0430811
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.0497859
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_xregs_large_nn_v1 Tactic: 0x5403ad713f811a18
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5403ad713f811a18 Time: 0.067389
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.0211069
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.0253562
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x01cf8ce2da913006
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x01cf8ce2da913006 Time: 0.0392046
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.0528091
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.067392
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.0262339
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4efce38acc876f5c
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x4efce38acc876f5c Time: 0.121198
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.0643657
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.0444343
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x8ad32616b1424be4
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x8ad32616b1424be4 Time: 0.0209607
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_relu_xregs_large_nn_v1 Tactic: 0x5deb29b7a8e275f7
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5deb29b7a8e275f7 Time: 0.0528579
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.06656
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.0488594
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4727434768e46395
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x4727434768e46395 Time: 0.0258453
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.122953
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.0658773
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.0631954
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.055296
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x94119b4c514b211a Time: 0.014336
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: FusedConvActConvolution Tactic: 0x000000000077ffff
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(50176,1,1792,64) -> Float(86528,1,3328,128) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskFlattenConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskConvolution)
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.0242834
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0x634e99502974e4da
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x634e99502974e4da Time: 0.0648046
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.0634392
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x3f0c846d6379bc98
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3f0c846d6379bc98 Time: 0.06656
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.0243078
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.0681691
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.0652434
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.0190903
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x94a7db94ba744c45
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x94a7db94ba744c45 Time: 0.0242583
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x3e2b881168d9689d
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3e2b881168d9689d Time: 0.023869
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.0401189
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0xbdfdef6b84f7ccc9
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xbdfdef6b84f7ccc9 Time: 0.0399726
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.0379257
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x5953bec563d26434
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5953bec563d26434 Time: 0.0184497
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0xf90060ce8193b811
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf90060ce8193b811 Time: 0.064512
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xd15dd11d64344e83
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd15dd11d64344e83 Time: 0.0370834
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x32059de4888dfdda
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x32059de4888dfdda Time: 0.165301
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xc7feb33970feefa7 Time: 0.0233639
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0298715
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.0313646
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0218188
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.0266728
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x27b316f52c109002
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x27b316f52c109002 Time: 0.0406674
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xf48db81f02eca9ee
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf48db81f02eca9ee Time: 0.0369006
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xae0c89d047932ba3
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xae0c89d047932ba3 Time: 0.0360194
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.0693394
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.0690469
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xe47307053a42b3e4
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xe47307053a42b3e4 Time: 0.0637318
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.0681691
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.0216072
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x5953bec563d26434 Time: 0.0184497
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x5953bec563d26434
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(12544,1:4,448,16) -> Float(21632,1:4,832,32) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CudaDepthwiseConvolution)
[03/01/2023-14:29:24] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskGemmConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskFlattenConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_5 + Relu_6 (CaskConvolution)
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r3s3 Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x999e005e3b016ea6 Time: 0.0446171
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0xb443c221fcb1565b
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xb443c221fcb1565b Time: 0.0453486
[03/01/2023-14:29:24] [V] [TRT] Conv_5 + Relu_6 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.0468114
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x999e005e3b016ea6 Time: 0.0446171
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:24] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(86528,676,26,1) -> Float(73728,576,24,1) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CudaDepthwiseConvolution)
[03/01/2023-14:29:24] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (FusedConvActConvolution)
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000007ffff Time: 0.0532465
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000affff Time: 0.0423863
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000effff Time: 0.0251611
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000fffff Time: 0.0371931
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000019ffff Time: 0.0218593
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000001affff Time: 0.0233848
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000024ffff Time: 0.0192
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000027ffff Time: 0.0183589
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000002dffff Time: 0.0249417
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000036ffff Time: 0.0242103
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000004cffff Time: 0.0324754
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000062ffff Time: 0.0411109
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000006effff Time: 0.0199863
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000077ffff Time: 0.0189606
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000086ffff Time: 0.0202257
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000089ffff Time: 0.0245516
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000097ffff Time: 0.0205427
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000098ffff Time: 0.0339968
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000009fffff Time: 0.0203714
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000a2ffff Time: 0.01792
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000a4ffff Time: 0.026307
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x0000000000a2ffff Time: 0.01792
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CudnnConvolution)
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.129026
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.0378914
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.12171
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.223525
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.216357
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000006 Time: 0.0304859
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.129024
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.037888
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003a Time: 0.12171
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003c Time: 0.221623
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003d Time: 0.216503
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003e Time: 0.0304585
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.129024
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.0446171
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.121929
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.222208
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.216649
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000076 Time: 0.0307218
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x000000000000003e Time: 0.0304585
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskGemmConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskFlattenConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskConvolution)
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.125147
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.0707535
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1 Tactic: 0x94119b4c514b211a
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x94119b4c514b211a Time: 0.0237394
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.114907
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.0748983
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.0927451
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_xregs_large_nn_v1 Tactic: 0x5403ad713f811a18
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5403ad713f811a18 Time: 0.127049
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.032533
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.0462617
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x01cf8ce2da913006
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x01cf8ce2da913006 Time: 0.0708998
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.0996206
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.127854
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.0478354
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4efce38acc876f5c
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x4efce38acc876f5c Time: 0.228206
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.121344
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.0804571
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x8ad32616b1424be4
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x8ad32616b1424be4 Time: 0.0326217
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_relu_xregs_large_nn_v1 Tactic: 0x5deb29b7a8e275f7
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5deb29b7a8e275f7 Time: 0.0988891
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.125952
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.0917897
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4727434768e46395
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x4727434768e46395 Time: 0.0469211
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.23157
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.123977
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.12032
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.102839
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x94119b4c514b211a Time: 0.0237394
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: FusedConvActConvolution Tactic: 0x0000000000a2ffff
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(86528,1,3328,128) -> Float(73728,1,3072,128) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskFlattenConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskConvolution)
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.0431909
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0x634e99502974e4da
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x634e99502974e4da Time: 0.123691
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.120393
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x3f0c846d6379bc98
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3f0c846d6379bc98 Time: 0.120247
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.0437029
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.130926
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.115858
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.0270141
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x94a7db94ba744c45
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x94a7db94ba744c45 Time: 0.0435931
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x3e2b881168d9689d
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x3e2b881168d9689d Time: 0.0420937
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.0743863
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0xbdfdef6b84f7ccc9
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xbdfdef6b84f7ccc9 Time: 0.0743131
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.068413
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x5953bec563d26434
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5953bec563d26434 Time: 0.0251368
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0xf90060ce8193b811
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf90060ce8193b811 Time: 0.12288
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xd15dd11d64344e83
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd15dd11d64344e83 Time: 0.0674865
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x32059de4888dfdda
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x32059de4888dfdda Time: 0.0393509
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xc7feb33970feefa7 Time: 0.0413257
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0559299
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.0578316
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0351671
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.0487131
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x27b316f52c109002
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x27b316f52c109002 Time: 0.0753371
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xf48db81f02eca9ee
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xf48db81f02eca9ee Time: 0.0674865
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xae0c89d047932ba3
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xae0c89d047932ba3 Time: 0.0666575
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.133632
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.132754
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xe47307053a42b3e4
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xe47307053a42b3e4 Time: 0.121563
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.131145
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.0387657
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x5953bec563d26434 Time: 0.0251368
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x5953bec563d26434
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(21632,1:4,832,32) -> Float(18432,1:4,768,32) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CudaDepthwiseConvolution)
[03/01/2023-14:29:24] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskGemmConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskFlattenConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_7 + Relu_8 (CaskConvolution)
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r3s3 Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x999e005e3b016ea6 Time: 0.0835292
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0xb443c221fcb1565b
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xb443c221fcb1565b Time: 0.0846994
[03/01/2023-14:29:24] [V] [TRT] Conv_7 + Relu_8 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.0881371
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x999e005e3b016ea6 Time: 0.0835292
[03/01/2023-14:29:24] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:24] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(73728,576,24,1) -> Float(18432,144,12,1) ***************
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(18432,1:4,768,32) -> Float(4608,1:4,384,32) ***************
[03/01/2023-14:29:24] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(18432,144,12,1) -> Float(2048,16,4,1) ***************
[03/01/2023-14:29:24] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:24] [V] [TRT] *************** Autotuning format combination: Float(18432,144,12,1) -> Float(25600,100,10,1) ***************
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CudaDepthwiseConvolution)
[03/01/2023-14:29:24] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (FusedConvActConvolution)
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000007ffff Time: 0.0534918
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000affff Time: 0.0426057
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000effff Time: 0.0228415
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000000fffff Time: 0.0361326
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000019ffff Time: 0.0202057
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000001affff Time: 0.0226952
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000024ffff Time: 0.0174243
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000027ffff Time: 0.0167416
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000002dffff Time: 0.0228833
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000036ffff Time: 0.0233012
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000004cffff Time: 0.030603
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000062ffff Time: 0.0403749
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000006effff Time: 0.0177493
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000077ffff Time: 0.01792
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000086ffff Time: 0.0185411
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000089ffff Time: 0.0226743
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000097ffff Time: 0.0200966
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000098ffff Time: 0.0329435
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x00000000009fffff Time: 0.0186697
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000a2ffff Time: 0.0169041
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000a4ffff Time: 0.0259901
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x000000000027ffff Time: 0.0167416
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CudnnConvolution)
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.128219
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.0383269
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.117102
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.146871
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.400969
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000006 Time: 0.0307785
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.128219
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.0385097
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003a Time: 0.117467
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003c Time: 0.142921
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003d Time: 0.446464
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x000000000000003e Time: 0.0308078
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.129243
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.0448366
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.117029
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.141897
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.7424
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x0000000000000076 Time: 0.0314222
[03/01/2023-14:29:24] [V] [TRT] Fastest Tactic: 0x0000000000000006 Time: 0.0307785
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskGemmConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskFlattenConvolution)
[03/01/2023-14:29:24] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:24] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskConvolution)
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.129902
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.0732891
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1 Tactic: 0x94119b4c514b211a
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x94119b4c514b211a Time: 0.024381
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.119003
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.0830903
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.09728
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_xregs_large_nn_v1 Tactic: 0x5403ad713f811a18
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0x5403ad713f811a18 Time: 0.131511
[03/01/2023-14:29:24] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:24] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.0349038
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.047216
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x01cf8ce2da913006
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x01cf8ce2da913006 Time: 0.0725577
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.101669
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.130926
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.0492495
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4efce38acc876f5c
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x4efce38acc876f5c Time: 0.236983
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.129902
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.0831634
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x8ad32616b1424be4
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x8ad32616b1424be4 Time: 0.0339941
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_relu_xregs_large_nn_v1 Tactic: 0x5deb29b7a8e275f7
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x5deb29b7a8e275f7 Time: 0.10357
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.131365
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.0937691
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4727434768e46395
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x4727434768e46395 Time: 0.0482743
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.237861
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.127634
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.123099
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.106642
[03/01/2023-14:29:25] [V] [TRT] Fastest Tactic: 0x94119b4c514b211a Time: 0.024381
[03/01/2023-14:29:25] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: FusedConvActConvolution Tactic: 0x000000000027ffff
[03/01/2023-14:29:25] [V] [TRT] *************** Autotuning format combination: Float(18432,1,1536,128) -> Float(25600,1,2560,256) ***************
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskFlattenConvolution)
[03/01/2023-14:29:25] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskConvolution)
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.0436663
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0x634e99502974e4da
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x634e99502974e4da Time: 0.125147
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.122002
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x3f0c846d6379bc98
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x3f0c846d6379bc98 Time: 0.125074
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.0442149
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.129024
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.117687
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.0269897
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x94a7db94ba744c45
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x94a7db94ba744c45 Time: 0.0441051
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x3e2b881168d9689d
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x3e2b881168d9689d Time: 0.0422034
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.0750446
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0xbdfdef6b84f7ccc9
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xbdfdef6b84f7ccc9 Time: 0.0745326
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.0690469
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x5953bec563d26434
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x5953bec563d26434 Time: 0.0256244
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0xf90060ce8193b811
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xf90060ce8193b811 Time: 0.123392
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xd15dd11d64344e83
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xd15dd11d64344e83 Time: 0.0678278
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x32059de4888dfdda
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x32059de4888dfdda Time: 0.0390583
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xc7feb33970feefa7 Time: 0.0413257
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0558811
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.0572465
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0354597
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.0489082
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x27b316f52c109002
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x27b316f52c109002 Time: 0.0756297
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xf48db81f02eca9ee
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xf48db81f02eca9ee Time: 0.0674865
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xae0c89d047932ba3
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xae0c89d047932ba3 Time: 0.0666088
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.129609
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.130194
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xe47307053a42b3e4
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xe47307053a42b3e4 Time: 0.12171
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.12917
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.0393143
[03/01/2023-14:29:25] [V] [TRT] Fastest Tactic: 0x5953bec563d26434 Time: 0.0256244
[03/01/2023-14:29:25] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x5953bec563d26434
[03/01/2023-14:29:25] [V] [TRT] *************** Autotuning format combination: Float(4608,1:4,384,32) -> Float(6400,1:4,640,64) ***************
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CudaDepthwiseConvolution)
[03/01/2023-14:29:25] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskGemmConvolution)
[03/01/2023-14:29:25] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskFlattenConvolution)
[03/01/2023-14:29:25] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_17 + Relu_18 (CaskConvolution)
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r3s3 Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x999e005e3b016ea6 Time: 0.083456
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0xb443c221fcb1565b
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xb443c221fcb1565b Time: 0.0856503
[03/01/2023-14:29:25] [V] [TRT] Conv_17 + Relu_18 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.0882834
[03/01/2023-14:29:25] [V] [TRT] Fastest Tactic: 0x999e005e3b016ea6 Time: 0.083456
[03/01/2023-14:29:25] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:25] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:25] [V] [TRT] *************** Autotuning format combination: Float(25600,100,10,1) -> Float(16384,64,8,1) ***************
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CudaDepthwiseConvolution)
[03/01/2023-14:29:25] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (FusedConvActConvolution)
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000007ffff Time: 0.102183
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000000affff Time: 0.0809691
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000000effff Time: 0.0411794
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000000fffff Time: 0.0680716
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000019ffff Time: 0.0361314
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000001affff Time: 0.0398629
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000024ffff Time: 0.0296667
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000027ffff Time: 0.0287598
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000002dffff Time: 0.0411429
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000036ffff Time: 0.0420206
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000004cffff Time: 0.057344
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000062ffff Time: 0.0751909
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000006effff Time: 0.0309248
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000077ffff Time: 0.0301349
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000086ffff Time: 0.0324169
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000089ffff Time: 0.0415817
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000097ffff Time: 0.033792
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000098ffff Time: 0.0619276
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x00000000009fffff Time: 0.0338194
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000a2ffff Time: 0.0285842
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000a4ffff Time: 0.0482743
[03/01/2023-14:29:25] [V] [TRT] Fastest Tactic: 0x0000000000a2ffff Time: 0.0285842
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CudnnConvolution)
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.580462
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.0630004
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.200411
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.256731
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000005 Time: 1.45861
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000006 Time: 0.0549059
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.57973
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.063488
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000000003a Time: 0.200558
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000000003c Time: 0.617472
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000000003d Time: 1.81146
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x000000000000003e Time: 0.0539794
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.246784
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.0795063
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.197339
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.256878
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000075 Time: 1.45481
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x0000000000000076 Time: 0.0564175
[03/01/2023-14:29:25] [V] [TRT] Fastest Tactic: 0x000000000000003e Time: 0.0539794
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskGemmConvolution)
[03/01/2023-14:29:25] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskFlattenConvolution)
[03/01/2023-14:29:25] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:25] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskConvolution)
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.260681
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.142702
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1 Tactic: 0x94119b4c514b211a
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x94119b4c514b211a Time: 0.0448366
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.229669
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.153015
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.190025
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_xregs_large_nn_v1 Tactic: 0x5403ad713f811a18
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x5403ad713f811a18 Time: 0.598455
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.0641219
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.0928914
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x01cf8ce2da913006
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x01cf8ce2da913006 Time: 0.141458
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.201582
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.260827
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.0945737
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4efce38acc876f5c
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x4efce38acc876f5c Time: 0.795941
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.238738
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.158866
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x8ad32616b1424be4
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x8ad32616b1424be4 Time: 0.0629029
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_relu_xregs_large_nn_v1 Tactic: 0x5deb29b7a8e275f7
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0x5deb29b7a8e275f7 Time: 0.198363
[03/01/2023-14:29:25] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:25] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.25483
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.183442
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x4727434768e46395
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x4727434768e46395 Time: 0.0933303
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.795355
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.251465
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.238592
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.201143
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0x94119b4c514b211a Time: 0.0448366
[03/01/2023-14:29:26] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: FusedConvActConvolution Tactic: 0x0000000000a2ffff
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(25600,1,2560,256) -> Float(16384,1,2048,256) ***************
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskFlattenConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskConvolution)
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.080384
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0x634e99502974e4da
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x634e99502974e4da Time: 0.241518
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.235529
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x3f0c846d6379bc98
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x3f0c846d6379bc98 Time: 0.236105
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.0817006
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.245467
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.217966
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.0494446
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x94a7db94ba744c45
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x94a7db94ba744c45 Time: 0.0813349
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x3e2b881168d9689d
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x3e2b881168d9689d Time: 0.0782629
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.142921
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0xbdfdef6b84f7ccc9
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xbdfdef6b84f7ccc9 Time: 0.142629
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.129609
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x5953bec563d26434
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x5953bec563d26434 Time: 0.0457874
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0xf90060ce8193b811
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf90060ce8193b811 Time: 0.240933
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xd15dd11d64344e83
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xd15dd11d64344e83 Time: 0.128512
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0x32059de4888dfdda
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x32059de4888dfdda Time: 0.0732891
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xc7feb33970feefa7 Time: 0.0768069
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.107593
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.10752
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0660724
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.0925257
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x27b316f52c109002
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x27b316f52c109002 Time: 0.145262
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r3s3_aligna4_alignc4 Tactic: 0xf48db81f02eca9ee
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf48db81f02eca9ee Time: 0.128
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xae0c89d047932ba3
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xae0c89d047932ba3 Time: 0.127419
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.249856
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.250587
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xe47307053a42b3e4
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xe47307053a42b3e4 Time: 0.237129
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.247662
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.0725577
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0x5953bec563d26434 Time: 0.0457874
[03/01/2023-14:29:26] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x5953bec563d26434
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(6400,1:4,640,64) -> Float(4096,1:4,512,64) ***************
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CudaDepthwiseConvolution)
[03/01/2023-14:29:26] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskGemmConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskFlattenConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_19 + Relu_20 (CaskConvolution)
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r3s3 Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x999e005e3b016ea6 Time: 0.161499
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0xb443c221fcb1565b
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xb443c221fcb1565b Time: 0.16384
[03/01/2023-14:29:26] [V] [TRT] Conv_19 + Relu_20 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.170862
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0x999e005e3b016ea6 Time: 0.161499
[03/01/2023-14:29:26] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x999e005e3b016ea6
[03/01/2023-14:29:26] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(16384,64,8,1) -> Float(6144,16,4,1) long-strided ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(16384,64,8,1) -> Float(4096,16,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(4096,1:4,512,64) -> Float(1536,1:4,384,96) long-strided ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(4096,1:4,512,64) -> Float(1024,1:4,256,64) ***************
[03/01/2023-14:29:26] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(6144,16,4,1) -> Float(16,16,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(6144,16,4,1) -> Float(16,16,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(32,16,4,1) -> Float(16,16,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CudaDepthwiseConvolution)
[03/01/2023-14:29:26] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (FusedConvActConvolution)
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x000000000002ffff Time: 0.00542815
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0x000000000002ffff Time: 0.00542815
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CudnnConvolution)
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00702171
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.00710531
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.00780704
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.0150821
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.0200777
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.00705655
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.00718994
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x000000000000003a Time: 0.00700082
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x000000000000003c Time: 0.0161564
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x000000000000003d Time: 0.0180303
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.00745326
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.00702868
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.0068406
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.0160183
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.0190006
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0x0000000000000072 Time: 0.0068406
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskGemmConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskFlattenConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskConvolution)
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.0187251
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.0126667
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.0155209
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x128_relu_xregs_large_nn_v1 Tactic: 0x5403ad713f811a18
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x5403ad713f811a18 Time: 0.0201691
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.0183206
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x64_relu_xregs_large_nn_v1 Tactic: 0x5deb29b7a8e275f7
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x5deb29b7a8e275f7 Time: 0.0173917
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.019328
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.0177981
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0xcb8a43f748d8a338 Time: 0.0126667
[03/01/2023-14:29:26] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: FusedConvActConvolution Tactic: 0x000000000002ffff
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(32,1,8,2) -> Float(16,1,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskFlattenConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskConvolution)
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc4 Tactic: 0xcf8ea142095f02d2
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xcf8ea142095f02d2 Time: 0.00815949
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc4 Tactic: 0xf231cca3335919a4
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf231cca3335919a4 Time: 0.00845015
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc4 Tactic: 0xf78ec258f27b3e23
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf78ec258f27b3e23 Time: 0.00702171
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc4 Tactic: 0xab0496509b88ebe0
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xab0496509b88ebe0 Time: 0.00594469
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0241615
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.0253562
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0166116
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.0364251
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc4 Tactic: 0x93030576a9fb03f9
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x93030576a9fb03f9 Time: 0.00688283
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0xab0496509b88ebe0 Time: 0.00594469
[03/01/2023-14:29:26] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0xab0496509b88ebe0
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(16,1:4,4,1) -> Float(16,1:4,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CudaDepthwiseConvolution)
[03/01/2023-14:29:26] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskGemmConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskGemmConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskFlattenConvolution)
[03/01/2023-14:29:26] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_26 (CaskConvolution)
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.0576853
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0x634e99502974e4da
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x634e99502974e4da Time: 0.050176
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.0486644
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc4 Tactic: 0xfed494d61b2087ba
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xfed494d61b2087ba Time: 0.0110389
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc8 Tactic: 0x43ffe5cf09cee087
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x43ffe5cf09cee087 Time: 0.0121905
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc8 Tactic: 0x7bff86d5f2eadc76
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x7bff86d5f2eadc76 Time: 0.010658
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.0487131
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc8 Tactic: 0x4640eb34c8ecc700
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x4640eb34c8ecc700 Time: 0.0103236
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4 Tactic: 0x570667f2a28165a0
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x570667f2a28165a0 Time: 0.0130315
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8 Tactic: 0x3f948a101b8c4067
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x3f948a101b8c4067 Time: 0.00987916
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc4 Tactic: 0xcf8ea142095f02d2
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xcf8ea142095f02d2 Time: 0.0124099
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc4 Tactic: 0xf231cca3335919a4
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf231cca3335919a4 Time: 0.0133914
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc4 Tactic: 0xf78ec258f27b3e23
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xf78ec258f27b3e23 Time: 0.010657
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc8 Tactic: 0x22cadc265a3b2e32
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x22cadc265a3b2e32 Time: 0.0127634
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc8 Tactic: 0x1acd4f006848c62b
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x1acd4f006848c62b Time: 0.014571
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc4 Tactic: 0xb6f6563c77d057d7
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xb6f6563c77d057d7 Time: 0.00946315
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8 Tactic: 0x4037b478ce77e422
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x4037b478ce77e422 Time: 0.00757606
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc4 Tactic: 0xab0496509b88ebe0
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xab0496509b88ebe0 Time: 0.00965486
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.0574415
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4_alignc8 Tactic: 0x7e40882e33c8fbf1
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x7e40882e33c8fbf1 Time: 0.0135913
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_large_nhwc_tn_v1 Tactic: 0xbdfdef6b84f7ccc9
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xbdfdef6b84f7ccc9 Time: 0.0560274
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8 Tactic: 0x9cb304e2edbc1221
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x9cb304e2edbc1221 Time: 0.0107207
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8 Tactic: 0xae48d3ccfe1edfcd
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xae48d3ccfe1edfcd Time: 0.00836241
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc4 Tactic: 0x1a373db9a2bc4028
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x1a373db9a2bc4028 Time: 0.00808584
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8 Tactic: 0xdb77237fa21087f5
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xdb77237fa21087f5 Time: 0.0121558
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8 Tactic: 0xe9e5475c77d60638
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xe9e5475c77d60638 Time: 0.0100742
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0224862
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.0230087
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.0642194
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x64_stage1_warpsize4x1x1_g1_tensor16x8x8 Tactic: 0x10383a0781d24dde
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x10383a0781d24dde Time: 0.00726331
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8 Tactic: 0x9355e195cee05798
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x9355e195cee05798 Time: 0.0112985
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0155648
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.020689
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8 Tactic: 0xb33296dda7141c64
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xb33296dda7141c64 Time: 0.00930686
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc4 Tactic: 0xcc46f0f5cee60677
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xcc46f0f5cee60677 Time: 0.00682645
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8 Tactic: 0x72a5d05b1bb165ef
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x72a5d05b1bb165ef Time: 0.0106266
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna8_alignc4 Tactic: 0x93030576a9fb03f9
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x93030576a9fb03f9 Time: 0.011444
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8 Tactic: 0x96467934a22da27d
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x96467934a22da27d Time: 0.00759218
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x16x32_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna4 Tactic: 0xb3e5ce9d1b1da232
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xb3e5ce9d1b1da232 Time: 0.0124709
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: ampere_scudnn_128x128_relu_exp_large_nhwc_tn_v1 Tactic: 0xca7eeb8d9143d738
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0xca7eeb8d9143d738 Time: 0.0502248
[03/01/2023-14:29:26] [V] [TRT] Conv_26 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_wo_smem_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8 Tactic: 0x3a8712b17741b582
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x3a8712b17741b582 Time: 0.00956709
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0xcc46f0f5cee60677 Time: 0.00682645
[03/01/2023-14:29:26] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0xcc46f0f5cee60677
[03/01/2023-14:29:26] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(16,16,4,1), Float(6144,16,4,1) -> Float(6144,16,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(16,1,4,1), Float(6144,1,1536,384) -> Float(6144,1,1536,384) ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(16,1:4,4,1), Float(1536,1:4,384,96) -> Float(1536,1:4,384,96) ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(16,16:32,4,1), Float(192,16:32,4,1) -> Float(192,16:32,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(1:4,16,4,1), Float(1:4,16,4,1) -> Float(1:4,16,4,1) ***************
[03/01/2023-14:29:26] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(6144,16,4,1) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(1536,1:4,384,96) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:26] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:26] [V] [TRT] *************** Autotuning format combination: Float(384,1,1,1) -> Float(24,1,1,1) ***************
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CudaDepthwiseConvolution)
[03/01/2023-14:29:26] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (FusedConvActConvolution)
[03/01/2023-14:29:26] [V] [TRT] FusedConvActConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:26] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CudnnConvolution)
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.0190171
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.0173923
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.0648046
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.0629029
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.0265509
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.0185966
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.0174893
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x000000000000003a Time: 0.0652434
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x000000000000003c Time: 0.0525166
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x000000000000003d Time: 0.0290133
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.0185966
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.0180114
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.0648533
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.0505661
[03/01/2023-14:29:26] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.0228624
[03/01/2023-14:29:26] [V] [TRT] Fastest Tactic: 0x0000000000000001 Time: 0.0173923
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CublasConvolution)
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00664187
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.00648626
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.0121783
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000000003 Time: 0.012032
[03/01/2023-14:29:27] [V] [TRT] Fastest Tactic: 0x0000000000000001 Time: 0.00648626
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm70_xmma_gemm_as_conv1x1_f32f32_f32_f32_tn_n_simt_small_batch_bias_relu
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31: 33 available tactics, 33 unparsable, 0 pruned, 33 remaining after tactic pruning.
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskGemmConvolution)
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride Tactic: 0x00000000000204bf numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000000204bf Time: 0.00849264
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride Tactic: 0x00000000000203b9 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000000203b9 Time: 0.00336085
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride Tactic: 0x00000002020403b9 numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020403b9 Time: 0.00840659
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride Tactic: 0x00000002020603b9 numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020603b9 Time: 0.0856697
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride Tactic: 0x00000002020803b9 numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020803b9 Time: 0.00869244
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride Tactic: 0x0000000000020454 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000020454 Time: 0.00402946
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride Tactic: 0x0000000202040454 numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000202040454 Time: 0.00874299
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride Tactic: 0x0000000202060454 numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000202060454 Time: 0.0112215
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride Tactic: 0x0000000202080454 numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000202080454 Time: 0.0149938
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride Tactic: 0x000000020208037d numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020208037d Time: 0.0150967
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride Tactic: 0x00000002020404bf numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020404bf Time: 0.0151579
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride Tactic: 0x00000002020604bf numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020604bf Time: 0.0151419
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride Tactic: 0x00000002020804bf numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020804bf Time: 0.0160406
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride Tactic: 0x000000000002058f numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000000002058f Time: 0.00668135
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride Tactic: 0x000000020204058f numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020204058f Time: 0.0148777
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride Tactic: 0x000000020206058f numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020206058f Time: 0.0124324
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride Tactic: 0x000000020208058f numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020208058f Time: 0.0106678
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride Tactic: 0x0000000000020163 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000020163 Time: 0.00444634
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride Tactic: 0x000000020206037d numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020206037d Time: 0.0108552
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride Tactic: 0x000000020204037d numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020204037d Time: 0.0154025
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride Tactic: 0x000000000002037d numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000000002037d Time: 0.00594139
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm70_xmma_gemm_as_conv1x1_f32f32_f32_f32_tn_n_simt_small_batch_bias_relu Tactic: 0x0000000000020331 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000020331 Time: 0.00620038
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride Tactic: 0x000000020208020c numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020208020c Time: 0.0151424
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride Tactic: 0x000000020206020c numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020206020c Time: 0.0152581
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride Tactic: 0x000000020204020c numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000020204020c Time: 0.015008
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride Tactic: 0x000000000002020c numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x000000000002020c Time: 0.00615067
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride Tactic: 0x00000002020801eb numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020801eb Time: 0.0150523
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride Tactic: 0x00000002020601eb numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020601eb Time: 0.00990567
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride Tactic: 0x00000002020401eb numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000002020401eb Time: 0.0101132
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride Tactic: 0x00000000000201eb numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000000201eb Time: 0.00935314
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride Tactic: 0x0000000202080163 numSplitK: 4 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000202080163 Time: 0.0103948
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride Tactic: 0x0000000202060163 numSplitK: 3 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000202060163 Time: 0.0151552
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride Tactic: 0x0000000202040163 numSplitK: 2 numBuffers: 1 numKernels: 2
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000202040163 Time: 0.0151282
[03/01/2023-14:29:27] [V] [TRT] Fastest Tactic: 0x00000000000203b9 Time: 0.00336085
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskFlattenConvolution)
[03/01/2023-14:29:27] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskConvolution)
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.0462263
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.0283573
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x828d0ea88c66fce7
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x828d0ea88c66fce7 Time: 0.0220682
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0xe5603263b7f00303
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xe5603263b7f00303 Time: 0.0317733
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0xfff46c7893896eb1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xfff46c7893896eb1 Time: 0.0822857
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm70_xmma_fprop_conv1x1_f32f32_f32_f32_nchwkcrs_nchw_simt_small_batch_bias_relu Tactic: 0xaa0953b1a73b0b9b
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xaa0953b1a73b0b9b Time: 0.0041425
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nchwkrsc_nchw_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_simple_t1r1s1_aligna4_alignc4 Tactic: 0xa419b3b68f2da07b
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xa419b3b68f2da07b Time: 0.0419109
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.0390583
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.0288183
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.0335579
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x1fc87d7eb370bb7a
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x1fc87d7eb370bb7a Time: 0.0197486
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x9de226a0c44627c4
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x9de226a0c44627c4 Time: 0.0525714
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.0133918
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x2ee10e11d6651675
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x2ee10e11d6651675 Time: 0.0546118
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.0184137
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.0372663
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x90f8f2915f87ed77
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x90f8f2915f87ed77 Time: 0.0135248
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x8e3884f0eaec3ecd
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x8e3884f0eaec3ecd Time: 0.0303397
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nchwkrsc_nchw_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r1s1_aligna4_alignc4 Tactic: 0x7f0145cb49517338
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x7f0145cb49517338 Time: 0.0425326
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0xc0b05b61d128e46e
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xc0b05b61d128e46e Time: 0.0278918
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.0470674
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.0191634
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.0433006
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.0321829
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x865894c4635db7fd
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x865894c4635db7fd Time: 0.0196177
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x9cd5cdc35441c505
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x9cd5cdc35441c505 Time: 0.027648
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.0465554
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.0345234
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.0855771
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.041728
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.04056
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.038912
[03/01/2023-14:29:27] [V] [TRT] Fastest Tactic: 0xaa0953b1a73b0b9b Time: 0.0041425
[03/01/2023-14:29:27] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskGemmConvolution Tactic: 0x00000000000203b9
[03/01/2023-14:29:27] [V] [TRT] *************** Autotuning format combination: Float(384,1,384,384) -> Float(24,1,24,24) ***************
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CublasConvolution)
[03/01/2023-14:29:27] [V] [TRT] CublasConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskFlattenConvolution)
[03/01/2023-14:29:27] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskConvolution)
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.0180303
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.0441417
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x55d80c17b1cd982d
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x55d80c17b1cd982d Time: 0.0170992
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0xd55ee6fd0b56f808
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xd55ee6fd0b56f808 Time: 0.0251611
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x1022069e6f8d9aeb
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x1022069e6f8d9aeb Time: 0.0253562
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x1fb90698107bb33a
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x1fb90698107bb33a Time: 0.0110277
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0xbc0bba0ff1a92939
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xbc0bba0ff1a92939 Time: 0.0465554
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0xd9eb6ca56ddc3a22
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xd9eb6ca56ddc3a22 Time: 0.0174568
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x62835fce994f06dd
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x62835fce994f06dd Time: 0.0174243
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_relu_exp_medium_nhwc_tn_v1 Tactic: 0xd9031472c05adf51
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xd9031472c05adf51 Time: 0.0456777
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize256x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x8014228ec08b4d49
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x8014228ec08b4d49 Time: 0.0474331
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x7121ec1db3f80c67
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x7121ec1db3f80c67 Time: 0.0115341
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x90898977fc8ce537
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x90898977fc8ce537 Time: 0.0166278
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x3e2b881168d9689d
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x3e2b881168d9689d Time: 0.0175705
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x412c44dfeaf9161d
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x412c44dfeaf9161d Time: 0.0287598
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0xc7b3afceb5fb03c0
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xc7b3afceb5fb03c0 Time: 0.0249661
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x1da91d865428f237
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x1da91d865428f237 Time: 0.0272091
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0xf90060ce8193b811
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xf90060ce8193b811 Time: 0.0448731
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xc7feb33970feefa7
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xc7feb33970feefa7 Time: 0.0172455
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x4fd3c46622e98342
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x4fd3c46622e98342 Time: 0.0210442
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa6448a1e79f1ca6f
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xa6448a1e79f1ca6f Time: 0.0216294
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x0a143be7a52f301a
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0a143be7a52f301a Time: 0.0141232
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x19b688348f983aa0
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x19b688348f983aa0 Time: 0.0190537
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x27b316f52c109002
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x27b316f52c109002 Time: 0.0286775
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x35f26f9c09557d86
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x35f26f9c09557d86 Time: 0.0254781
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xae0c89d047932ba3
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xae0c89d047932ba3 Time: 0.0256488
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_relu_exp_small_nhwc_tn_v1 Tactic: 0x5030121339a48bf3
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x5030121339a48bf3 Time: 0.0462994
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0xe47307053a42b3e4
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xe47307053a42b3e4 Time: 0.0440686
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: ampere_scudnn_128x128_relu_exp_interior_nhwc_tn_v1 Tactic: 0x17173deba0b64484
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x17173deba0b64484 Time: 0.045568
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x92ed3100c35fc43e
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x92ed3100c35fc43e Time: 0.0151406
[03/01/2023-14:29:27] [V] [TRT] Fastest Tactic: 0x1fb90698107bb33a Time: 0.0110277
[03/01/2023-14:29:27] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x1fb90698107bb33a
[03/01/2023-14:29:27] [V] [TRT] *************** Autotuning format combination: Float(96,1:4,96,96) -> Float(6,1:4,6,6) ***************
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CudaDepthwiseConvolution)
[03/01/2023-14:29:27] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CublasConvolution)
[03/01/2023-14:29:27] [V] [TRT] CublasConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31: 14 available tactics, 2 unparsable, 6 pruned, 8 remaining after tactic pruning.
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskGemmConvolution)
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize64x32x64_stage4_warpsize2x2x1_tensor16x8x8 Tactic: 0x0000000000020362 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000000020362 Time: 0.00738766
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize32x32x64_stage6_warpsize2x2x1_tensor16x8x8 Tactic: 0x00000000000203f0 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000000203f0 Time: 0.00586295
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize32x32x64_stage6_warpsize2x2x1_tensor16x8x8 Tactic: 0x00000000020803f0 numSplitK: 4 numBuffers: 1 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000020803f0 Time: 0.00846655
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize32x32x64_stage6_warpsize2x2x1_tensor16x8x8 Tactic: 0x00000000040803f0 numSplitK: 4 numBuffers: 2 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000040803f0 Time: 0.00794006
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize32x32x64_stage6_warpsize2x2x1_tensor16x8x8 Tactic: 0x00000000060803f0 numSplitK: 4 numBuffers: 3 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000060803f0 Time: 0.00761456
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize32x32x64_stage6_warpsize2x2x1_tensor16x8x8 Tactic: 0x00000000020603f0 numSplitK: 3 numBuffers: 1 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000020603f0 Time: 0.00769203
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize32x32x64_stage6_warpsize2x2x1_tensor16x8x8 Tactic: 0x00000000040603f0 numSplitK: 3 numBuffers: 2 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x00000000040603f0 Time: 0.00769997
[03/01/2023-14:29:27] [V] [TRT] Set Tactic Name: sm86_xmma_gemm_f32f32_tf32f32_f32_tn_n_tilesize64x32x64_stage4_warpsize2x2x1_tensor16x8x8 Tactic: 0x0000000002080362 numSplitK: 4 numBuffers: 1 numKernels: 1
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x0000000002080362 Time: 0.0103654
[03/01/2023-14:29:27] [V] [TRT] Fastest Tactic: 0x00000000000203f0 Time: 0.00586295
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskFlattenConvolution)
[03/01/2023-14:29:27] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:27] [V] [TRT] --------------- Timing Runner: Conv_30 + Relu_31 (CaskConvolution)
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r1s1 Tactic: 0x130df49cb195156b
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0x130df49cb195156b Time: 0.0311296
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0xb443c221fcb1565b
[03/01/2023-14:29:27] [V] [TRT] Tactic: 0xb443c221fcb1565b Time: 0.031744
[03/01/2023-14:29:27] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_simple_t1r1s1 Tactic: 0x9dece0dc37e90462
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x9dece0dc37e90462 Time: 0.0307493
[03/01/2023-14:29:28] [V] [TRT] Conv_30 + Relu_31 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_tf32f32_f32_nhwckrsc_nhwc_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8 Tactic: 0x65e41d81f093b482
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x65e41d81f093b482 Time: 0.0324754
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0x9dece0dc37e90462 Time: 0.0307493
[03/01/2023-14:29:28] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskGemmConvolution Tactic: 0x00000000000203f0
[03/01/2023-14:29:28] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:28] [V] [TRT] *************** Autotuning format combination: Float(6144,16,4,1) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: MaxPool_33 (TiledPooling)
[03/01/2023-14:29:28] [V] [TRT] TiledPooling has no valid tactics for this config, skipping
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: MaxPool_33 (CudnnPooling)
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xffffffffffffffff Time: 0.00418377
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0xffffffffffffffff Time: 0.00418377
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: MaxPool_33 (CaskPooling)
[03/01/2023-14:29:28] [V] [TRT] MaxPool_33 Set Tactic Name: sm50_xmma_pooling_fw_4d_FP32FP32NCHW_Max Tactic: 0xb59f9cfb90407c92
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xb59f9cfb90407c92 Time: 0.00536906
[03/01/2023-14:29:28] [V] [TRT] MaxPool_33 Set Tactic Name: sm50_xmma_pooling_nd_NCDHW_kMAX_kGENERIC_3D_POOLING_MODE_kFLOAT_0 Tactic: 0x5faf4a0a8a5670ed
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x5faf4a0a8a5670ed Time: 0.00484099
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0x5faf4a0a8a5670ed Time: 0.00484099
[03/01/2023-14:29:28] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CudnnPooling Tactic: 0xffffffffffffffff
[03/01/2023-14:29:28] [V] [TRT] *************** Autotuning format combination: Float(1536,1:4,384,96) -> Float(96,1:4,96,96) ***************
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: MaxPool_33 (CaskPooling)
[03/01/2023-14:29:28] [V] [TRT] MaxPool_33 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_NOT_PROPAGATE_NAN_2D Tactic: 0xaec8628e8180bced
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xaec8628e8180bced Time: 0.00510988
[03/01/2023-14:29:28] [V] [TRT] MaxPool_33 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_NOT_PROPAGATE_NAN_3D Tactic: 0xfa211b1cdd504de0
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xfa211b1cdd504de0 Time: 0.00520392
[03/01/2023-14:29:28] [V] [TRT] MaxPool_33 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_PROPAGATE_NAN_3D Tactic: 0xd76bac5638836f8a
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xd76bac5638836f8a Time: 0.00503456
[03/01/2023-14:29:28] [V] [TRT] MaxPool_33 Set Tactic Name: sm50_xmma_pooling_max_nhwc_FP32FP32_WINDOWSIZE_0_PROPAGATE_NAN_2D Tactic: 0x8382d5c464539e87
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x8382d5c464539e87 Time: 0.00359817
[03/01/2023-14:29:28] [V] [TRT] MaxPool_33 Set Tactic Name: sm50_xmma_pooling_fw_4d_FP32FP32NHWC_Max_CAlign4 Tactic: 0x22fb1bb4a70e340d
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x22fb1bb4a70e340d Time: 0.00335458
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0x22fb1bb4a70e340d Time: 0.00335458
[03/01/2023-14:29:28] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskPooling Tactic: 0x22fb1bb4a70e340d
[03/01/2023-14:29:28] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:28] [V] [TRT] *************** Autotuning format combination: Float(384,1,1,1) -> Float(24,1,1,1) ***************
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm70_xmma_gemm_as_conv1x1_f32f32_f32_f32_tn_n_simt_small_batch_bias_relu
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Conv_34 + Relu_35: 33 available tactics, 33 unparsable, 0 pruned, 33 remaining after tactic pruning.
[03/01/2023-14:29:28] [V] [TRT] *************** Autotuning format combination: Float(384,1,384,384) -> Float(24,1,24,24) ***************
[03/01/2023-14:29:28] [V] [TRT] *************** Autotuning format combination: Float(96,1:4,96,96) -> Float(6,1:4,6,6) ***************
[03/01/2023-14:29:28] [V] [TRT] Conv_34 + Relu_35: 14 available tactics, 2 unparsable, 6 pruned, 8 remaining after tactic pruning.
[03/01/2023-14:29:28] [V] [TRT] =============== Computing costs for 
[03/01/2023-14:29:28] [V] [TRT] *************** Autotuning format combination: Float(24,1,1,1) -> Float(384,1,1,1) ***************
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CudaDepthwiseConvolution)
[03/01/2023-14:29:28] [V] [TRT] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (FusedConvActConvolution)
[03/01/2023-14:29:28] [V] [TRT] FusedConvActConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CudnnConvolution)
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00387917
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.00414198
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.0066826
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000004 Time: 0.0559787
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000005 Time: 0.022946
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000038 Time: 0.00395021
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000039 Time: 0.00389449
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x000000000000003a Time: 0.00681273
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x000000000000003c Time: 0.0561737
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x000000000000003d Time: 0.0260411
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000070 Time: 0.00384975
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000071 Time: 0.00384999
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000072 Time: 0.00686846
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000074 Time: 0.0573928
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000075 Time: 0.0209189
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0x0000000000000070 Time: 0.00384975
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CublasConvolution)
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000000 Time: 0.00480413
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000001 Time: 0.00913371
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000002 Time: 0.0112742
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000000003 Time: 0.0112313
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0x0000000000000000 Time: 0.00480413
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm70_xmma_gemm_as_conv1x1_f32f32_f32_f32_tn_n_simt_small_batch_bias_relu
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Unrecognized MMA instruction source format or shape: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride
[03/01/2023-14:29:28] [V] [TRT] Conv_36: 9 available tactics, 9 unparsable, 0 pruned, 9 remaining after tactic pruning.
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CaskGemmConvolution)
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_unit_stride Tactic: 0x0000000000020163 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000020163 Time: 0.00357623
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_copyx_unit_stride Tactic: 0x00000000000201eb numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x00000000000201eb Time: 0.00342716
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param4x32x32_strided_copyx_unit_stride Tactic: 0x000000000002020c numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x000000000002020c Time: 0.00388609
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm70_xmma_gemm_as_conv1x1_f32f32_f32_f32_tn_n_simt_small_batch_bias_relu Tactic: 0x0000000000020331 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000020331 Time: 0.00309077
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_unit_stride Tactic: 0x000000000002037d numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x000000000002037d Time: 0.00354977
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_unit_stride Tactic: 0x00000000000203b9 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x00000000000203b9 Time: 0.00386669
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param16x32x32_strided_copyx_unit_stride Tactic: 0x0000000000020454 numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x0000000000020454 Time: 0.0041169
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param64x2x1_strided_unit_stride Tactic: 0x00000000000204bf numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x00000000000204bf Time: 0.00392995
[03/01/2023-14:29:28] [V] [TRT] Set Tactic Name: sm50_xmma_cublas_gemvx_f32f32_f32_f32_tn_n_int32_unit_n_launch_param8x32x32_strided_copyx_unit_stride Tactic: 0x000000000002058f numSplitK: 1 numBuffers: 0 numKernels: 1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x000000000002058f Time: 0.0036909
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0x0000000000020331 Time: 0.00309077
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CaskFlattenConvolution)
[03/01/2023-14:29:28] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CaskConvolution)
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x128_relu_interior_nn_v1 Tactic: 0xa8ef60e712f8ad24
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xa8ef60e712f8ad24 Time: 0.00977189
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0x5aa723e0481da855
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x5aa723e0481da855 Time: 0.00882017
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x828d0ea88c66fce7
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x828d0ea88c66fce7 Time: 0.00578651
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0xe5603263b7f00303
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xe5603263b7f00303 Time: 0.00998522
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0xfff46c7893896eb1
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xfff46c7893896eb1 Time: 0.0175218
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm70_xmma_fprop_conv1x1_f32f32_f32_f32_nchwkcrs_nchw_simt_small_batch_bias_relu Tactic: 0xaa0953b1a73b0b9b
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xaa0953b1a73b0b9b Time: 0.00668821
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nchwkrsc_nchw_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_simple_t1r1s1_aligna4_alignc4 Tactic: 0xa419b3b68f2da07b
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xa419b3b68f2da07b Time: 0.0144384
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x40a12e3938221818
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x40a12e3938221818 Time: 0.00783013
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xcb8a43f748d8a338
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xcb8a43f748d8a338 Time: 0.00700038
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xd828f024626fa982
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xd828f024626fa982 Time: 0.012411
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x1fc87d7eb370bb7a
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x1fc87d7eb370bb7a Time: 0.00655626
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x9de226a0c44627c4
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x9de226a0c44627c4 Time: 0.016189
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xb0bf940d5e0f9f45
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xb0bf940d5e0f9f45 Time: 0.00692419
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x256x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x2ee10e11d6651675
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x2ee10e11d6651675 Time: 0.0167741
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x16x8_stage3_warpsize4x1x1_g1_ffma_aligna4_alignc4 Tactic: 0x9d9fdb5fd9945f64
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x9d9fdb5fd9945f64 Time: 0.00703478
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x64_relu_small_nn_v1 Tactic: 0x3f243c490d502deb
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x3f243c490d502deb Time: 0.00834667
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize32x32x8_stage3_warpsize1x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x90f8f2915f87ed77
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x90f8f2915f87ed77 Time: 0.00666888
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x8e3884f0eaec3ecd
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x8e3884f0eaec3ecd Time: 0.00806172
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_tf32f32_f32_nchwkrsc_nchw_tilesize128x128x16_stage4_warpsize2x2x1_g1_tensor16x8x8_t1r1s1_aligna4_alignc4 Tactic: 0x7f0145cb49517338
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x7f0145cb49517338 Time: 0.0159289
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0xc0b05b61d128e46e
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xc0b05b61d128e46e Time: 0.00867388
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x128_relu_small_nn_v1 Tactic: 0x503619c69ae500ff
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x503619c69ae500ff Time: 0.00953783
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_aligna4_alignc4 Tactic: 0xa31d27de74b895ff
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xa31d27de74b895ff Time: 0.00564888
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_indexed_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x32x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xa9366041633a5135
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xa9366041633a5135 Time: 0.00873412
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize128x64x8_stage3_warpsize2x2x1_g1_ffma_aligna4_alignc4 Tactic: 0x12dbf7d94ee3696d
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x12dbf7d94ee3696d Time: 0.0101035
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x865894c4635db7fd
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x865894c4635db7fd Time: 0.00555323
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize64x128x8_stage3_warpsize1x4x1_g1_ffma_simple_t1r1s1_aligna4_alignc4 Tactic: 0x9cd5cdc35441c505
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x9cd5cdc35441c505 Time: 0.00775242
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x128_relu_medium_nn_v1 Tactic: 0xf067e6205da31c2e
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xf067e6205da31c2e Time: 0.00958659
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xc3cf6e1d1c6aff27
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xc3cf6e1d1c6aff27 Time: 0.00855261
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nchwkcrs_nchw_tilesize256x128x8_stage3_warpsize4x2x1_g1_ffma_aligna4_alignc4 Tactic: 0xbb8c3889c7eacd30
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xbb8c3889c7eacd30 Time: 0.0196389
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x32_relu_small_nn_v1 Tactic: 0xa8609adc4e0ceb90
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xa8609adc4e0ceb90 Time: 0.00812775
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x32_relu_interior_nn_v1 Tactic: 0x9808072e706def96
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x9808072e706def96 Time: 0.00794006
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x64_relu_medium_nn_v1 Tactic: 0xf64396b97c889179
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0xf64396b97c889179 Time: 0.00896
[03/01/2023-14:29:28] [V] [TRT] Fastest Tactic: 0x865894c4635db7fd Time: 0.00555323
[03/01/2023-14:29:28] [V] [TRT] >>>>>>>>>>>>>>> Chose Runner Type: CaskGemmConvolution Tactic: 0x0000000000020331
[03/01/2023-14:29:28] [V] [TRT] *************** Autotuning format combination: Float(24,1,24,24) -> Float(384,1,384,384) ***************
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CublasConvolution)
[03/01/2023-14:29:28] [V] [TRT] CublasConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CaskFlattenConvolution)
[03/01/2023-14:29:28] [V] [TRT] CaskFlattenConvolution has no valid tactics for this config, skipping
[03/01/2023-14:29:28] [V] [TRT] --------------- Timing Runner: Conv_36 (CaskConvolution)
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x32_sliced1x4_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x3e191488237fab8f
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x3e191488237fab8f Time: 0.00644293
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: ampere_scudnn_128x128_ldg4_relu_exp_medium_nhwc_tn_v1 Tactic: 0x7bc32c782b800c48
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x7bc32c782b800c48 Time: 0.00789173
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesize64x64x8_stage3_warpsize1x4x1_g1_ffma_t1r1s1_aligna4_alignc4 Tactic: 0x55d80c17b1cd982d
[03/01/2023-14:29:28] [V] [TRT] Tactic: 0x55d80c17b1cd982d Time: 0.00553073
[03/01/2023-14:29:28] [V] [TRT] Conv_36 Set Tactic Name: sm80_xmma_fprop_implicit_gemm_f32f32_f32f32_f32_nhwckrsc_nhwc_tilesiz